{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4","program":"C:\\Users\\Moi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--crate-name","adler32","C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","-C","metadata=7c616ee957f36ba5","-C","extra-filename=-7c616ee957f36ba5","--out-dir","c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\simple-ga\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\simple-ga\\target\\rls\\debug\\deps","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Moi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\simple-ga\\target\\rls\\debug\\deps\\libadler32-7c616ee957f36ba5.rmeta"},"prelude":{"crate_id":{"name":"adler32","disambiguator":[3155768627312998828,11177504634385952603]},"crate_root":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src","external_crates":[{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":1,"id":{"name":"std","disambiguator":[7051201540145939802,10319888607268705196]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":2,"id":{"name":"core","disambiguator":[1026454463601085204,5956519655747842370]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14346745938995860826,6106505168515399711]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13202720578349867464,1862842275659476996]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5561144063536234256,7715548798258694697]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":6,"id":{"name":"libc","disambiguator":[14610271732418635879,6772691447709284036]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4406516221557685466,15675910168565901142]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15997156870004117332,17234155162274038776]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[5592790853754669538,10741615159245382754]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8783235745414743982,17300328997249526776]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[1439570206316701055,1850678272192971880]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6136169599652282497,8536962176442599555]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1707569757905254316,14241360972436779925]}}],"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":0,"byte_end":9587,"line_start":1,"line_end":307,"column_start":1,"column_end":2}},"imports":[],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":0,"byte_end":9587,"line_start":1,"line_end":307,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":14},{"krate":0,"index":15},{"krate":0,"index":16},{"krate":0,"index":17},{"krate":0,"index":18},{"krate":0,"index":19},{"krate":0,"index":20},{"krate":0,"index":23},{"krate":0,"index":25},{"krate":0,"index":33}],"decl_id":null,"docs":" A minimal implementation of Adler32 for Rust.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":20},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":2935,"byte_end":2949,"line_start":87,"line_end":87,"column_start":12,"column_end":26},"name":"RollingAdler32","qualname":"::RollingAdler32","value":"RollingAdler32 {  }","parent":null,"children":[{"krate":0,"index":21},{"krate":0,"index":22}],"decl_id":null,"docs":" A rolling version of the Adler32 hash, which can 'forget' past bytes.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":26},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3178,"byte_end":3181,"line_start":100,"line_end":100,"column_start":12,"column_end":15},"name":"new","qualname":"<RollingAdler32>::new","value":"fn () -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an empty Adler32 context (with hash 1).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":27},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3315,"byte_end":3325,"line_start":105,"line_end":105,"column_start":12,"column_end":22},"name":"from_value","qualname":"<RollingAdler32>::from_value","value":"fn (adler32: u32) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Creates an Adler32 context with the given initial value.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":28},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3554,"byte_end":3565,"line_start":112,"line_end":112,"column_start":12,"column_end":23},"name":"from_buffer","qualname":"<RollingAdler32>::from_buffer","value":"fn (buffer: &[u8]) -> RollingAdler32","parent":null,"children":[],"decl_id":null,"docs":" Convenience function initializing a context from the hash of a buffer.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":29},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3748,"byte_end":3752,"line_start":119,"line_end":119,"column_start":12,"column_end":16},"name":"hash","qualname":"<RollingAdler32>::hash","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the current hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":30},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3900,"byte_end":3906,"line_start":124,"line_end":124,"column_start":12,"column_end":18},"name":"remove","qualname":"<RollingAdler32>::remove","value":"fn (&mut self, size: usize, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Removes the given `byte` that was fed to the algorithm `size` bytes ago.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":31},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":4284,"byte_end":4290,"line_start":133,"line_end":133,"column_start":12,"column_end":18},"name":"update","qualname":"<RollingAdler32>::update","value":"fn (&mut self, byte: u8) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a new `byte` to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":32},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":4521,"byte_end":4534,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"update_buffer","qualname":"<RollingAdler32>::update_buffer","value":"fn (&mut self, buffer: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Feeds a vector of bytes to the algorithm to update the hash.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":33},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":6107,"byte_end":6114,"line_start":194,"line_end":194,"column_start":8,"column_end":15},"name":"adler32","qualname":"::adler32","value":"fn <R> (mut reader: R) -> io::Result<u32>","parent":null,"children":[],"decl_id":null,"docs":" Consume a Read object and returns the Adler32 hash.\n","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":2996,"byte_end":3010,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":24}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3094,"byte_end":3108,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":26},{"krate":0,"index":27},{"krate":0,"index":28},{"krate":0,"index":29},{"krate":0,"index":30},{"krate":0,"index":31},{"krate":0,"index":32}],"docs":"","sig":null,"attributes":[]}],"refs":[],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":2996,"byte_end":3010,"line_start":92,"line_end":92,"column_start":18,"column_end":32},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":20},"to":{"krate":2,"index":2210}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\adler32-1.0.4\\src\\lib.rs","byte_start":3094,"byte_end":3108,"line_start":98,"line_end":98,"column_start":6,"column_end":20},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":20},"to":{"krate":4294967295,"index":4294967295}}]}