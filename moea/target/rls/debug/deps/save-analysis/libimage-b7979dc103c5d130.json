{"config":{"output_file":null,"full_docs":false,"pub_only":true,"reachable_only":true,"distro_crate":false,"signatures":false,"borrow_data":false},"version":"0.19.0","compilation":{"directory":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0","program":"C:\\Users\\Moi\\.rustup\\toolchains\\stable-x86_64-pc-windows-msvc\\bin\\rls.exe","arguments":["--edition=2018","--crate-name","image","C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","--json=diagnostic-rendered-ansi","--crate-type","lib","--emit=dep-info,metadata","-C","debuginfo=2","--cfg","feature=\"bmp\"","--cfg","feature=\"dds\"","--cfg","feature=\"default\"","--cfg","feature=\"dxt\"","--cfg","feature=\"gif\"","--cfg","feature=\"hdr\"","--cfg","feature=\"ico\"","--cfg","feature=\"jpeg\"","--cfg","feature=\"jpeg_rayon\"","--cfg","feature=\"png\"","--cfg","feature=\"pnm\"","--cfg","feature=\"scoped_threadpool\"","--cfg","feature=\"tga\"","--cfg","feature=\"tiff\"","--cfg","feature=\"webp\"","-C","metadata=b7979dc103c5d130","-C","extra-filename=-b7979dc103c5d130","--out-dir","c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps","-L","dependency=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps","--extern","bytemuck=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libbytemuck-4e74a9cb927c8d3d.rmeta","--extern","byteorder=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libbyteorder-afc26bd3420c5687.rmeta","--extern","gif=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libgif-cc018b91421720f0.rmeta","--extern","jpeg=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libjpeg_decoder-22cce07c1d54d22c.rmeta","--extern","num_iter=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libnum_iter-3641b49825297115.rmeta","--extern","num_rational=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libnum_rational-f03eaa4ff55f8faf.rmeta","--extern","num_traits=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libnum_traits-99f251cab81f87cb.rmeta","--extern","png=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libpng-8be51d660316a166.rmeta","--extern","scoped_threadpool=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libscoped_threadpool-d6767e54a263f8b8.rmeta","--extern","tiff=c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libtiff-fcc3a3256652a0fb.rmeta","--cap-lints","allow","--error-format=json","--sysroot","C:\\Users\\Moi\\.rustup/toolchains/stable-x86_64-pc-windows-msvc"],"output":"c:\\Users\\Moi\\Desktop\\Desktop\\EPFL\\Bachelor\\BA6\\IT3708-Bio-Inspired-Artificial-Intelligence\\GeneticAlgoProject2\\moea\\target\\rls\\debug\\deps\\libimage-b7979dc103c5d130.rmeta"},"prelude":{"crate_id":{"name":"image","disambiguator":[16750302844857589503,4050888700866495961]},"crate_root":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src","external_crates":[{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":1,"id":{"name":"std","disambiguator":[7051201540145939802,10319888607268705196]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":2,"id":{"name":"core","disambiguator":[1026454463601085204,5956519655747842370]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":3,"id":{"name":"compiler_builtins","disambiguator":[14346745938995860826,6106505168515399711]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":4,"id":{"name":"rustc_std_workspace_core","disambiguator":[13202720578349867464,1862842275659476996]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":5,"id":{"name":"alloc","disambiguator":[5561144063536234256,7715548798258694697]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":6,"id":{"name":"libc","disambiguator":[14610271732418635879,6772691447709284036]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":7,"id":{"name":"unwind","disambiguator":[4406516221557685466,15675910168565901142]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":8,"id":{"name":"cfg_if","disambiguator":[15997156870004117332,17234155162274038776]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":9,"id":{"name":"backtrace","disambiguator":[5592790853754669538,10741615159245382754]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":10,"id":{"name":"rustc_demangle","disambiguator":[8783235745414743982,17300328997249526776]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":11,"id":{"name":"hashbrown","disambiguator":[1439570206316701055,1850678272192971880]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":12,"id":{"name":"rustc_std_workspace_alloc","disambiguator":[6136169599652282497,8536962176442599555]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","num":13,"id":{"name":"panic_unwind","disambiguator":[1707569757905254316,14241360972436779925]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","num":14,"id":{"name":"tiff","disambiguator":[17775597026464874196,9853996947061807187]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","num":15,"id":{"name":"byteorder","disambiguator":[10276778254983504112,6002774992519998723]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","num":16,"id":{"name":"lzw","disambiguator":[4934983489315034555,18210165532762331087]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","num":17,"id":{"name":"miniz_oxide","disambiguator":[5000622870180610595,4807613532993354784]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","num":18,"id":{"name":"adler32","disambiguator":[3155768627312998828,11177504634385952603]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","num":19,"id":{"name":"num_traits","disambiguator":[10308899806705613020,7182718893036646979]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","num":20,"id":{"name":"gif","disambiguator":[7865517820171477621,1870490329656729368]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","num":21,"id":{"name":"color_quant","disambiguator":[8507981674862868802,12160289590609334689]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","num":22,"id":{"name":"num_rational","disambiguator":[6363745222399842548,5732285841309524763]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","num":23,"id":{"name":"num_integer","disambiguator":[10415465104460066354,16437949684304675165]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","num":24,"id":{"name":"scoped_threadpool","disambiguator":[16948996855613418613,6134985202721104185]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":25,"id":{"name":"jpeg_decoder","disambiguator":[17967144899427605596,14562523635485281209]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":26,"id":{"name":"rayon","disambiguator":[13944728742526740461,9788291508756614682]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":27,"id":{"name":"either","disambiguator":[5963378088336763841,12684060604675664791]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":28,"id":{"name":"crossbeam_deque","disambiguator":[2384706065156888435,8795103452340749106]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":29,"id":{"name":"crossbeam_epoch","disambiguator":[8415660526225778231,11379164393416234254]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":30,"id":{"name":"cfg_if","disambiguator":[16193489346486057439,10115818480974689788]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":31,"id":{"name":"maybe_uninit","disambiguator":[6892191188241455194,2930084882641041903]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":32,"id":{"name":"crossbeam_utils","disambiguator":[18320014373117925277,7597786268972005126]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":33,"id":{"name":"lazy_static","disambiguator":[15817346308253555387,17644499933506461506]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":34,"id":{"name":"memoffset","disambiguator":[15155051655236690488,3467168176005355843]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":35,"id":{"name":"scopeguard","disambiguator":[7029170161094268952,17932251461488499500]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":36,"id":{"name":"rayon_core","disambiguator":[9582815193552094650,14104216746706522777]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":37,"id":{"name":"crossbeam_queue","disambiguator":[11354968086673594328,4296997558231073151]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","num":38,"id":{"name":"num_cpus","disambiguator":[15722949791164948464,5798343254125314811]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","num":39,"id":{"name":"num_iter","disambiguator":[999270817679090229,6709808965816279853]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","num":40,"id":{"name":"png","disambiguator":[1533093851443725236,18344180653987921199]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","num":41,"id":{"name":"bitflags","disambiguator":[15379459816181700401,16178506098079787830]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","num":42,"id":{"name":"crc32fast","disambiguator":[5151929797838702046,17399664531045992448]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","num":43,"id":{"name":"inflate","disambiguator":[16624125505940239289,3490428132827213488]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","num":44,"id":{"name":"deflate","disambiguator":[6741645129027276701,10515740697731176643]}},{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","num":45,"id":{"name":"bytemuck","disambiguator":[1472482911971379898,5230437089579143137]}}],"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":0,"byte_end":3282,"line_start":1,"line_end":141,"column_start":1,"column_end":2}},"imports":[{"kind":"Use","ref_id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":571,"byte_end":580,"line_start":23,"line_end":23,"column_start":24,"column_end":33},"alias_span":null,"name":"ColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":582,"byte_end":599,"line_start":23,"line_end":23,"column_start":35,"column_end":52},"alias_span":null,"name":"ExtendedColorType","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":626,"byte_end":630,"line_start":25,"line_end":25,"column_start":24,"column_end":28},"alias_span":null,"name":"Luma","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":632,"byte_end":637,"line_start":25,"line_end":25,"column_start":30,"column_end":35},"alias_span":null,"name":"LumaA","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4717},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":639,"byte_end":642,"line_start":25,"line_end":25,"column_start":37,"column_end":40},"alias_span":null,"name":"Rgb","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":644,"byte_end":648,"line_start":25,"line_end":25,"column_start":42,"column_end":46},"alias_span":null,"name":"Rgba","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4746},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":650,"byte_end":653,"line_start":25,"line_end":25,"column_start":48,"column_end":51},"alias_span":null,"name":"Bgr","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":655,"byte_end":659,"line_start":25,"line_end":25,"column_start":53,"column_end":57},"alias_span":null,"name":"Bgra","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":686,"byte_end":696,"line_start":27,"line_end":27,"column_start":24,"column_end":34},"alias_span":null,"name":"ImageError","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":698,"byte_end":709,"line_start":27,"line_end":27,"column_start":36,"column_end":47},"alias_span":null,"name":"ImageResult","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":736,"byte_end":752,"line_start":29,"line_end":29,"column_start":24,"column_end":40},"alias_span":null,"name":"AnimationDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":770,"byte_end":782,"line_start":30,"line_end":30,"column_start":17,"column_end":29},"alias_span":null,"name":"GenericImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":800,"byte_end":816,"line_start":31,"line_end":31,"column_start":17,"column_end":33},"alias_span":null,"name":"GenericImageView","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":834,"byte_end":846,"line_start":32,"line_end":32,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageDecoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":864,"byte_end":879,"line_start":33,"line_end":33,"column_start":17,"column_end":32},"alias_span":null,"name":"ImageDecoderExt","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":897,"byte_end":909,"line_start":34,"line_end":34,"column_start":17,"column_end":29},"alias_span":null,"name":"ImageEncoder","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":927,"byte_end":938,"line_start":35,"line_end":35,"column_start":17,"column_end":28},"alias_span":null,"name":"ImageFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5016},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":956,"byte_end":973,"line_start":36,"line_end":36,"column_start":17,"column_end":34},"alias_span":null,"name":"ImageOutputFormat","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":991,"byte_end":999,"line_start":37,"line_end":37,"column_start":17,"column_end":25},"alias_span":null,"name":"Progress","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1046,"byte_end":1052,"line_start":39,"line_end":39,"column_start":17,"column_end":23},"alias_span":null,"name":"Pixels","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1070,"byte_end":1078,"line_start":40,"line_end":40,"column_start":17,"column_end":25},"alias_span":null,"name":"SubImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1106,"byte_end":1119,"line_start":42,"line_end":42,"column_start":25,"column_end":38},"alias_span":null,"name":"ConvertBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1138,"byte_end":1152,"line_start":43,"line_end":43,"column_start":18,"column_end":32},"alias_span":null,"name":"GrayAlphaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1171,"byte_end":1180,"line_start":44,"line_end":44,"column_start":18,"column_end":27},"alias_span":null,"name":"GrayImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1231,"byte_end":1242,"line_start":46,"line_end":46,"column_start":18,"column_end":29},"alias_span":null,"name":"ImageBuffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1261,"byte_end":1266,"line_start":47,"line_end":47,"column_start":18,"column_end":23},"alias_span":null,"name":"Pixel","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1285,"byte_end":1293,"line_start":48,"line_end":48,"column_start":18,"column_end":26},"alias_span":null,"name":"RgbImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1312,"byte_end":1321,"line_start":49,"line_end":49,"column_start":18,"column_end":27},"alias_span":null,"name":"RgbaImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1365,"byte_end":1376,"line_start":52,"line_end":52,"column_start":22,"column_end":33},"alias_span":null,"name":"FlatSamples","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1412,"byte_end":1421,"line_start":55,"line_end":55,"column_start":24,"column_end":33},"alias_span":null,"name":"Primitive","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1490,"byte_end":1502,"line_start":58,"line_end":58,"column_start":37,"column_end":49},"alias_span":null,"name":"guess_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1504,"byte_end":1508,"line_start":58,"line_end":58,"column_start":51,"column_end":55},"alias_span":null,"name":"load","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1537,"byte_end":1553,"line_start":59,"line_end":59,"column_start":27,"column_end":43},"alias_span":null,"name":"load_from_memory","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1555,"byte_end":1583,"line_start":59,"line_end":59,"column_start":45,"column_end":73},"alias_span":null,"name":"load_from_memory_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1585,"byte_end":1589,"line_start":59,"line_end":59,"column_start":75,"column_end":79},"alias_span":null,"name":"open","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1610,"byte_end":1621,"line_start":60,"line_end":60,"column_start":20,"column_end":31},"alias_span":null,"name":"save_buffer","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1623,"byte_end":1646,"line_start":60,"line_end":60,"column_start":33,"column_end":56},"alias_span":null,"name":"save_buffer_with_format","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1648,"byte_end":1664,"line_start":60,"line_end":60,"column_start":58,"column_end":74},"alias_span":null,"name":"image_dimensions","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1693,"byte_end":1705,"line_start":62,"line_end":62,"column_start":26,"column_end":38},"alias_span":null,"name":"DynamicImage","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1735,"byte_end":1740,"line_start":64,"line_end":64,"column_start":28,"column_end":33},"alias_span":null,"name":"Delay","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1742,"byte_end":1747,"line_start":64,"line_end":64,"column_start":35,"column_end":40},"alias_span":null,"name":"Frame","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1749,"byte_end":1755,"line_start":64,"line_end":64,"column_start":42,"column_end":48},"alias_span":null,"name":"Frames","value":"","parent":{"krate":0,"index":0}},{"kind":"Use","ref_id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\mod.rs","byte_start":23710,"byte_end":23714,"line_start":6,"line_end":6,"column_start":21,"column_end":25},"alias_span":null,"name":"Rect","value":"","parent":{"krate":0,"index":136}},{"kind":"Use","ref_id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39024,"byte_end":39034,"line_start":8,"line_end":8,"column_start":23,"column_end":33},"alias_span":null,"name":"FilterType","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39072,"byte_end":39082,"line_start":10,"line_end":10,"column_start":36,"column_end":46},"alias_span":null,"name":"CatmullRom","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39084,"byte_end":39092,"line_start":10,"line_end":10,"column_start":48,"column_end":56},"alias_span":null,"name":"Gaussian","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39094,"byte_end":39102,"line_start":10,"line_end":10,"column_start":58,"column_end":66},"alias_span":null,"name":"Lanczos3","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39104,"byte_end":39111,"line_start":10,"line_end":10,"column_start":68,"column_end":75},"alias_span":null,"name":"Nearest","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39113,"byte_end":39121,"line_start":10,"line_end":10,"column_start":77,"column_end":85},"alias_span":null,"name":"Triangle","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39180,"byte_end":39195,"line_start":14,"line_end":14,"column_start":5,"column_end":20},"alias_span":null,"name":"flip_horizontal","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39197,"byte_end":39221,"line_start":14,"line_end":14,"column_start":22,"column_end":46},"alias_span":null,"name":"flip_horizontal_in_place","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39223,"byte_end":39236,"line_start":14,"line_end":14,"column_start":48,"column_end":61},"alias_span":null,"name":"flip_vertical","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39238,"byte_end":39260,"line_start":14,"line_end":14,"column_start":63,"column_end":85},"alias_span":null,"name":"flip_vertical_in_place","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39262,"byte_end":39271,"line_start":14,"line_end":14,"column_start":87,"column_end":96},"alias_span":null,"name":"rotate180","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39277,"byte_end":39295,"line_start":15,"line_end":15,"column_start":5,"column_end":23},"alias_span":null,"name":"rotate180_in_place","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39297,"byte_end":39306,"line_start":15,"line_end":15,"column_start":25,"column_end":34},"alias_span":null,"name":"rotate270","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39308,"byte_end":39316,"line_start":15,"line_end":15,"column_start":36,"column_end":44},"alias_span":null,"name":"rotate90","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39318,"byte_end":39330,"line_start":15,"line_end":15,"column_start":46,"column_end":58},"alias_span":null,"name":"rotate180_in","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39332,"byte_end":39343,"line_start":15,"line_end":15,"column_start":60,"column_end":71},"alias_span":null,"name":"rotate90_in","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39345,"byte_end":39357,"line_start":15,"line_end":15,"column_start":73,"column_end":85},"alias_span":null,"name":"rotate270_in","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39359,"byte_end":39377,"line_start":15,"line_end":15,"column_start":87,"column_end":105},"alias_span":null,"name":"flip_horizontal_in","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39379,"byte_end":39395,"line_start":15,"line_end":15,"column_start":107,"column_end":123},"alias_span":null,"name":"flip_vertical_in","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39442,"byte_end":39446,"line_start":19,"line_end":19,"column_start":24,"column_end":28},"alias_span":null,"name":"blur","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39448,"byte_end":39457,"line_start":19,"line_end":19,"column_start":30,"column_end":39},"alias_span":null,"name":"filter3x3","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39459,"byte_end":39465,"line_start":19,"line_end":19,"column_start":41,"column_end":47},"alias_span":null,"name":"resize","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39467,"byte_end":39476,"line_start":19,"line_end":19,"column_start":49,"column_end":58},"alias_span":null,"name":"thumbnail","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39478,"byte_end":39487,"line_start":19,"line_end":19,"column_start":60,"column_end":69},"alias_span":null,"name":"unsharpen","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39537,"byte_end":39545,"line_start":22,"line_end":22,"column_start":26,"column_end":34},"alias_span":null,"name":"brighten","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39547,"byte_end":39555,"line_start":22,"line_end":22,"column_start":36,"column_end":44},"alias_span":null,"name":"contrast","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39557,"byte_end":39563,"line_start":22,"line_end":22,"column_start":46,"column_end":52},"alias_span":null,"name":"dither","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39565,"byte_end":39574,"line_start":22,"line_end":22,"column_start":54,"column_end":63},"alias_span":null,"name":"grayscale","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39576,"byte_end":39585,"line_start":22,"line_end":22,"column_start":65,"column_end":74},"alias_span":null,"name":"huerotate","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39587,"byte_end":39599,"line_start":22,"line_end":22,"column_start":76,"column_end":88},"alias_span":null,"name":"index_colors","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39601,"byte_end":39607,"line_start":22,"line_end":22,"column_start":90,"column_end":96},"alias_span":null,"name":"invert","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39634,"byte_end":39641,"line_start":23,"line_end":23,"column_start":26,"column_end":33},"alias_span":null,"name":"BiLevel","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39643,"byte_end":39651,"line_start":23,"line_end":23,"column_start":35,"column_end":43},"alias_span":null,"name":"ColorMap","value":"","parent":{"krate":0,"index":180}},{"kind":"Use","ref_id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\mod.rs","byte_start":96011,"byte_end":96017,"line_start":5,"line_end":5,"column_start":23,"column_end":29},"alias_span":null,"name":"Reader","value":"","parent":{"krate":0,"index":420}},{"kind":"Use","ref_id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\mod.rs","byte_start":173925,"byte_end":173935,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"BmpDecoder","value":"","parent":{"krate":0,"index":677}},{"kind":"Use","ref_id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\mod.rs","byte_start":173960,"byte_end":173970,"line_start":11,"line_end":11,"column_start":24,"column_end":34},"alias_span":null,"name":"BMPEncoder","value":"","parent":{"krate":0,"index":677}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\mod.rs","byte_start":282879,"byte_end":282880,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"HDRAdapter, SIGNATURE, rgbe8, RGBE8Pixel","parent":{"krate":0,"index":1161}},{"kind":"GlobUse","ref_id":null,"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\mod.rs","byte_start":282879,"byte_end":282880,"line_start":14,"line_end":14,"column_start":24,"column_end":25},"alias_span":null,"name":"*","value":"","parent":{"krate":0,"index":1161}},{"kind":"Use","ref_id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\mod.rs","byte_start":330640,"byte_end":330650,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"IcoDecoder","value":"","parent":{"krate":0,"index":1373}},{"kind":"Use","ref_id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\mod.rs","byte_start":330675,"byte_end":330685,"line_start":10,"line_end":10,"column_start":24,"column_end":34},"alias_span":null,"name":"ICOEncoder","value":"","parent":{"krate":0,"index":1373}},{"kind":"Use","ref_id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","byte_start":343848,"byte_end":343859,"line_start":10,"line_end":10,"column_start":24,"column_end":35},"alias_span":null,"name":"JpegDecoder","value":"","parent":{"krate":0,"index":1480}},{"kind":"Use","ref_id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","byte_start":343885,"byte_end":343896,"line_start":11,"line_end":11,"column_start":25,"column_end":36},"alias_span":null,"name":"JPEGEncoder","value":"","parent":{"krate":0,"index":1480}},{"kind":"Use","ref_id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","byte_start":343898,"byte_end":343910,"line_start":11,"line_end":11,"column_start":38,"column_end":50},"alias_span":null,"name":"PixelDensity","value":"","parent":{"krate":0,"index":1480}},{"kind":"Use","ref_id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","byte_start":343912,"byte_end":343928,"line_start":11,"line_end":11,"column_start":52,"column_end":68},"alias_span":null,"name":"PixelDensityUnit","value":"","parent":{"krate":0,"index":1480}},{"kind":"Use","ref_id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397451,"byte_end":397461,"line_start":7,"line_end":7,"column_start":24,"column_end":34},"alias_span":null,"name":"PnmDecoder","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397486,"byte_end":397496,"line_start":8,"line_end":8,"column_start":24,"column_end":34},"alias_span":null,"name":"PNMEncoder","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397553,"byte_end":397568,"line_start":10,"line_end":10,"column_start":24,"column_end":39},"alias_span":null,"name":"ArbitraryHeader","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4095},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397570,"byte_end":397587,"line_start":10,"line_end":10,"column_start":41,"column_end":58},"alias_span":null,"name":"ArbitraryTuplType","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397589,"byte_end":397601,"line_start":10,"line_end":10,"column_start":60,"column_end":72},"alias_span":null,"name":"BitmapHeader","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397603,"byte_end":397616,"line_start":10,"line_end":10,"column_start":74,"column_end":87},"alias_span":null,"name":"GraymapHeader","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397641,"byte_end":397653,"line_start":11,"line_end":11,"column_start":24,"column_end":36},"alias_span":null,"name":"PixmapHeader","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397679,"byte_end":397688,"line_start":12,"line_end":12,"column_start":24,"column_end":33},"alias_span":null,"name":"PNMHeader","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397690,"byte_end":397700,"line_start":12,"line_end":12,"column_start":35,"column_end":45},"alias_span":null,"name":"PNMSubtype","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":397702,"byte_end":397716,"line_start":12,"line_end":12,"column_start":47,"column_end":61},"alias_span":null,"name":"SampleEncoding","value":"","parent":{"krate":0,"index":1733}},{"kind":"Use","ref_id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\mod.rs","byte_start":479276,"byte_end":479286,"line_start":9,"line_end":9,"column_start":24,"column_end":34},"alias_span":null,"name":"TgaDecoder","value":"","parent":{"krate":0,"index":2090}},{"kind":"Use","ref_id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\mod.rs","byte_start":502965,"byte_end":502976,"line_start":3,"line_end":3,"column_start":24,"column_end":35},"alias_span":null,"name":"WebPDecoder","value":"","parent":{"krate":0,"index":2257}}],"defs":[{"kind":"Mod","id":{"krate":0,"index":0},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":0,"byte_end":3282,"line_start":1,"line_end":141,"column_start":1,"column_end":2},"name":"","qualname":"::","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","parent":null,"children":[{"krate":0,"index":10},{"krate":0,"index":11},{"krate":0,"index":12},{"krate":0,"index":13},{"krate":0,"index":16},{"krate":0,"index":23},{"krate":0,"index":26},{"krate":0,"index":38},{"krate":0,"index":46},{"krate":0,"index":47},{"krate":0,"index":48},{"krate":0,"index":51},{"krate":0,"index":58},{"krate":0,"index":59},{"krate":0,"index":63},{"krate":0,"index":136},{"krate":0,"index":180},{"krate":0,"index":420},{"krate":0,"index":520},{"krate":0,"index":677},{"krate":0,"index":909},{"krate":0,"index":948},{"krate":0,"index":1062},{"krate":0,"index":1161},{"krate":0,"index":1373},{"krate":0,"index":1480},{"krate":0,"index":1661},{"krate":0,"index":1733},{"krate":0,"index":2090},{"krate":0,"index":2194},{"krate":0,"index":2257},{"krate":0,"index":2491},{"krate":0,"index":2531},{"krate":0,"index":2870},{"krate":0,"index":3063},{"krate":0,"index":3210},{"krate":0,"index":3356},{"krate":0,"index":3394},{"krate":0,"index":3407},{"krate":0,"index":5107},{"krate":0,"index":3408}],"decl_id":null,"docs":" This crate provides native rust implementations of\n image encoders and decoders and basic image manipulation\n functions.\n","sig":null,"attributes":[{"value":"warn(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":132,"byte_end":154,"line_start":5,"line_end":5,"column_start":1,"column_end":23}},{"value":"warn(unused_qualifications)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":155,"byte_end":186,"line_start":6,"line_end":6,"column_start":1,"column_end":32}},{"value":"deny(unreachable_pub)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":187,"byte_end":212,"line_start":7,"line_end":7,"column_start":1,"column_end":26}},{"value":"deny(deprecated)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":213,"byte_end":233,"line_start":8,"line_end":8,"column_start":1,"column_end":21}},{"value":"deny(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":234,"byte_end":272,"line_start":9,"line_end":9,"column_start":1,"column_end":39}},{"value":"allow(clippy :: many_single_char_names)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":370,"byte_end":411,"line_start":12,"line_end":12,"column_start":1,"column_end":42}}]},{"kind":"Mod","id":{"krate":0,"index":63},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"error","qualname":"::error","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","parent":null,"children":[{"krate":0,"index":64},{"krate":0,"index":67},{"krate":0,"index":68},{"krate":0,"index":69},{"krate":0,"index":70},{"krate":0,"index":3409},{"krate":0,"index":3428},{"krate":0,"index":3430},{"krate":0,"index":3433},{"krate":0,"index":3435},{"krate":0,"index":3457},{"krate":0,"index":3455},{"krate":0,"index":3452},{"krate":0,"index":3448},{"krate":0,"index":3449},{"krate":0,"index":3459},{"krate":0,"index":3462},{"krate":0,"index":3464},{"krate":0,"index":3467},{"krate":0,"index":3469},{"krate":0,"index":3489},{"krate":0,"index":3487},{"krate":0,"index":3484},{"krate":0,"index":3480},{"krate":0,"index":3481},{"krate":0,"index":3491},{"krate":0,"index":3495},{"krate":0,"index":3497},{"krate":0,"index":3499},{"krate":0,"index":3501},{"krate":0,"index":3521},{"krate":0,"index":3519},{"krate":0,"index":3516},{"krate":0,"index":3512},{"krate":0,"index":3513},{"krate":0,"index":3509},{"krate":0,"index":3510},{"krate":0,"index":3523},{"krate":0,"index":3547},{"krate":0,"index":3545},{"krate":0,"index":3542},{"krate":0,"index":3538},{"krate":0,"index":3539},{"krate":0,"index":71},{"krate":0,"index":78},{"krate":0,"index":83},{"krate":0,"index":91},{"krate":0,"index":96},{"krate":0,"index":99},{"krate":0,"index":102},{"krate":0,"index":104},{"krate":0,"index":106},{"krate":0,"index":108},{"krate":0,"index":110},{"krate":0,"index":112},{"krate":0,"index":114},{"krate":0,"index":116},{"krate":0,"index":118},{"krate":0,"index":119},{"krate":0,"index":121},{"krate":0,"index":123},{"krate":0,"index":125},{"krate":0,"index":127},{"krate":0,"index":129},{"krate":0,"index":131},{"krate":0,"index":133},{"krate":0,"index":134}],"decl_id":null,"docs":" Contains detailed error representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3410},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":4933,"byte_end":4941,"line_start":34,"line_end":34,"column_start":5,"column_end":13},"name":"Decoding","qualname":"::error::ImageError::Decoding","value":"ImageError::Decoding(DecodingError)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An error was encountered while decoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3413},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":5327,"byte_end":5335,"line_start":42,"line_end":42,"column_start":5,"column_end":13},"name":"Encoding","qualname":"::error::ImageError::Encoding","value":"ImageError::Encoding(EncodingError)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An error was encountered while encoding.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3416},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":5575,"byte_end":5584,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"Parameter","qualname":"::error::ImageError::Parameter","value":"ImageError::Parameter(ParameterError)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An error was encountered in input arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3419},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":5844,"byte_end":5850,"line_start":54,"line_end":54,"column_start":5,"column_end":11},"name":"Limits","qualname":"::error::ImageError::Limits","value":"ImageError::Limits(LimitError)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3422},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6188,"byte_end":6199,"line_start":62,"line_end":62,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::error::ImageError::Unsupported","value":"ImageError::Unsupported(UnsupportedError)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An operation can not be completed by the chosen abstraction.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3425},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6290,"byte_end":6297,"line_start":65,"line_end":65,"column_start":5,"column_end":12},"name":"IoError","qualname":"::error::ImageError::IoError","value":"ImageError::IoError(io::Error)","parent":{"krate":0,"index":3409},"children":[],"decl_id":null,"docs":" An error occurred while interacting with the environment.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3409},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":4633,"byte_end":4643,"line_start":28,"line_end":28,"column_start":10,"column_end":20},"name":"ImageError","qualname":"::error::ImageError","value":"ImageError::{Decoding, Encoding, Parameter, Limits, Unsupported, IoError}","parent":null,"children":[{"krate":0,"index":3410},{"krate":0,"index":3413},{"krate":0,"index":3416},{"krate":0,"index":3419},{"krate":0,"index":3422},{"krate":0,"index":3425}],"decl_id":null,"docs":" The generic error type for image operations.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3430},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6529,"byte_end":6545,"line_start":74,"line_end":74,"column_start":12,"column_end":28},"name":"UnsupportedError","qualname":"::error::UnsupportedError","value":"UnsupportedError {  }","parent":null,"children":[{"krate":0,"index":3431},{"krate":0,"index":3432}],"decl_id":null,"docs":" The implementation for an operation was not provided.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3436},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6784,"byte_end":6789,"line_start":83,"line_end":83,"column_start":5,"column_end":10},"name":"Color","qualname":"::error::UnsupportedErrorKind::Color","value":"UnsupportedErrorKind::Color(ExtendedColorType)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" The required color type can not be handled.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3439},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6856,"byte_end":6862,"line_start":85,"line_end":85,"column_start":5,"column_end":11},"name":"Format","qualname":"::error::UnsupportedErrorKind::Format","value":"UnsupportedErrorKind::Format(ImageFormatHint)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" An image format is not supported.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3442},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":7006,"byte_end":7020,"line_start":88,"line_end":88,"column_start":5,"column_end":19},"name":"GenericFeature","qualname":"::error::UnsupportedErrorKind::GenericFeature","value":"UnsupportedErrorKind::GenericFeature(String)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":" Some feature specified by string.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3445},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":7053,"byte_end":7068,"line_start":90,"line_end":90,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::UnsupportedErrorKind::__NonExhaustive","value":"UnsupportedErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3435},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3435},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":6705,"byte_end":6725,"line_start":81,"line_end":81,"column_start":10,"column_end":30},"name":"UnsupportedErrorKind","qualname":"::error::UnsupportedErrorKind","value":"UnsupportedErrorKind::{Color, Format, GenericFeature, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3436},{"krate":0,"index":3439},{"krate":0,"index":3442},{"krate":0,"index":3445}],"decl_id":null,"docs":" Details what feature is not supported.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3459},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":7387,"byte_end":7400,"line_start":100,"line_end":100,"column_start":12,"column_end":25},"name":"EncodingError","qualname":"::error::EncodingError","value":"EncodingError {  }","parent":null,"children":[{"krate":0,"index":3460},{"krate":0,"index":3461}],"decl_id":null,"docs":" An error was encountered while encoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3464},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":7782,"byte_end":7796,"line_start":113,"line_end":113,"column_start":12,"column_end":26},"name":"ParameterError","qualname":"::error::ParameterError","value":"ParameterError {  }","parent":null,"children":[{"krate":0,"index":3465},{"krate":0,"index":3466}],"decl_id":null,"docs":" An error was encountered in inputs arguments.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3470},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":8095,"byte_end":8108,"line_start":122,"line_end":122,"column_start":5,"column_end":18},"name":"FailedAlready","qualname":"::error::ParameterErrorKind::FailedAlready","value":"ParameterErrorKind::FailedAlready","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":" Repeated an operation for which error that could not be cloned was emitted already.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3472},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":8155,"byte_end":8172,"line_start":124,"line_end":124,"column_start":5,"column_end":22},"name":"DimensionMismatch","qualname":"::error::ParameterErrorKind::DimensionMismatch","value":"ParameterErrorKind::DimensionMismatch","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":" The dimensions passed are wrong.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3474},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":8300,"byte_end":8307,"line_start":127,"line_end":127,"column_start":5,"column_end":12},"name":"Generic","qualname":"::error::ParameterErrorKind::Generic","value":"ParameterErrorKind::Generic(String)","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":" A string describing the parameter.\n This is discouraged and is likely to get deprecated (but not removed).\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3477},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":8399,"byte_end":8414,"line_start":130,"line_end":130,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ParameterErrorKind::__NonExhaustive","value":"ParameterErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3469},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3469},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":7978,"byte_end":7996,"line_start":120,"line_end":120,"column_start":10,"column_end":28},"name":"ParameterErrorKind","qualname":"::error::ParameterErrorKind","value":"ParameterErrorKind::{FailedAlready, DimensionMismatch, Generic, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3470},{"krate":0,"index":3472},{"krate":0,"index":3474},{"krate":0,"index":3477}],"decl_id":null,"docs":" Details how a parameter is malformed.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3491},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":8733,"byte_end":8746,"line_start":140,"line_end":140,"column_start":12,"column_end":25},"name":"DecodingError","qualname":"::error::DecodingError","value":"DecodingError {  }","parent":null,"children":[{"krate":0,"index":3492},{"krate":0,"index":3493},{"krate":0,"index":3494}],"decl_id":null,"docs":" An error was encountered while decoding an image.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3497},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9177,"byte_end":9187,"line_start":153,"line_end":153,"column_start":12,"column_end":22},"name":"LimitError","qualname":"::error::LimitError","value":"LimitError {  }","parent":null,"children":[{"krate":0,"index":3498}],"decl_id":null,"docs":" Completing the operation would have required more resources than allowed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3502},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9719,"byte_end":9733,"line_start":166,"line_end":166,"column_start":5,"column_end":19},"name":"DimensionError","qualname":"::error::LimitErrorKind::DimensionError","value":"LimitErrorKind::DimensionError","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":" The resulting image exceed dimension limits in either direction.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3504},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9817,"byte_end":9835,"line_start":168,"line_end":168,"column_start":5,"column_end":23},"name":"InsufficientMemory","qualname":"::error::LimitErrorKind::InsufficientMemory","value":"LimitErrorKind::InsufficientMemory","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":" The operation would have performed an allocation larger than allowed.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3506},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9919,"byte_end":9934,"line_start":171,"line_end":171,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::LimitErrorKind::__NonExhaustive","value":"LimitErrorKind::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3501},"children":[],"decl_id":null,"docs":" Do not use this, not part of stability guarantees.\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3501},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9625,"byte_end":9639,"line_start":164,"line_end":164,"column_start":10,"column_end":24},"name":"LimitErrorKind","qualname":"::error::LimitErrorKind","value":"LimitErrorKind::{DimensionError, InsufficientMemory, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3502},{"krate":0,"index":3504},{"krate":0,"index":3506}],"decl_id":null,"docs":" Indicates the limit that prevented an operation from completing.","sig":null,"attributes":[{"value":"allow(missing_copy_implementations)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":9541,"byte_end":9579,"line_start":163,"line_end":163,"column_start":1,"column_end":39}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3524},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10121,"byte_end":10126,"line_start":178,"line_end":178,"column_start":5,"column_end":10},"name":"Exact","qualname":"::error::ImageFormatHint::Exact","value":"ImageFormatHint::Exact(ImageFormat)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" The format is known exactly.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3527},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10194,"byte_end":10198,"line_start":181,"line_end":181,"column_start":5,"column_end":9},"name":"Name","qualname":"::error::ImageFormatHint::Name","value":"ImageFormatHint::Name(String)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" The format can be identified by a name.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3530},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10270,"byte_end":10283,"line_start":184,"line_end":184,"column_start":5,"column_end":18},"name":"PathExtension","qualname":"::error::ImageFormatHint::PathExtension","value":"ImageFormatHint::PathExtension(std::path::PathBuf)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" A common path extension for the format is known.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3533},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10370,"byte_end":10377,"line_start":187,"line_end":187,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::error::ImageFormatHint::Unknown","value":"ImageFormatHint::Unknown","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":" The format is not known or could not be determined.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3535},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10403,"byte_end":10418,"line_start":190,"line_end":190,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::error::ImageFormatHint::__NonExhaustive","value":"ImageFormatHint::__NonExhaustive(NonExhaustiveMarker)","parent":{"krate":0,"index":3523},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3523},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10062,"byte_end":10077,"line_start":176,"line_end":176,"column_start":10,"column_end":25},"name":"ImageFormatHint","qualname":"::error::ImageFormatHint","value":"ImageFormatHint::{Exact, Name, PathExtension, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":3524},{"krate":0,"index":3527},{"krate":0,"index":3530},{"krate":0,"index":3533},{"krate":0,"index":3535}],"decl_id":null,"docs":" A best effort representation for image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":79},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":11876,"byte_end":11896,"line_start":235,"line_end":235,"column_start":12,"column_end":32},"name":"from_format_and_kind","qualname":"<UnsupportedError>::from_format_and_kind","value":"fn (format: ImageFormatHint, kind: UnsupportedErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `UnsupportedError` for an image with details on the unsupported feature.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":81},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":12410,"byte_end":12414,"line_start":251,"line_end":251,"column_start":12,"column_end":16},"name":"kind","qualname":"<UnsupportedError>::kind","value":"fn (&self) -> UnsupportedErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `UnsupportedErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":82},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":12553,"byte_end":12564,"line_start":256,"line_end":256,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<UnsupportedError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":84},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":12756,"byte_end":12759,"line_start":263,"line_end":263,"column_start":12,"column_end":15},"name":"new","qualname":"<DecodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` that stems from an arbitrary error of an underlying decoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":86},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":13154,"byte_end":13170,"line_start":277,"line_end":277,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<DecodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":87},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":13396,"byte_end":13407,"line_start":286,"line_end":286,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<DecodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Returns the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":92},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":14514,"byte_end":14517,"line_start":323,"line_end":323,"column_start":12,"column_end":15},"name":"new","qualname":"<EncodingError>::new","value":"fn (format: ImageFormatHint, err: impl Into<Box<dyn Error + Send + Sync>>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create an `EncodingError` that stems from an arbitrary error of an underlying encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":94},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":14885,"byte_end":14901,"line_start":336,"line_end":336,"column_start":12,"column_end":28},"name":"from_format_hint","qualname":"<EncodingError>::from_format_hint","value":"fn (format: ImageFormatHint) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a `DecodingError` for an image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":95},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15099,"byte_end":15110,"line_start":344,"line_end":344,"column_start":12,"column_end":23},"name":"format_hint","qualname":"<EncodingError>::format_hint","value":"fn (&self) -> ImageFormatHint","parent":null,"children":[],"decl_id":null,"docs":" Return the image format associated with this error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":97},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15282,"byte_end":15291,"line_start":351,"line_end":351,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<ParameterError>::from_kind","value":"fn (kind: ParameterErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a `ParameterError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":98},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15498,"byte_end":15502,"line_start":359,"line_end":359,"column_start":12,"column_end":16},"name":"kind","qualname":"<ParameterError>::kind","value":"fn (&self) -> ParameterErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `ParameterErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":100},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15675,"byte_end":15684,"line_start":366,"line_end":366,"column_start":12,"column_end":21},"name":"from_kind","qualname":"<LimitError>::from_kind","value":"fn (kind: LimitErrorKind) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a generic `LimitError` directly from a corresponding kind.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":101},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15849,"byte_end":15853,"line_start":373,"line_end":373,"column_start":12,"column_end":16},"name":"kind","qualname":"<LimitError>::kind","value":"fn (&self) -> LimitErrorKind","parent":null,"children":[],"decl_id":null,"docs":" Returns the corresponding `LimitErrorKind` of the error.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":110},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16732,"byte_end":16743,"line_start":409,"line_end":409,"column_start":10,"column_end":21},"name":"ImageResult","qualname":"::error::ImageResult","value":"Result<T, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Result of an image decoding/encoding process\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":136},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"math","qualname":"::math","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\mod.rs","parent":null,"children":[{"krate":0,"index":137},{"krate":0,"index":175},{"krate":0,"index":178},{"krate":0,"index":179}],"decl_id":null,"docs":" Mathematical helper functions and types.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":137},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"nq","qualname":"::math::nq","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","parent":null,"children":[{"krate":0,"index":138},{"krate":0,"index":139},{"krate":0,"index":142},{"krate":0,"index":143},{"krate":0,"index":144},{"krate":0,"index":145},{"krate":0,"index":146},{"krate":0,"index":147},{"krate":0,"index":148},{"krate":0,"index":149},{"krate":0,"index":3549},{"krate":0,"index":3557},{"krate":0,"index":3555},{"krate":0,"index":151},{"krate":0,"index":152},{"krate":0,"index":153},{"krate":0,"index":161}],"decl_id":null,"docs":" NEUQUANT Neural-Net quantization algorithm by Anthony Dekker, 1994.\n See \"Kohonen neural networks for optimal colour quantization\"\n in \"Network: Computation in Neural Systems\" Vol. 5 (1994) pp 351-367.\n for a discussion of the algorithm.\n See also <https://scientificgems.wordpress.com/stuff/neuquant-fast-high-quality-image-quantization/>\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":153},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":25956,"byte_end":25964,"line_start":63,"line_end":63,"column_start":12,"column_end":20},"name":"NeuQuant","qualname":"::math::nq::NeuQuant","value":"NeuQuant {  }","parent":null,"children":[{"krate":0,"index":154},{"krate":0,"index":155},{"krate":0,"index":156},{"krate":0,"index":157},{"krate":0,"index":158},{"krate":0,"index":159},{"krate":0,"index":160}],"decl_id":null,"docs":" Neural network color quantizer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":162},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":26266,"byte_end":26269,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<NeuQuant>::new","value":"fn (samplefac: i32, colors: usize, pixels: &[u8]) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":163},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":26810,"byte_end":26814,"line_start":91,"line_end":91,"column_start":12,"column_end":16},"name":"init","qualname":"<NeuQuant>::init","value":"fn (&mut self, pixels: &[u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Initializes the neural network and trains it with the supplied data\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":164},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":27804,"byte_end":27813,"line_start":123,"line_end":123,"column_start":12,"column_end":21},"name":"map_pixel","qualname":"<NeuQuant>::map_pixel","value":"fn (&self, pixel: &mut [u8]) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Maps the pixel in-place to the best-matching color in the color map\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":27775,"byte_end":27792,"line_start":122,"line_end":122,"column_start":5,"column_end":22}}]},{"kind":"Method","id":{"krate":0,"index":165},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":28365,"byte_end":28373,"line_start":138,"line_end":138,"column_start":12,"column_end":20},"name":"index_of","qualname":"<NeuQuant>::index_of","value":"fn (&self, pixel: &[u8]) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Finds the best-matching index in the color map for `pixel`\n","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":28336,"byte_end":28353,"line_start":137,"line_end":137,"column_start":5,"column_end":22}}]},{"kind":"Mod","id":{"krate":0,"index":175},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\utils.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"utils","qualname":"::math::utils","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\utils.rs","parent":null,"children":[{"krate":0,"index":176}],"decl_id":null,"docs":" Shared mathematical utility functions.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":176},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\utils.rs","byte_start":38336,"byte_end":38341,"line_start":13,"line_end":13,"column_start":8,"column_end":13},"name":"clamp","qualname":"::math::utils::clamp","value":"fn <N> (a: N, min: N, max: N) -> N","parent":null,"children":[],"decl_id":null,"docs":" Cut value to be inside given range","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\utils.rs","byte_start":38319,"byte_end":38328,"line_start":12,"line_end":12,"column_start":1,"column_end":10}}]},{"kind":"Struct","id":{"krate":0,"index":3560},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\rect.rs","byte_start":38622,"byte_end":38626,"line_start":3,"line_end":3,"column_start":12,"column_end":16},"name":"Rect","qualname":"::math::rect::Rect","value":"Rect { x, y, width, height }","parent":null,"children":[{"krate":0,"index":3561},{"krate":0,"index":3562},{"krate":0,"index":3563},{"krate":0,"index":3564}],"decl_id":null,"docs":" A Rectangle defined by its top left corner, width and height.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3561},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\rect.rs","byte_start":38686,"byte_end":38687,"line_start":5,"line_end":5,"column_start":9,"column_end":10},"name":"x","qualname":"::math::rect::Rect::x","value":"u32","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" The x coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3562},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\rect.rs","byte_start":38751,"byte_end":38752,"line_start":7,"line_end":7,"column_start":9,"column_end":10},"name":"y","qualname":"::math::rect::Rect::y","value":"u32","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" The y coordinate of the top left corner.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3563},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\rect.rs","byte_start":38798,"byte_end":38803,"line_start":9,"line_end":9,"column_start":9,"column_end":14},"name":"width","qualname":"::math::rect::Rect::width","value":"u32","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" The rectangle's width.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3564},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\rect.rs","byte_start":38850,"byte_end":38856,"line_start":11,"line_end":11,"column_start":9,"column_end":15},"name":"height","qualname":"::math::rect::Rect::height","value":"u32","parent":{"krate":0,"index":3560},"children":[],"decl_id":null,"docs":" The rectangle's height.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":180},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"imageops","qualname":"::imageops","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","parent":null,"children":[{"krate":0,"index":181},{"krate":0,"index":182},{"krate":0,"index":186},{"krate":0,"index":187},{"krate":0,"index":188},{"krate":0,"index":194},{"krate":0,"index":208},{"krate":0,"index":214},{"krate":0,"index":224},{"krate":0,"index":262},{"krate":0,"index":325},{"krate":0,"index":411},{"krate":0,"index":413},{"krate":0,"index":414},{"krate":0,"index":417}],"decl_id":null,"docs":" Image Processing Functions\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":231},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":46735,"byte_end":46743,"line_start":7,"line_end":7,"column_start":8,"column_end":16},"name":"rotate90","qualname":"::imageops::affine::rotate90","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":233},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":47075,"byte_end":47084,"line_start":19,"line_end":19,"column_start":8,"column_end":17},"name":"rotate180","qualname":"::imageops::affine::rotate180","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":235},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":47417,"byte_end":47426,"line_start":31,"line_end":31,"column_start":8,"column_end":17},"name":"rotate270","qualname":"::imageops::affine::rotate270","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":237},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":47814,"byte_end":47825,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"rotate90_in","qualname":"::imageops::affine::rotate90_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 90 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":240},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":48522,"byte_end":48534,"line_start":66,"line_end":66,"column_start":8,"column_end":20},"name":"rotate180_in","qualname":"::imageops::affine::rotate180_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":243},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":49240,"byte_end":49252,"line_start":89,"line_end":89,"column_start":8,"column_end":20},"name":"rotate270_in","qualname":"::imageops::affine::rotate270_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 270 degrees clockwise and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":246},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":49881,"byte_end":49896,"line_start":112,"line_end":112,"column_start":8,"column_end":23},"name":"flip_horizontal","qualname":"::imageops::affine::flip_horizontal","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":248},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":50221,"byte_end":50234,"line_start":124,"line_end":124,"column_start":8,"column_end":21},"name":"flip_vertical","qualname":"::imageops::affine::flip_vertical","value":"fn <I> (image: &I) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":250},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":50616,"byte_end":50634,"line_start":136,"line_end":136,"column_start":8,"column_end":26},"name":"flip_horizontal_in","qualname":"::imageops::affine::flip_horizontal_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":253},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":51318,"byte_end":51334,"line_start":159,"line_end":159,"column_start":8,"column_end":24},"name":"flip_vertical_in","qualname":"::imageops::affine::flip_vertical_in","value":"fn <I, Container> (image: &I, destination: &mut ImageBuffer<I::Pixel, Container>) -> crate::ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically and put the result into the destination [`ImageBuffer`].\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":256},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":51984,"byte_end":52002,"line_start":182,"line_end":182,"column_start":8,"column_end":26},"name":"rotate180_in_place","qualname":"::imageops::affine::rotate180_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Rotate an image 180 degrees clockwise in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":258},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":52782,"byte_end":52806,"line_start":213,"line_end":213,"column_start":8,"column_end":32},"name":"flip_horizontal_in_place","qualname":"::imageops::affine::flip_horizontal_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image horizontally in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":260},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\affine.rs","byte_start":53212,"byte_end":53234,"line_start":228,"line_end":228,"column_start":8,"column_end":30},"name":"flip_vertical_in_place","qualname":"::imageops::affine::flip_vertical_in_place","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Flip an image vertically in place.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":262},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"colorops","qualname":"::imageops::colorops","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","parent":null,"children":[{"krate":0,"index":263},{"krate":0,"index":266},{"krate":0,"index":269},{"krate":0,"index":272},{"krate":0,"index":273},{"krate":0,"index":274},{"krate":0,"index":277},{"krate":0,"index":278},{"krate":0,"index":279},{"krate":0,"index":281},{"krate":0,"index":283},{"krate":0,"index":285},{"krate":0,"index":290},{"krate":0,"index":296},{"krate":0,"index":301},{"krate":0,"index":3580},{"krate":0,"index":3583},{"krate":0,"index":3582},{"krate":0,"index":305},{"krate":0,"index":309},{"krate":0,"index":313},{"krate":0,"index":316},{"krate":0,"index":317},{"krate":0,"index":322}],"decl_id":null,"docs":" Functions for altering and converting the color of pixelbufs\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":281},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":58628,"byte_end":58637,"line_start":15,"line_end":15,"column_start":8,"column_end":17},"name":"grayscale","qualname":"::imageops::colorops::grayscale","value":"fn <I> (image: &I) -> ImageBuffer<Luma<Subpixel<I>>, Vec<Subpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert the supplied image to grayscale\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":283},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":59176,"byte_end":59182,"line_start":37,"line_end":37,"column_start":8,"column_end":14},"name":"invert","qualname":"::imageops::colorops::invert","value":"fn <I> (image: &mut I) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert each pixel within the supplied image.\n This function operates in place.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":285},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":59645,"byte_end":59653,"line_start":53,"line_end":53,"column_start":8,"column_end":16},"name":"contrast","qualname":"::imageops::colorops::contrast","value":"fn <I, P, S> (image: &I, contrast: f32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of the supplied image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":290},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":60628,"byte_end":60636,"line_start":88,"line_end":88,"column_start":8,"column_end":16},"name":"brighten","qualname":"::imageops::colorops::brighten","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Brighten the supplied image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":296},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":61622,"byte_end":61631,"line_start":123,"line_end":123,"column_start":8,"column_end":17},"name":"huerotate","qualname":"::imageops::colorops::huerotate","value":"fn <I, P, S> (image: &I, value: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":301},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63545,"byte_end":63553,"line_start":180,"line_end":180,"column_start":11,"column_end":19},"name":"ColorMap","qualname":"::imageops::colorops::ColorMap","value":"ColorMap","parent":null,"children":[{"krate":0,"index":302},{"krate":0,"index":303},{"krate":0,"index":304}],"decl_id":null,"docs":" A color map\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":302},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63617,"byte_end":63622,"line_start":182,"line_end":182,"column_start":10,"column_end":15},"name":"Color","qualname":"::imageops::colorops::ColorMap::Color","value":"type Color;","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" The color type on which the map operates on\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":303},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63714,"byte_end":63722,"line_start":185,"line_end":185,"column_start":8,"column_end":16},"name":"index_of","qualname":"::imageops::colorops::ColorMap::index_of","value":"fn (&self, color: &Self::Color) -> usize","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Returns the index of the closed match of `color`\n in the color map.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":304},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63828,"byte_end":63837,"line_start":187,"line_end":187,"column_start":8,"column_end":17},"name":"map_color","qualname":"::imageops::colorops::ColorMap::map_color","value":"fn (&self, color: &mut Self::Color) -> ()","parent":{"krate":0,"index":301},"children":[],"decl_id":null,"docs":" Maps `color` to the closest color in the color map.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3580},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63933,"byte_end":63940,"line_start":192,"line_end":192,"column_start":12,"column_end":19},"name":"BiLevel","qualname":"::imageops::colorops::BiLevel","value":"","parent":null,"children":[],"decl_id":null,"docs":" A bi-level color map\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":317},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":65799,"byte_end":65805,"line_start":258,"line_end":258,"column_start":8,"column_end":14},"name":"dither","qualname":"::imageops::colorops::dither","value":"fn <Pix, Map> (image: &mut ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors of the image using the supplied `color_map` while applying\n Floyd-Steinberg dithering to improve the visual conception\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":322},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":67350,"byte_end":67362,"line_start":296,"line_end":296,"column_start":8,"column_end":20},"name":"index_colors","qualname":"::imageops::colorops::index_colors","value":"fn <Pix, Map> (image: &ImageBuffer<Pix, Vec<u8>>, color_map: &Map) -> ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Reduces the colors using the supplied `color_map` and returns an image of the indices\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3586},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71044,"byte_end":71051,"line_start":84,"line_end":84,"column_start":5,"column_end":12},"name":"Nearest","qualname":"::imageops::sample::FilterType::Nearest","value":"FilterType::Nearest","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" Nearest Neighbor\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3588},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71080,"byte_end":71088,"line_start":87,"line_end":87,"column_start":5,"column_end":13},"name":"Triangle","qualname":"::imageops::sample::FilterType::Triangle","value":"FilterType::Triangle","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" Linear Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3590},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71116,"byte_end":71126,"line_start":90,"line_end":90,"column_start":5,"column_end":15},"name":"CatmullRom","qualname":"::imageops::sample::FilterType::CatmullRom","value":"FilterType::CatmullRom","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" Cubic Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3592},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71157,"byte_end":71165,"line_start":93,"line_end":93,"column_start":5,"column_end":13},"name":"Gaussian","qualname":"::imageops::sample::FilterType::Gaussian","value":"FilterType::Gaussian","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" Gaussian Filter\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3594},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71202,"byte_end":71210,"line_start":96,"line_end":96,"column_start":5,"column_end":13},"name":"Lanczos3","qualname":"::imageops::sample::FilterType::Lanczos3","value":"FilterType::Lanczos3","parent":{"krate":0,"index":3585},"children":[],"decl_id":null,"docs":" Lanczos with window 3\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3585},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":71002,"byte_end":71012,"line_start":82,"line_end":82,"column_start":10,"column_end":20},"name":"FilterType","qualname":"::imageops::sample::FilterType","value":"FilterType::{Nearest, Triangle, CatmullRom, Gaussian, Lanczos3}","parent":null,"children":[{"krate":0,"index":3586},{"krate":0,"index":3588},{"krate":0,"index":3590},{"krate":0,"index":3592},{"krate":0,"index":3594}],"decl_id":null,"docs":" Available Sampling Filters.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":373},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":80672,"byte_end":80681,"line_start":393,"line_end":393,"column_start":8,"column_end":17},"name":"thumbnail","qualname":"::imageops::sample::thumbnail","value":"fn <I, P, S> (image: &I, new_width: u32, new_height: u32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specific dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":396},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":88540,"byte_end":88549,"line_start":632,"line_end":632,"column_start":8,"column_end":17},"name":"filter3x3","qualname":"::imageops::sample::filter3x3","value":"fn <I, P, S> (image: &I, kernel: &[f32]) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Perform a 3x3 box filter on the supplied image.\n ```kernel``` is an array of the filter weights of length 9.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":401},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":90976,"byte_end":90982,"line_start":712,"line_end":712,"column_start":8,"column_end":14},"name":"resize","qualname":"::imageops::sample::resize","value":"fn <I> (image: &I, nwidth: u32, nheight: u32, filter: FilterType) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Resize the supplied image to the specified dimensions.\n ```nwidth``` and ```nheight``` are the new dimensions.\n ```filter``` is the sampling filter to use.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":403},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":92108,"byte_end":92112,"line_start":751,"line_end":751,"column_start":8,"column_end":12},"name":"blur","qualname":"::imageops::sample::blur","value":"fn <I> (image: &I, sigma: f32) -> ImageBuffer<I::Pixel, Vec<<I::Pixel as Pixel>::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on the supplied image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":406},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":92935,"byte_end":92944,"line_start":778,"line_end":778,"column_start":8,"column_end":17},"name":"unsharpen","qualname":"::imageops::sample::unsharpen","value":"fn <I, P, S> (image: &I, sigma: f32, threshold: i32) -> ImageBuffer<P, Vec<S>>","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on the supplied image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is the threshold for the difference between","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":411},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39831,"byte_end":39835,"line_start":32,"line_end":32,"column_start":8,"column_end":12},"name":"crop","qualname":"::imageops::crop","value":"fn <I> (image: &mut I, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut I>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable view into an image\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":413},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":42390,"byte_end":42404,"line_start":105,"line_end":105,"column_start":8,"column_end":22},"name":"overlay_bounds","qualname":"::imageops::overlay_bounds","value":"fn ((bottom_width, bottom_height): (u32, u32), (top_width, top_height): (u32, u32), x: u32, y: u32) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Calculate the region that can be copied from top to bottom.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":414},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":42918,"byte_end":42925,"line_start":123,"line_end":123,"column_start":8,"column_end":15},"name":"overlay","qualname":"::imageops::overlay","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Overlay an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":417},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":43657,"byte_end":43664,"line_start":146,"line_end":146,"column_start":8,"column_end":15},"name":"replace","qualname":"::imageops::replace","value":"fn <I, J> (bottom: &mut I, top: &J, x: u32, y: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Replace the contents of an image at a given coordinate (x, y)\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":420},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"io","qualname":"::io","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\mod.rs","parent":null,"children":[{"krate":0,"index":421},{"krate":0,"index":463},{"krate":0,"index":519}],"decl_id":null,"docs":" Input and output of images.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":438},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98064,"byte_end":98070,"line_start":60,"line_end":60,"column_start":12,"column_end":18},"name":"Reader","qualname":"::io::reader::Reader","value":"Reader {  }","parent":null,"children":[{"krate":0,"index":440},{"krate":0,"index":441}],"decl_id":null,"docs":" A multi-format image reader.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":444},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98570,"byte_end":98573,"line_start":75,"line_end":75,"column_start":12,"column_end":15},"name":"new","qualname":"<Reader<R>>::new","value":"fn (reader: R) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new image reader without a preset format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":445},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98743,"byte_end":98754,"line_start":83,"line_end":83,"column_start":12,"column_end":23},"name":"with_format","qualname":"<Reader<R>>::with_format","value":"fn (reader: R, format: ImageFormat) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Construct a reader with specified format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":446},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98948,"byte_end":98954,"line_start":91,"line_end":91,"column_start":12,"column_end":18},"name":"format","qualname":"<Reader<R>>::format","value":"fn (&self) -> Option<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Get the currently determined format.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":447},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":99089,"byte_end":99099,"line_start":96,"line_end":96,"column_start":12,"column_end":22},"name":"set_format","qualname":"<Reader<R>>::set_format","value":"fn (&mut self, format: ImageFormat) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Supply the format as which to interpret the read image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":448},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":99434,"byte_end":99446,"line_start":104,"line_end":104,"column_start":12,"column_end":24},"name":"clear_format","qualname":"<Reader<R>>::clear_format","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Remove the current information on the image format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":449},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":99533,"byte_end":99543,"line_start":109,"line_end":109,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<Reader<R>>::into_inner","value":"fn (self) -> R","parent":null,"children":[],"decl_id":null,"docs":" Unwrap the reader.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":451},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":100005,"byte_end":100009,"line_start":123,"line_end":123,"column_start":12,"column_end":16},"name":"open","qualname":"<Reader<BufReader<File>>>::open","value":"fn <P> (path: P) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Open a file to read, format will be guessed from path.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":456},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":101641,"byte_end":101660,"line_start":165,"line_end":165,"column_start":12,"column_end":31},"name":"with_guessed_format","qualname":"<Reader<R>>::with_guessed_format","value":"fn (mut self) -> io::Result<Self>","parent":null,"children":[],"decl_id":null,"docs":" Make a format guess based on the content, replacing it on success.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":459},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":102623,"byte_end":102638,"line_start":191,"line_end":191,"column_start":12,"column_end":27},"name":"into_dimensions","qualname":"<Reader<R>>::into_dimensions","value":"fn (mut self) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the image dimensions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":460},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":103037,"byte_end":103043,"line_start":201,"line_end":201,"column_start":12,"column_end":18},"name":"decode","qualname":"<Reader<R>>::decode","value":"fn (mut self) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Read the image (replaces `load`).","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":502},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\free_functions.rs","byte_start":104807,"byte_end":104811,"line_start":59,"line_end":59,"column_start":8,"column_end":12},"name":"load","qualname":"::io::free_functions::load","value":"fn <R> (r: R, format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a Reader","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":515},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\free_functions.rs","byte_start":113808,"byte_end":113820,"line_start":264,"line_end":264,"column_start":8,"column_end":20},"name":"guess_format","qualname":"::io::free_functions::guess_format","value":"fn (buffer: &[u8]) -> ImageResult<ImageFormat>","parent":null,"children":[],"decl_id":null,"docs":" Guess image format from memory block","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":520},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"flat","qualname":"::flat","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","parent":null,"children":[{"krate":0,"index":521},{"krate":0,"index":522},{"krate":0,"index":526},{"krate":0,"index":527},{"krate":0,"index":528},{"krate":0,"index":531},{"krate":0,"index":532},{"krate":0,"index":533},{"krate":0,"index":3601},{"krate":0,"index":3609},{"krate":0,"index":3606},{"krate":0,"index":3612},{"krate":0,"index":3632},{"krate":0,"index":3631},{"krate":0,"index":3629},{"krate":0,"index":3625},{"krate":0,"index":3626},{"krate":0,"index":3622},{"krate":0,"index":3623},{"krate":0,"index":3619},{"krate":0,"index":3634},{"krate":0,"index":3660},{"krate":0,"index":3659},{"krate":0,"index":3657},{"krate":0,"index":3653},{"krate":0,"index":3654},{"krate":0,"index":3650},{"krate":0,"index":3651},{"krate":0,"index":3640},{"krate":0,"index":3638},{"krate":0,"index":536},{"krate":0,"index":559},{"krate":0,"index":563},{"krate":0,"index":3662},{"krate":0,"index":3671},{"krate":0,"index":3667},{"krate":0,"index":3675},{"krate":0,"index":3684},{"krate":0,"index":3680},{"krate":0,"index":3688},{"krate":0,"index":3710},{"krate":0,"index":3709},{"krate":0,"index":3707},{"krate":0,"index":3703},{"krate":0,"index":3704},{"krate":0,"index":3700},{"krate":0,"index":3701},{"krate":0,"index":3697},{"krate":0,"index":3712},{"krate":0,"index":3735},{"krate":0,"index":3734},{"krate":0,"index":3732},{"krate":0,"index":3729},{"krate":0,"index":3730},{"krate":0,"index":3726},{"krate":0,"index":3727},{"krate":0,"index":3723},{"krate":0,"index":605},{"krate":0,"index":618},{"krate":0,"index":630},{"krate":0,"index":631},{"krate":0,"index":632},{"krate":0,"index":637},{"krate":0,"index":641},{"krate":0,"index":653},{"krate":0,"index":665},{"krate":0,"index":673},{"krate":0,"index":675}],"decl_id":null,"docs":" Image representations for ffi.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3601},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":116708,"byte_end":116719,"line_start":66,"line_end":66,"column_start":12,"column_end":23},"name":"FlatSamples","qualname":"::flat::FlatSamples","value":"FlatSamples { samples, layout, color_hint }","parent":null,"children":[{"krate":0,"index":3603},{"krate":0,"index":3604},{"krate":0,"index":3605}],"decl_id":null,"docs":" A flat buffer over a (multi channel) image.","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3603},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":116797,"byte_end":116804,"line_start":68,"line_end":68,"column_start":9,"column_end":16},"name":"samples","qualname":"::flat::FlatSamples::samples","value":"Buffer","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":" Underlying linear container holding sample values.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3604},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":116888,"byte_end":116894,"line_start":71,"line_end":71,"column_start":9,"column_end":15},"name":"layout","qualname":"::flat::FlatSamples::layout","value":"flat::SampleLayout","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":" A `repr(C)` description of the layout of buffer samples.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3605},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117349,"byte_end":117359,"line_start":79,"line_end":79,"column_start":9,"column_end":19},"name":"color_hint","qualname":"::flat::FlatSamples::color_hint","value":"std::option::Option<color::ColorType>","parent":{"krate":0,"index":3601},"children":[],"decl_id":null,"docs":" Supplementary color information.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3612},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117509,"byte_end":117521,"line_start":85,"line_end":85,"column_start":12,"column_end":24},"name":"SampleLayout","qualname":"::flat::SampleLayout","value":"SampleLayout { channels, channel_stride, width, width_stride, height, height_stride }","parent":null,"children":[{"krate":0,"index":3613},{"krate":0,"index":3614},{"krate":0,"index":3615},{"krate":0,"index":3616},{"krate":0,"index":3617},{"krate":0,"index":3618}],"decl_id":null,"docs":" A ffi compatible description of a sample buffer.\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117436,"byte_end":117446,"line_start":83,"line_end":83,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3613},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117605,"byte_end":117613,"line_start":87,"line_end":87,"column_start":9,"column_end":17},"name":"channels","qualname":"::flat::SampleLayout::channels","value":"u8","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" The number of channels in the color representation of the image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3614},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117699,"byte_end":117713,"line_start":90,"line_end":90,"column_start":9,"column_end":23},"name":"channel_stride","qualname":"::flat::SampleLayout::channel_stride","value":"usize","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" Add this to an index to get to the sample in the next channel.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3615},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117775,"byte_end":117780,"line_start":93,"line_end":93,"column_start":9,"column_end":14},"name":"width","qualname":"::flat::SampleLayout::width","value":"u32","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" The width of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3616},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117867,"byte_end":117879,"line_start":96,"line_end":96,"column_start":9,"column_end":21},"name":"width_stride","qualname":"::flat::SampleLayout::width_stride","value":"usize","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in x-direction.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3617},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":117942,"byte_end":117948,"line_start":99,"line_end":99,"column_start":9,"column_end":15},"name":"height","qualname":"::flat::SampleLayout::height","value":"u32","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" The height of the represented image.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3618},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":118035,"byte_end":118048,"line_start":102,"line_end":102,"column_start":9,"column_end":22},"name":"height_stride","qualname":"::flat::SampleLayout::height_stride","value":"usize","parent":{"krate":0,"index":3612},"children":[],"decl_id":null,"docs":" Add this to an index to get to the next sample in y-direction.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":537},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":119023,"byte_end":119039,"line_start":126,"line_end":126,"column_start":12,"column_end":28},"name":"row_major_packed","qualname":"<SampleLayout>::row_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a row-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":538},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":120290,"byte_end":120309,"line_start":155,"line_end":155,"column_start":12,"column_end":31},"name":"column_major_packed","qualname":"<SampleLayout>::column_major_packed","value":"fn (channels: u8, width: u32, height: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Describe a column-major image packed in all directions.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":539},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":120925,"byte_end":120936,"line_start":172,"line_end":172,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<SampleLayout>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":540},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":121253,"byte_end":121260,"line_start":180,"line_end":180,"column_start":12,"column_end":19},"name":"extents","qualname":"<SampleLayout>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":541},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":121634,"byte_end":121640,"line_start":188,"line_end":188,"column_start":12,"column_end":18},"name":"bounds","qualname":"<SampleLayout>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":542},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":123793,"byte_end":123803,"line_start":243,"line_end":243,"column_start":12,"column_end":22},"name":"min_length","qualname":"<SampleLayout>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":544},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":124135,"byte_end":124139,"line_start":253,"line_end":253,"column_start":12,"column_end":16},"name":"fits","qualname":"<SampleLayout>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":549},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":125249,"byte_end":125268,"line_start":278,"line_end":278,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<SampleLayout>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":550},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":126513,"byte_end":126522,"line_start":308,"line_end":308,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<SampleLayout>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":551},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":128220,"byte_end":128229,"line_start":363,"line_end":363,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<SampleLayout>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":552},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":128503,"byte_end":128508,"line_start":370,"line_end":370,"column_start":12,"column_end":17},"name":"index","qualname":"<SampleLayout>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":553},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":129102,"byte_end":129123,"line_start":383,"line_end":383,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<SampleLayout>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (channel, x, y).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":557},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":130054,"byte_end":130069,"line_start":404,"line_end":404,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<SampleLayout>::in_bounds_index","value":"fn (&self, c: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":558},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":130597,"byte_end":130606,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<SampleLayout>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":565},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":131279,"byte_end":131290,"line_start":442,"line_end":442,"column_start":12,"column_end":23},"name":"strides_cwh","qualname":"<FlatSamples<Buffer>>::strides_cwh","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the strides for indexing matrix-like `[(c, w, h)]`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":566},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":131572,"byte_end":131579,"line_start":450,"line_end":450,"column_start":12,"column_end":19},"name":"extents","qualname":"<FlatSamples<Buffer>>::extents","value":"fn (&self) -> (usize, usize, usize)","parent":null,"children":[],"decl_id":null,"docs":" Get the dimensions `(channels, width, height)`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":567},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":131907,"byte_end":131913,"line_start":458,"line_end":458,"column_start":12,"column_end":18},"name":"bounds","qualname":"<FlatSamples<Buffer>>::bounds","value":"fn (&self) -> (u8, u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" Tuple of bounds in the order of coordinate inputs.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":568},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":132027,"byte_end":132033,"line_start":463,"line_end":463,"column_start":12,"column_end":18},"name":"as_ref","qualname":"<FlatSamples<Buffer>>::as_ref","value":"fn <T> (&self) -> FlatSamples<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":570},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":132307,"byte_end":132313,"line_start":472,"line_end":472,"column_start":12,"column_end":18},"name":"as_mut","qualname":"<FlatSamples<Buffer>>::as_mut","value":"fn <T> (&mut self) -> FlatSamples<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference based version.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":572},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":132592,"byte_end":132598,"line_start":481,"line_end":481,"column_start":12,"column_end":18},"name":"to_vec","qualname":"<FlatSamples<Buffer>>::to_vec","value":"fn <T> (&self) -> FlatSamples<Vec<T>>","parent":null,"children":[],"decl_id":null,"docs":" Copy the data into an owned vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":574},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":133871,"byte_end":133881,"line_start":512,"line_end":512,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<FlatSamples<Buffer>>::get_sample","value":"fn <T> (&self, channel: u8, x: u32, y: u32) -> Option<&T>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":577},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":135478,"byte_end":135492,"line_start":545,"line_end":545,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<FlatSamples<Buffer>>::get_mut_sample","value":"fn <T> (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut T>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a single sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":579},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":136156,"byte_end":136163,"line_start":560,"line_end":560,"column_start":12,"column_end":19},"name":"as_view","qualname":"<FlatSamples<Buffer>>::as_view","value":"fn <P> (&self) -> Result<View<&[P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer as an image over some type of pixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":581},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":137740,"byte_end":137764,"line_start":597,"line_end":597,"column_start":12,"column_end":36},"name":"as_view_with_mut_samples","qualname":"<FlatSamples<Buffer>>::as_view_with_mut_samples","value":"fn <P> (&mut self) -> Result<View<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" View this buffer but keep mutability at a sample level.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":583},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":139127,"byte_end":139138,"line_start":630,"line_end":630,"column_start":12,"column_end":23},"name":"as_view_mut","qualname":"<FlatSamples<Buffer>>::as_view_mut","value":"fn <P> (&mut self) -> Result<ViewMut<&mut [P::Subpixel], P>, Error>","parent":null,"children":[],"decl_id":null,"docs":" Interpret this buffer as a mutable image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":585},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":140135,"byte_end":140143,"line_start":660,"line_end":660,"column_start":12,"column_end":20},"name":"as_slice","qualname":"<FlatSamples<Buffer>>::as_slice","value":"fn <T> (&self) -> &[T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":587},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":140454,"byte_end":140466,"line_start":668,"line_end":668,"column_start":12,"column_end":24},"name":"as_mut_slice","qualname":"<FlatSamples<Buffer>>::as_mut_slice","value":"fn <T> (&mut self) -> &mut [T]","parent":null,"children":[],"decl_id":null,"docs":" View the samples as a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":589},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":140897,"byte_end":140908,"line_start":677,"line_end":677,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<FlatSamples<Buffer>>::image_slice","value":"fn <T> (&self) -> Option<&[T]>","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":591},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":141325,"byte_end":141340,"line_start":692,"line_end":692,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<FlatSamples<Buffer>>::image_mut_slice","value":"fn <T> (&mut self) -> Option<&mut [T]>","parent":null,"children":[],"decl_id":null,"docs":" Mutable portion of the buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":593},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":141994,"byte_end":142009,"line_start":711,"line_end":711,"column_start":12,"column_end":27},"name":"try_into_buffer","qualname":"<FlatSamples<Buffer>>::try_into_buffer","value":"fn <P> (self) -> Result<ImageBuffer<P, Buffer>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Move the data into an image buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":596},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":144845,"byte_end":144855,"line_start":785,"line_end":785,"column_start":12,"column_end":22},"name":"min_length","qualname":"<FlatSamples<Buffer>>::min_length","value":"fn (&self) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":597},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":144992,"byte_end":144996,"line_start":790,"line_end":790,"column_start":12,"column_end":16},"name":"fits","qualname":"<FlatSamples<Buffer>>::fits","value":"fn (&self, len: usize) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer of length `len` is large enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":598},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":145417,"byte_end":145436,"line_start":799,"line_end":799,"column_start":12,"column_end":31},"name":"has_aliased_samples","qualname":"<FlatSamples<Buffer>>::has_aliased_samples","value":"fn (&self) -> bool","parent":null,"children":[],"decl_id":null,"docs":" If there are any samples aliasing each other.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":599},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":146017,"byte_end":146026,"line_start":810,"line_end":810,"column_start":12,"column_end":21},"name":"is_normal","qualname":"<FlatSamples<Buffer>>::is_normal","value":"fn (&self, form: NormalForm) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check if a buffer fulfills the requirements of a normal form.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":600},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":146451,"byte_end":146460,"line_start":819,"line_end":819,"column_start":12,"column_end":21},"name":"in_bounds","qualname":"<FlatSamples<Buffer>>::in_bounds","value":"fn (&self, channel: u8, x: u32, y: u32) -> bool","parent":null,"children":[],"decl_id":null,"docs":" Check that the pixel and the channel index are in bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":601},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":146710,"byte_end":146715,"line_start":826,"line_end":826,"column_start":12,"column_end":17},"name":"index","qualname":"<FlatSamples<Buffer>>::index","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Resolve the index of a particular sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":602},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":147194,"byte_end":147215,"line_start":835,"line_end":835,"column_start":12,"column_end":33},"name":"index_ignoring_bounds","qualname":"<FlatSamples<Buffer>>::index_ignoring_bounds","value":"fn (&self, channel: usize, x: usize, y: usize) -> Option<usize>","parent":null,"children":[],"decl_id":null,"docs":" Get the theoretical position of sample (x, y, channel).","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":603},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":147647,"byte_end":147662,"line_start":844,"line_end":844,"column_start":12,"column_end":27},"name":"in_bounds_index","qualname":"<FlatSamples<Buffer>>::in_bounds_index","value":"fn (&self, channel: u8, x: u32, y: u32) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get an index provided it is inbouds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":604},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":148097,"byte_end":148106,"line_start":853,"line_end":853,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<FlatSamples<Buffer>>::shrink_to","value":"fn (&mut self, channels: u8, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the image to the minimum of current and given extents.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3662},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":148925,"byte_end":148929,"line_start":873,"line_end":873,"column_start":12,"column_end":16},"name":"View","qualname":"::flat::View","value":"View {  }","parent":null,"children":[{"krate":0,"index":3665},{"krate":0,"index":3666}],"decl_id":null,"docs":" A flat buffer that can be used as an image view.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3675},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":149775,"byte_end":149782,"line_start":896,"line_end":896,"column_start":12,"column_end":19},"name":"ViewMut","qualname":"::flat::ViewMut","value":"ViewMut {  }","parent":null,"children":[{"krate":0,"index":3678},{"krate":0,"index":3679}],"decl_id":null,"docs":" A mutable owning version of a flat buffer.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3689},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":150490,"byte_end":150498,"line_start":915,"line_end":915,"column_start":5,"column_end":13},"name":"TooLarge","qualname":"::flat::Error::TooLarge","value":"Error::TooLarge","parent":{"krate":0,"index":3688},"children":[],"decl_id":null,"docs":" The represented image was too large.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3691},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":150655,"byte_end":150673,"line_start":920,"line_end":920,"column_start":5,"column_end":23},"name":"NormalFormRequired","qualname":"::flat::Error::NormalFormRequired","value":"Error::NormalFormRequired(NormalForm)","parent":{"krate":0,"index":3688},"children":[],"decl_id":null,"docs":" The represented image can not use this representation.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3694},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":151282,"byte_end":151292,"line_start":931,"line_end":931,"column_start":5,"column_end":15},"name":"WrongColor","qualname":"::flat::Error::WrongColor","value":"Error::WrongColor(ColorType)","parent":{"krate":0,"index":3688},"children":[],"decl_id":null,"docs":" The color format did not match the channel count.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3688},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":150355,"byte_end":150360,"line_start":911,"line_end":911,"column_start":10,"column_end":15},"name":"Error","qualname":"::flat::Error","value":"Error::{TooLarge, NormalFormRequired, WrongColor}","parent":null,"children":[{"krate":0,"index":3689},{"krate":0,"index":3691},{"krate":0,"index":3694}],"decl_id":null,"docs":" Denotes invalid flat sample buffers when trying to convert to stricter types.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3713},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":151791,"byte_end":151800,"line_start":944,"line_end":944,"column_start":5,"column_end":14},"name":"Unaliased","qualname":"::flat::NormalForm::Unaliased","value":"NormalForm::Unaliased","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":" No pixel aliases another.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3715},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152030,"byte_end":152041,"line_start":950,"line_end":950,"column_start":5,"column_end":16},"name":"PixelPacked","qualname":"::flat::NormalForm::PixelPacked","value":"NormalForm::PixelPacked","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":" At least pixels are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3717},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152325,"byte_end":152336,"line_start":957,"line_end":957,"column_start":5,"column_end":16},"name":"ImagePacked","qualname":"::flat::NormalForm::ImagePacked","value":"NormalForm::ImagePacked","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":" All samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3719},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152546,"byte_end":152560,"line_start":963,"line_end":963,"column_start":5,"column_end":19},"name":"RowMajorPacked","qualname":"::flat::NormalForm::RowMajorPacked","value":"NormalForm::RowMajorPacked","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":" The samples are in row-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3721},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152776,"byte_end":152793,"line_start":969,"line_end":969,"column_start":5,"column_end":22},"name":"ColumnMajorPacked","qualname":"::flat::NormalForm::ColumnMajorPacked","value":"NormalForm::ColumnMajorPacked","parent":{"krate":0,"index":3712},"children":[],"decl_id":null,"docs":" The samples are in column-major form and all samples are packed.","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3712},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":151551,"byte_end":151561,"line_start":939,"line_end":939,"column_start":10,"column_end":20},"name":"NormalForm","qualname":"::flat::NormalForm","value":"NormalForm::{Unaliased, PixelPacked, ImagePacked, RowMajorPacked, ColumnMajorPacked}","parent":null,"children":[{"krate":0,"index":3713},{"krate":0,"index":3715},{"krate":0,"index":3717},{"krate":0,"index":3719},{"krate":0,"index":3721}],"decl_id":null,"docs":" Different normal forms of buffers.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":608},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":153001,"byte_end":153011,"line_start":979,"line_end":979,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<View<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":609},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":153494,"byte_end":153498,"line_start":989,"line_end":989,"column_start":12,"column_end":16},"name":"flat","qualname":"<View<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner sample descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":610},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":153777,"byte_end":153784,"line_start":997,"line_end":997,"column_start":12,"column_end":19},"name":"samples","qualname":"<View<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":611},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":154103,"byte_end":154113,"line_start":1005,"line_end":1005,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<View<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":612},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":154987,"byte_end":155001,"line_start":1023,"line_end":1023,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<View<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected subpixel if it is in-bounds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":613},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":155578,"byte_end":155588,"line_start":1038,"line_end":1038,"column_start":12,"column_end":22},"name":"min_length","qualname":"<View<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":614},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":155922,"byte_end":155933,"line_start":1046,"line_end":1046,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<View<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":615},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":156390,"byte_end":156405,"line_start":1055,"line_end":1055,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<View<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":616},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":156928,"byte_end":156937,"line_start":1067,"line_end":1067,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<View<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":617},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":157941,"byte_end":157952,"line_start":1090,"line_end":1090,"column_start":12,"column_end":23},"name":"try_upgrade","qualname":"<View<Buffer, P>>::try_upgrade","value":"fn (self) -> Result<ViewMut<Buffer, P>, (Error, Self)>","parent":null,"children":[],"decl_id":null,"docs":" Try to convert this into an image with mutable pixels.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":621},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":158593,"byte_end":158603,"line_start":1112,"line_end":1112,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<ViewMut<Buffer, P>>::into_inner","value":"fn (self) -> FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Take out the sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":622},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":159087,"byte_end":159091,"line_start":1122,"line_end":1122,"column_start":12,"column_end":16},"name":"flat","qualname":"<ViewMut<Buffer, P>>::flat","value":"fn (&self) -> &FlatSamples<Buffer>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the sample buffer descriptor.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":623},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":159464,"byte_end":159471,"line_start":1131,"line_end":1131,"column_start":12,"column_end":19},"name":"samples","qualname":"<ViewMut<Buffer, P>>::samples","value":"fn (&self) -> &Buffer","parent":null,"children":[],"decl_id":null,"docs":" Get a reference on the inner buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":624},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":159713,"byte_end":159723,"line_start":1138,"line_end":1138,"column_start":12,"column_end":22},"name":"min_length","qualname":"<ViewMut<Buffer, P>>::min_length","value":"fn (&self) -> usize","parent":null,"children":[],"decl_id":null,"docs":" Get the minimum length of a buffer such that all in-bounds samples have valid indices.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":625},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":160034,"byte_end":160044,"line_start":1146,"line_end":1146,"column_start":12,"column_end":22},"name":"get_sample","qualname":"<ViewMut<Buffer, P>>::get_sample","value":"fn (&self, channel: u8, x: u32, y: u32) -> Option<&P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a reference to a selected subpixel.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":626},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":160669,"byte_end":160683,"line_start":1162,"line_end":1162,"column_start":12,"column_end":26},"name":"get_mut_sample","qualname":"<ViewMut<Buffer, P>>::get_mut_sample","value":"fn (&mut self, channel: u8, x: u32, y: u32) -> Option<&mut P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Get a mutable reference to a selected sample.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":627},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":161294,"byte_end":161305,"line_start":1176,"line_end":1176,"column_start":12,"column_end":23},"name":"image_slice","qualname":"<ViewMut<Buffer, P>>::image_slice","value":"fn (&self) -> &[P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the portion of the buffer that holds sample values.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":628},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":161504,"byte_end":161519,"line_start":1181,"line_end":1181,"column_start":12,"column_end":27},"name":"image_mut_slice","qualname":"<ViewMut<Buffer, P>>::image_mut_slice","value":"fn (&mut self) -> &mut [P::Subpixel]","parent":null,"children":[],"decl_id":null,"docs":" Return the mutable buffer that holds sample values.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":629},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":161987,"byte_end":161996,"line_start":1191,"line_end":1191,"column_start":12,"column_end":21},"name":"shrink_to","qualname":"<ViewMut<Buffer, P>>::shrink_to","value":"fn (&mut self, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Shrink the inner image.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":677},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"bmp","qualname":"::bmp","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\mod.rs","parent":null,"children":[{"krate":0,"index":678},{"krate":0,"index":679},{"krate":0,"index":680},{"krate":0,"index":875}],"decl_id":null,"docs":"  Decoding and Encoding of BMP Images","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1975,"byte_end":1998,"line_start":82,"line_end":82,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":772},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":187238,"byte_end":187248,"line_start":430,"line_end":430,"column_start":12,"column_end":22},"name":"BmpDecoder","qualname":"::bmp::decoder::BmpDecoder","value":"BmpDecoder {  }","parent":null,"children":[{"krate":0,"index":774},{"krate":0,"index":775},{"krate":0,"index":776},{"krate":0,"index":777},{"krate":0,"index":778},{"krate":0,"index":779},{"krate":0,"index":780},{"krate":0,"index":781},{"krate":0,"index":782},{"krate":0,"index":783},{"krate":0,"index":784},{"krate":0,"index":785},{"krate":0,"index":786},{"krate":0,"index":787}],"decl_id":null,"docs":" A bmp decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":817},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":189816,"byte_end":189819,"line_start":517,"line_end":517,"column_start":12,"column_end":15},"name":"new","qualname":"<BmpDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<BmpDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":826},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":200380,"byte_end":200407,"line_start":816,"line_end":816,"column_start":12,"column_end":39},"name":"read_metadata_in_ico_format","qualname":"<BmpDecoder<R>>::read_metadata_in_ico_format","value":"fn (&mut self) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":200326,"byte_end":200349,"line_start":814,"line_end":814,"column_start":5,"column_end":28}}]},{"kind":"Struct","id":{"krate":0,"index":850},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":220286,"byte_end":220295,"line_start":1291,"line_end":1291,"column_start":12,"column_end":21},"name":"BmpReader","qualname":"::bmp::decoder::BmpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":890},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":222908,"byte_end":222918,"line_start":13,"line_end":13,"column_start":12,"column_end":22},"name":"BMPEncoder","qualname":"::bmp::encoder::BMPEncoder","value":"BMPEncoder {  }","parent":null,"children":[{"krate":0,"index":893}],"decl_id":null,"docs":" The representation of a BMP encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":897},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":223077,"byte_end":223080,"line_start":19,"line_end":19,"column_start":12,"column_end":15},"name":"new","qualname":"<BMPEncoder>::new","value":"fn (w: &'a mut W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":898},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":223288,"byte_end":223294,"line_start":26,"line_end":26,"column_start":12,"column_end":18},"name":"encode","qualname":"<BMPEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":909},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dds","qualname":"::dds","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","parent":null,"children":[{"krate":0,"index":910},{"krate":0,"index":911},{"krate":0,"index":914},{"krate":0,"index":915},{"krate":0,"index":919},{"krate":0,"index":922},{"krate":0,"index":3816},{"krate":0,"index":3826},{"krate":0,"index":3828},{"krate":0,"index":3837},{"krate":0,"index":923},{"krate":0,"index":926},{"krate":0,"index":932},{"krate":0,"index":935},{"krate":0,"index":939}],"decl_id":null,"docs":"  Decoding of DDS images","sig":null,"attributes":[{"value":"cfg(feature = \"dds\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2012,"byte_end":2035,"line_start":84,"line_end":84,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":932},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":237963,"byte_end":237973,"line_start":116,"line_end":116,"column_start":12,"column_end":22},"name":"DdsDecoder","qualname":"::dds::DdsDecoder","value":"DdsDecoder {  }","parent":null,"children":[{"krate":0,"index":934}],"decl_id":null,"docs":" The representation of a DDS decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":937},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":238117,"byte_end":238120,"line_start":122,"line_end":122,"column_start":12,"column_end":15},"name":"new","qualname":"<DdsDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":948},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"dxt","qualname":"::dxt","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","parent":null,"children":[{"krate":0,"index":949},{"krate":0,"index":950},{"krate":0,"index":956},{"krate":0,"index":957},{"krate":0,"index":960},{"krate":0,"index":3839},{"krate":0,"index":3855},{"krate":0,"index":3854},{"krate":0,"index":3852},{"krate":0,"index":3849},{"krate":0,"index":3850},{"krate":0,"index":3846},{"krate":0,"index":3847},{"krate":0,"index":966},{"krate":0,"index":970},{"krate":0,"index":977},{"krate":0,"index":981},{"krate":0,"index":990},{"krate":0,"index":997},{"krate":0,"index":1001},{"krate":0,"index":1005},{"krate":0,"index":1008},{"krate":0,"index":1012},{"krate":0,"index":1013},{"krate":0,"index":1015},{"krate":0,"index":1016},{"krate":0,"index":1017},{"krate":0,"index":1018},{"krate":0,"index":1019},{"krate":0,"index":1021},{"krate":0,"index":1024},{"krate":0,"index":1026},{"krate":0,"index":1028},{"krate":0,"index":1029},{"krate":0,"index":1031},{"krate":0,"index":1033},{"krate":0,"index":1035},{"krate":0,"index":1046},{"krate":0,"index":1050},{"krate":0,"index":1054},{"krate":0,"index":1055},{"krate":0,"index":1056},{"krate":0,"index":1058},{"krate":0,"index":1060}],"decl_id":null,"docs":"  Decoding of DXT (S3TC) compression","sig":null,"attributes":[{"value":"cfg(feature = \"dxt\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2049,"byte_end":2072,"line_start":86,"line_end":86,"column_start":1,"column_end":24}}]},{"kind":"TupleVariant","id":{"krate":0,"index":3840},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240580,"byte_end":240584,"line_start":24,"line_end":24,"column_start":5,"column_end":9},"name":"DXT1","qualname":"::dxt::DXTVariant::DXT1","value":"DXTVariant::DXT1","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" The DXT1 format. 48 bytes of RGB data in a 4x4 pixel square is\n compressed into an 8 byte block of DXT1 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3842},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240715,"byte_end":240719,"line_start":27,"line_end":27,"column_start":5,"column_end":9},"name":"DXT3","qualname":"::dxt::DXTVariant::DXT3","value":"DXTVariant::DXT3","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" The DXT3 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT3 data\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3844},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240850,"byte_end":240854,"line_start":30,"line_end":30,"column_start":5,"column_end":9},"name":"DXT5","qualname":"::dxt::DXTVariant::DXT5","value":"DXTVariant::DXT5","parent":{"krate":0,"index":3839},"children":[],"decl_id":null,"docs":" The DXT5 format. 64 bytes of RGBA data in a 4x4 pixel square is\n compressed into a 16 byte block of DXT5 data\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3839},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240439,"byte_end":240449,"line_start":21,"line_end":21,"column_start":10,"column_end":20},"name":"DXTVariant","qualname":"::dxt::DXTVariant","value":"DXTVariant::{DXT1, DXT3, DXT5}","parent":null,"children":[{"krate":0,"index":3840},{"krate":0,"index":3842},{"krate":0,"index":3844}],"decl_id":null,"docs":" What version of DXT compression are we using?\n Note that DXT2 and DXT4 are left away as they're\n just DXT3 and DXT5 with premultiplied alpha\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":969},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":241475,"byte_end":241485,"line_start":52,"line_end":52,"column_start":12,"column_end":22},"name":"color_type","qualname":"<DXTVariant>::color_type","value":"fn (self) -> ColorType","parent":null,"children":[],"decl_id":null,"docs":" Returns the color type that is stored in this DXT variant\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":970},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":241692,"byte_end":241702,"line_start":61,"line_end":61,"column_start":12,"column_end":22},"name":"DxtDecoder","qualname":"::dxt::DxtDecoder","value":"DxtDecoder {  }","parent":null,"children":[{"krate":0,"index":972},{"krate":0,"index":973},{"krate":0,"index":974},{"krate":0,"index":975},{"krate":0,"index":976}],"decl_id":null,"docs":" DXT decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":979},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":242282,"byte_end":242285,"line_start":77,"line_end":77,"column_start":12,"column_end":15},"name":"new","qualname":"<DxtDecoder<R>>::new","value":"fn (r: R, width: u32, height: u32, variant: DXTVariant) -> Result<DxtDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new DXT decoder that decodes from the stream ```r```.\n As DXT is often stored as raw buffers with the width/height\n somewhere else the width and height of the image need\n to be passed in ```width``` and ```height```, as well as the\n DXT variant in ```variant```.\n width and height are required to be powers of 2 and at least 4.\n otherwise an error will be returned\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":997},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245277,"byte_end":245286,"line_start":173,"line_end":173,"column_start":12,"column_end":21},"name":"DXTReader","qualname":"::dxt::DXTReader","value":"DXTReader {  }","parent":null,"children":[{"krate":0,"index":999},{"krate":0,"index":1000}],"decl_id":null,"docs":" DXT reader\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1005},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245598,"byte_end":245608,"line_start":185,"line_end":185,"column_start":12,"column_end":22},"name":"DXTEncoder","qualname":"::dxt::DXTEncoder","value":"DXTEncoder {  }","parent":null,"children":[{"krate":0,"index":1007}],"decl_id":null,"docs":" DXT encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1010},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245739,"byte_end":245742,"line_start":191,"line_end":191,"column_start":12,"column_end":15},"name":"new","qualname":"<DXTEncoder<W>>::new","value":"fn (w: W) -> DXTEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1011},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":246006,"byte_end":246012,"line_start":199,"line_end":199,"column_start":12,"column_end":18},"name":"encode","qualname":"<DXTEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, variant: DXTVariant) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image data ```data```\n that has dimensions ```width``` and ```height```\n in ```DXTVariant``` ```variant```\n data is assumed to be in variant.color_type()\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1062},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"gif","qualname":"::gif","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","parent":null,"children":[{"krate":0,"index":1063},{"krate":0,"index":1064},{"krate":0,"index":1065},{"krate":0,"index":1066},{"krate":0,"index":1067},{"krate":0,"index":1072},{"krate":0,"index":1073},{"krate":0,"index":1074},{"krate":0,"index":1077},{"krate":0,"index":1080},{"krate":0,"index":1081},{"krate":0,"index":1082},{"krate":0,"index":1085},{"krate":0,"index":1088},{"krate":0,"index":1091},{"krate":0,"index":1095},{"krate":0,"index":1098},{"krate":0,"index":1101},{"krate":0,"index":1106},{"krate":0,"index":1110},{"krate":0,"index":1120},{"krate":0,"index":1126},{"krate":0,"index":1129},{"krate":0,"index":1133},{"krate":0,"index":1135},{"krate":0,"index":1139},{"krate":0,"index":1143},{"krate":0,"index":1158}],"decl_id":null,"docs":"  Decoding of GIF Images","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2086,"byte_end":2109,"line_start":88,"line_end":88,"column_start":1,"column_end":24}},{"value":"allow(clippy :: while_let_loop)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":268732,"byte_end":268765,"line_start":27,"line_end":27,"column_start":1,"column_end":34}}]},{"kind":"Struct","id":{"krate":0,"index":1095},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269279,"byte_end":269289,"line_start":48,"line_end":48,"column_start":12,"column_end":22},"name":"GifDecoder","qualname":"::gif::GifDecoder","value":"GifDecoder {  }","parent":null,"children":[{"krate":0,"index":1097}],"decl_id":null,"docs":" GIF decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1100},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269440,"byte_end":269443,"line_start":54,"line_end":54,"column_start":12,"column_end":15},"name":"new","qualname":"<GifDecoder<R>>::new","value":"fn (r: R) -> ImageResult<GifDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes the input steam ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1101},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269744,"byte_end":269753,"line_start":65,"line_end":65,"column_start":12,"column_end":21},"name":"GifReader","qualname":"::gif::GifReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1139},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278730,"byte_end":278737,"line_start":311,"line_end":311,"column_start":12,"column_end":19},"name":"Encoder","qualname":"::gif::Encoder","value":"Encoder {  }","parent":null,"children":[{"krate":0,"index":1141},{"krate":0,"index":1142}],"decl_id":null,"docs":" GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1145},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278887,"byte_end":278890,"line_start":318,"line_end":318,"column_start":12,"column_end":15},"name":"new","qualname":"<Encoder<W>>::new","value":"fn (w: W) -> Encoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new GIF encoder.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1146},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":279045,"byte_end":279051,"line_start":326,"line_end":326,"column_start":12,"column_end":18},"name":"encode","qualname":"<Encoder<W>>::encode","value":"fn (&mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode a single image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1147},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":279630,"byte_end":279642,"line_start":344,"line_end":344,"column_start":12,"column_end":24},"name":"encode_frame","qualname":"<Encoder<W>>::encode_frame","value":"fn (&mut self, img_frame: animation::Frame) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode one frame of animation.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1148},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":279928,"byte_end":279941,"line_start":351,"line_end":351,"column_start":12,"column_end":25},"name":"encode_frames","qualname":"<Encoder<W>>::encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes Frames.\n Consider using `try_encode_frames` instead to encode an `animation::Frames` like iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1150},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":280419,"byte_end":280436,"line_start":364,"line_end":364,"column_start":12,"column_end":29},"name":"try_encode_frames","qualname":"<Encoder<W>>::try_encode_frames","value":"fn <F> (&mut self, frames: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Try to encode a collection of `ImageResult<animation::Frame>` objects.\n Use this function to encode an `animation::Frames` like iterator.\n Whenever an `Err` item is encountered, that value is returned without further actions.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1161},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"hdr","qualname":"::hdr","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\mod.rs","parent":null,"children":[{"krate":0,"index":1162},{"krate":0,"index":1320},{"krate":0,"index":1371},{"krate":0,"index":1372}],"decl_id":null,"docs":"  Decoding of Radiance HDR Images","sig":null,"attributes":[{"value":"cfg(feature = \"hdr\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2123,"byte_end":2146,"line_start":90,"line_end":90,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":3857},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":283425,"byte_end":283435,"line_start":19,"line_end":19,"column_start":12,"column_end":22},"name":"HDRAdapter","qualname":"::hdr::decoder::HDRAdapter","value":"HDRAdapter {  }","parent":null,"children":[{"krate":0,"index":3859},{"krate":0,"index":3860}],"decl_id":null,"docs":" Adapter to conform to ```ImageDecoder``` trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1190},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":283608,"byte_end":283611,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<HDRAdapter<R>>::new","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates adapter\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1191},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":283884,"byte_end":283897,"line_start":37,"line_end":37,"column_start":12,"column_end":25},"name":"new_nonstrict","qualname":"<HDRAdapter<R>>::new_nonstrict","value":"fn (r: R) -> ImageResult<HDRAdapter<R>>","parent":null,"children":[],"decl_id":null,"docs":" Allows reading old Radiance HDR images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1193},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":284784,"byte_end":284793,"line_start":64,"line_end":64,"column_start":12,"column_end":21},"name":"HdrReader","qualname":"::hdr::decoder::HdrReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":1218},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286256,"byte_end":286265,"line_start":115,"line_end":115,"column_start":11,"column_end":20},"name":"SIGNATURE","qualname":"::hdr::decoder::SIGNATURE","value":"&[u8]","parent":null,"children":[],"decl_id":null,"docs":" Radiance HDR file signature\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3864},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286383,"byte_end":286393,"line_start":120,"line_end":120,"column_start":12,"column_end":22},"name":"HdrDecoder","qualname":"::hdr::decoder::HdrDecoder","value":"HdrDecoder {  }","parent":null,"children":[{"krate":0,"index":3866},{"krate":0,"index":3867},{"krate":0,"index":3868},{"krate":0,"index":3869}],"decl_id":null,"docs":" An Radiance HDR decoder\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3873},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286618,"byte_end":286628,"line_start":130,"line_end":130,"column_start":12,"column_end":22},"name":"RGBE8Pixel","qualname":"::hdr::decoder::RGBE8Pixel","value":"RGBE8Pixel { c, e }","parent":null,"children":[{"krate":0,"index":3874},{"krate":0,"index":3876}],"decl_id":null,"docs":" Refer to [wikipedia](https://en.wikipedia.org/wiki/RGBE_image_format)\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286542,"byte_end":286552,"line_start":128,"line_end":128,"column_start":1,"column_end":11}}]},{"kind":"Field","id":{"krate":0,"index":3874},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286664,"byte_end":286665,"line_start":132,"line_end":132,"column_start":9,"column_end":10},"name":"c","qualname":"::hdr::decoder::RGBE8Pixel::c","value":"[u8; _]","parent":{"krate":0,"index":3873},"children":[],"decl_id":null,"docs":" Color components\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3876},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286701,"byte_end":286702,"line_start":134,"line_end":134,"column_start":9,"column_end":10},"name":"e","qualname":"::hdr::decoder::RGBE8Pixel::e","value":"u8","parent":{"krate":0,"index":3873},"children":[],"decl_id":null,"docs":" Exponent\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1220},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286763,"byte_end":286768,"line_start":138,"line_end":138,"column_start":8,"column_end":13},"name":"rgbe8","qualname":"::hdr::decoder::rgbe8","value":"fn (r: u8, g: u8, b: u8, e: u8) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Creates ```RGBE8Pixel``` from components\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1222},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286957,"byte_end":286963,"line_start":145,"line_end":145,"column_start":12,"column_end":18},"name":"to_hdr","qualname":"<RGBE8Pixel>::to_hdr","value":"fn (self) -> Rgb<f32>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<f32>``` linearly\n","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286936,"byte_end":286945,"line_start":144,"line_end":144,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1223},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":287723,"byte_end":287729,"line_start":167,"line_end":167,"column_start":12,"column_end":18},"name":"to_ldr","qualname":"<RGBE8Pixel>::to_ldr","value":"fn <T> (self) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts ```RGBE8Pixel``` into ```Rgb<T>``` with scale=1 and gamma=2.2","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":287702,"byte_end":287711,"line_start":166,"line_end":166,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1225},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":288115,"byte_end":288133,"line_start":180,"line_end":180,"column_start":12,"column_end":30},"name":"to_ldr_scale_gamma","qualname":"<RGBE8Pixel>::to_ldr_scale_gamma","value":"fn <T> (self, scale: f32, gamma: f32) -> Rgb<T>","parent":null,"children":[],"decl_id":null,"docs":" Converts RGBE8Pixel into Rgb<T> using provided scale and gamma","sig":null,"attributes":[{"value":"inline","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":288094,"byte_end":288103,"line_start":179,"line_end":179,"column_start":5,"column_end":14}}]},{"kind":"Method","id":{"krate":0,"index":1231},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":289341,"byte_end":289344,"line_start":211,"line_end":211,"column_start":12,"column_end":15},"name":"new","qualname":"<HdrDecoder<R>>::new","value":"fn (reader: R) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```r```\n if the header is valid, creates HdrDecoder\n strict mode is enabled\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1232},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":289752,"byte_end":289767,"line_start":222,"line_end":222,"column_start":12,"column_end":27},"name":"with_strictness","qualname":"<HdrDecoder<R>>::with_strictness","value":"fn (mut reader: R, strict: bool) -> ImageResult<HdrDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Reads Radiance HDR image header from stream ```reader```,\n if the header is valid, creates ```HdrDecoder```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1234},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":292417,"byte_end":292425,"line_start":291,"line_end":291,"column_start":12,"column_end":20},"name":"metadata","qualname":"<HdrDecoder<R>>::metadata","value":"fn (&self) -> HDRMetadata","parent":null,"children":[],"decl_id":null,"docs":" Returns file metadata. Refer to ```HDRMetadata``` for details.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1235},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":292556,"byte_end":292573,"line_start":296,"line_end":296,"column_start":12,"column_end":29},"name":"read_image_native","qualname":"<HdrDecoder<R>>::read_image_native","value":"fn (mut self) -> ImageResult<Vec<RGBE8Pixel>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of RGBE8 pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1236},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":293206,"byte_end":293226,"line_start":311,"line_end":311,"column_start":12,"column_end":32},"name":"read_image_transform","qualname":"<HdrDecoder<R>>::read_image_transform","value":"fn <T, F> (mut self, f: F, output_slice: &mut [T]) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of transformed pixels\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1241},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":294365,"byte_end":294379,"line_start":347,"line_end":347,"column_start":12,"column_end":26},"name":"read_image_ldr","qualname":"<HdrDecoder<R>>::read_image_ldr","value":"fn (self) -> ImageResult<Vec<Rgb<u8>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<u8> pixels.\n scale = 1, gamma = 2.2\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1243},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":294683,"byte_end":294697,"line_start":355,"line_end":355,"column_start":12,"column_end":26},"name":"read_image_hdr","qualname":"<HdrDecoder<R>>::read_image_hdr","value":"fn (self) -> ImageResult<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Consumes decoder and returns a vector of Rgb<f32> pixels.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1250},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":295508,"byte_end":295531,"line_start":380,"line_end":380,"column_start":12,"column_end":35},"name":"HDRImageDecoderIterator","qualname":"::hdr::decoder::HDRImageDecoderIterator","value":"HDRImageDecoderIterator {  }","parent":null,"children":[{"krate":0,"index":1252},{"krate":0,"index":1253},{"krate":0,"index":1254},{"krate":0,"index":1255},{"krate":0,"index":1256},{"krate":0,"index":1257},{"krate":0,"index":1258}],"decl_id":null,"docs":" Scanline buffered pixel by pixel iterator\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3893},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":303289,"byte_end":303300,"line_start":612,"line_end":612,"column_start":12,"column_end":23},"name":"HDRMetadata","qualname":"::hdr::decoder::HDRMetadata","value":"HDRMetadata { width, height, orientation, exposure, color_correction, pixel_aspect_ratio, custom_attributes }","parent":null,"children":[{"krate":0,"index":3894},{"krate":0,"index":3895},{"krate":0,"index":3896},{"krate":0,"index":3897},{"krate":0,"index":3898},{"krate":0,"index":3899},{"krate":0,"index":3900}],"decl_id":null,"docs":" Metadata for Radiance HDR image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3894},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":303438,"byte_end":303443,"line_start":615,"line_end":615,"column_start":9,"column_end":14},"name":"width","qualname":"::hdr::decoder::HDRMetadata::width","value":"u32","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Width of decoded image. It could be either scanline length,\n or scanline count, depending on image orientation.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3895},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":303522,"byte_end":303528,"line_start":617,"line_end":617,"column_start":9,"column_end":15},"name":"height","qualname":"::hdr::decoder::HDRMetadata::height","value":"u32","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Height of decoded image. It depends on orientation too.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3896},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":303803,"byte_end":303814,"line_start":621,"line_end":621,"column_start":9,"column_end":20},"name":"orientation","qualname":"::hdr::decoder::HDRMetadata::orientation","value":"((i8, i8), (i8, i8))","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Orientation matrix. For standard orientation it is ((1,0),(0,1)) - left to right, top to bottom.\n First pair tells how resulting pixel coordinates change along a scanline.\n Second pair tells how they change from one scanline to the next.\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3897},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304039,"byte_end":304047,"line_start":626,"line_end":626,"column_start":9,"column_end":17},"name":"exposure","qualname":"::hdr::decoder::HDRMetadata::exposure","value":"std::option::Option<f32>","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Divide color values by exposure to get to get physical radiance in\n watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3898},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304291,"byte_end":304307,"line_start":631,"line_end":631,"column_start":9,"column_end":25},"name":"color_correction","qualname":"::hdr::decoder::HDRMetadata::color_correction","value":"std::option::Option<(f32, f32, f32)>","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Divide color values by corresponding tuple member (r, g, b) to get to get physical radiance\n in watts/steradian/m<sup>2</sup>","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3899},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304386,"byte_end":304404,"line_start":633,"line_end":633,"column_start":9,"column_end":27},"name":"pixel_aspect_ratio","qualname":"::hdr::decoder::HDRMetadata::pixel_aspect_ratio","value":"std::option::Option<f32>","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" Pixel height divided by pixel width\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3900},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304633,"byte_end":304650,"line_start":637,"line_end":637,"column_start":9,"column_end":26},"name":"custom_attributes","qualname":"::hdr::decoder::HDRMetadata::custom_attributes","value":"std::vec::Vec<(std::string::String, std::string::String)>","parent":{"krate":0,"index":3893},"children":[],"decl_id":null,"docs":" All lines contained in image header are put here. Ordering of lines is preserved.\n Lines in the form \"key=value\" are represented as (\"key\", \"value\").\n All other lines are (\"\", \"line\")\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1313},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":314426,"byte_end":314439,"line_start":896,"line_end":896,"column_start":8,"column_end":21},"name":"read_raw_file","qualname":"::hdr::decoder::read_raw_file","value":"fn <P> (path: P) -> ::std::io::Result<Vec<Rgb<f32>>>","parent":null,"children":[],"decl_id":null,"docs":" Helper function for reading raw 3-channel f32 images\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1331},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":315260,"byte_end":315270,"line_start":8,"line_end":8,"column_start":12,"column_end":22},"name":"HDREncoder","qualname":"::hdr::encoder::HDREncoder","value":"HDREncoder {  }","parent":null,"children":[{"krate":0,"index":1333}],"decl_id":null,"docs":" Radiance HDR encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1336},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":315362,"byte_end":315365,"line_start":14,"line_end":14,"column_start":12,"column_end":15},"name":"new","qualname":"<HDREncoder<W>>::new","value":"fn (w: W) -> HDREncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Creates encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1337},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":315528,"byte_end":315534,"line_start":20,"line_end":20,"column_start":12,"column_end":18},"name":"encode","qualname":"<HDREncoder<W>>::encode","value":"fn (mut self, data: &[Rgb<f32>], width: usize, height: usize) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```data```\n that has dimensions ```width``` and ```height```\n","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":1369},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":322964,"byte_end":322972,"line_start":228,"line_end":228,"column_start":8,"column_end":16},"name":"to_rgbe8","qualname":"::hdr::encoder::to_rgbe8","value":"fn (pix: Rgb<f32>) -> RGBE8Pixel","parent":null,"children":[],"decl_id":null,"docs":" Converts ```Rgb<f32>``` into ```RGBE8Pixel```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1373},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"ico","qualname":"::ico","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\mod.rs","parent":null,"children":[{"krate":0,"index":1374},{"krate":0,"index":1375},{"krate":0,"index":1376},{"krate":0,"index":1450}],"decl_id":null,"docs":"  Decoding and Encoding of ICO files","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2160,"byte_end":2183,"line_start":92,"line_end":92,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1401},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":331308,"byte_end":331318,"line_start":20,"line_end":20,"column_start":12,"column_end":22},"name":"IcoDecoder","qualname":"::ico::decoder::IcoDecoder","value":"IcoDecoder {  }","parent":null,"children":[{"krate":0,"index":1403},{"krate":0,"index":1404}],"decl_id":null,"docs":" An ico decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1415},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":331816,"byte_end":331819,"line_start":46,"line_end":46,"column_start":12,"column_end":15},"name":"new","qualname":"<IcoDecoder<R>>::new","value":"fn (mut r: R) -> ImageResult<IcoDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1433},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":335409,"byte_end":335418,"line_start":166,"line_end":166,"column_start":12,"column_end":21},"name":"IcoReader","qualname":"::ico::decoder::IcoReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1464},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":340759,"byte_end":340769,"line_start":18,"line_end":18,"column_start":12,"column_end":22},"name":"ICOEncoder","qualname":"::ico::encoder::ICOEncoder","value":"ICOEncoder {  }","parent":null,"children":[{"krate":0,"index":1466}],"decl_id":null,"docs":" ICO encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1469},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":340901,"byte_end":340904,"line_start":24,"line_end":24,"column_start":12,"column_end":15},"name":"new","qualname":"<ICOEncoder<W>>::new","value":"fn (w: W) -> ICOEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1470},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":341202,"byte_end":341208,"line_start":31,"line_end":31,"column_start":12,"column_end":18},"name":"encode","qualname":"<ICOEncoder<W>>::encode","value":"fn (mut self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image``` that has dimensions ```width``` and\n ```height``` and ```ColorType``` ```c```.  The dimensions of the image\n must be between 1 and 256 (inclusive) or an error will be returned.\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1480},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"jpeg","qualname":"::jpeg","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\mod.rs","parent":null,"children":[{"krate":0,"index":1481},{"krate":0,"index":1482},{"krate":0,"index":1486},{"krate":0,"index":1530},{"krate":0,"index":1642},{"krate":0,"index":1645}],"decl_id":null,"docs":" Decoding and Encoding of JPEG Images","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2197,"byte_end":2221,"line_start":94,"line_end":94,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":1499},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":344229,"byte_end":344240,"line_start":11,"line_end":11,"column_start":12,"column_end":23},"name":"JpegDecoder","qualname":"::jpeg::decoder::JpegDecoder","value":"JpegDecoder {  }","parent":null,"children":[{"krate":0,"index":1501},{"krate":0,"index":1502}],"decl_id":null,"docs":" JPEG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1505},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":344419,"byte_end":344422,"line_start":18,"line_end":18,"column_start":12,"column_end":15},"name":"new","qualname":"<JpegDecoder<R>>::new","value":"fn (r: R) -> ImageResult<JpegDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1506},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":344980,"byte_end":344990,"line_start":37,"line_end":37,"column_start":12,"column_end":22},"name":"JpegReader","qualname":"::jpeg::decoder::JpegReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3955},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":356673,"byte_end":356689,"line_start":283,"line_end":283,"column_start":5,"column_end":21},"name":"PixelAspectRatio","qualname":"::jpeg::encoder::PixelDensityUnit::PixelAspectRatio","value":"PixelDensityUnit::PixelAspectRatio","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" Represents the absence of a unit, the values indicate only a\n [pixel aspect ratio](https://en.wikipedia.org/wiki/Pixel_aspect_ratio)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3957},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":356730,"byte_end":356736,"line_start":286,"line_end":286,"column_start":5,"column_end":11},"name":"Inches","qualname":"::jpeg::encoder::PixelDensityUnit::Inches","value":"PixelDensityUnit::Inches","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" Pixels per inch (2.54 cm)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":3959},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":356773,"byte_end":356784,"line_start":289,"line_end":289,"column_start":5,"column_end":16},"name":"Centimeters","qualname":"::jpeg::encoder::PixelDensityUnit::Centimeters","value":"PixelDensityUnit::Centimeters","parent":{"krate":0,"index":3954},"children":[],"decl_id":null,"docs":" Pixels per centimeter\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":3954},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":356502,"byte_end":356518,"line_start":280,"line_end":280,"column_start":10,"column_end":26},"name":"PixelDensityUnit","qualname":"::jpeg::encoder::PixelDensityUnit","value":"PixelDensityUnit::{PixelAspectRatio, Inches, Centimeters}","parent":null,"children":[{"krate":0,"index":3955},{"krate":0,"index":3957},{"krate":0,"index":3959}],"decl_id":null,"docs":" Represents a unit in which the density of an image is measured\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3972},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357121,"byte_end":357133,"line_start":302,"line_end":302,"column_start":12,"column_end":24},"name":"PixelDensity","qualname":"::jpeg::encoder::PixelDensity","value":"PixelDensity { density, unit }","parent":null,"children":[{"krate":0,"index":3973},{"krate":0,"index":3974}],"decl_id":null,"docs":" Represents the pixel density of an image","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3973},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357196,"byte_end":357203,"line_start":304,"line_end":304,"column_start":9,"column_end":16},"name":"density","qualname":"::jpeg::encoder::PixelDensity::density","value":"(u16, u16)","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":" A couple of values for (Xdensity, Ydensity)\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":3974},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357275,"byte_end":357279,"line_start":306,"line_end":306,"column_start":9,"column_end":13},"name":"unit","qualname":"::jpeg::encoder::PixelDensity::unit","value":"jpeg::encoder::PixelDensityUnit","parent":{"krate":0,"index":3972},"children":[],"decl_id":null,"docs":" The unit in which the density is measured\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1592},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357485,"byte_end":357488,"line_start":313,"line_end":313,"column_start":12,"column_end":15},"name":"dpi","qualname":"<PixelDensity>::dpi","value":"fn (density: u16) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates the most common pixel density type:\n the horizontal and the vertical density are equal,\n and measured in pixels per inch.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1595},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357939,"byte_end":357950,"line_start":332,"line_end":332,"column_start":12,"column_end":23},"name":"JPEGEncoder","qualname":"::jpeg::encoder::JPEGEncoder","value":"JPEGEncoder {  }","parent":null,"children":[{"krate":0,"index":1598},{"krate":0,"index":1599},{"krate":0,"index":1600},{"krate":0,"index":1601},{"krate":0,"index":1602},{"krate":0,"index":1603},{"krate":0,"index":1604},{"krate":0,"index":1605}],"decl_id":null,"docs":" The representation of a JPEG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1609},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":358340,"byte_end":358343,"line_start":348,"line_end":348,"column_start":12,"column_end":15},"name":"new","qualname":"<JPEGEncoder>::new","value":"fn (w: &mut W) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1610},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":358636,"byte_end":358652,"line_start":355,"line_end":355,"column_start":12,"column_end":28},"name":"new_with_quality","qualname":"<JPEGEncoder>::new_with_quality","value":"fn (w: &mut W, quality: u8) -> JPEGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```, and has\n the quality parameter ```quality``` with a value in the range 1-100\n where 1 is the worst and 100 is the best.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1612},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":361020,"byte_end":361037,"line_start":427,"line_end":427,"column_start":12,"column_end":29},"name":"set_pixel_density","qualname":"<JPEGEncoder>::set_pixel_density","value":"fn (&mut self, pixel_density: PixelDensity) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Set the pixel density of the images the encoder will encode.\n If this method is not called, then a default pixel aspect ratio of 1x1 will be applied,\n and no DPI information will be stored in the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1613},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":361339,"byte_end":361345,"line_start":436,"line_end":436,"column_start":12,"column_end":18},"name":"encode","qualname":"<JPEGEncoder>::encode","value":"fn (&mut self, image: &[u8], width: u32, height: u32, c: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1661},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"png","qualname":"::png","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","parent":null,"children":[{"krate":0,"index":1662},{"krate":0,"index":1663},{"krate":0,"index":1667},{"krate":0,"index":1670},{"krate":0,"index":1676},{"krate":0,"index":1680},{"krate":0,"index":1685},{"krate":0,"index":1688},{"krate":0,"index":1692},{"krate":0,"index":1696},{"krate":0,"index":1699},{"krate":0,"index":1713},{"krate":0,"index":1716},{"krate":0,"index":1722},{"krate":0,"index":1730}],"decl_id":null,"docs":" Decoding and Encoding of PNG Images","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2236,"byte_end":2259,"line_start":96,"line_end":96,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1680},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":385162,"byte_end":385171,"line_start":21,"line_end":21,"column_start":12,"column_end":21},"name":"PNGReader","qualname":"::png::PNGReader","value":"PNGReader {  }","parent":null,"children":[{"krate":0,"index":1682},{"krate":0,"index":1683},{"krate":0,"index":1684}],"decl_id":null,"docs":" PNG Reader","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1692},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":387204,"byte_end":387214,"line_start":92,"line_end":92,"column_start":12,"column_end":22},"name":"PngDecoder","qualname":"::png::PngDecoder","value":"PngDecoder {  }","parent":null,"children":[{"krate":0,"index":1694},{"krate":0,"index":1695}],"decl_id":null,"docs":" PNG decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1698},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":387392,"byte_end":387395,"line_start":99,"line_end":99,"column_start":12,"column_end":15},"name":"new","qualname":"<PngDecoder<R>>::new","value":"fn (r: R) -> ImageResult<PngDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new decoder that decodes from the stream ```r```\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1713},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":392056,"byte_end":392066,"line_start":198,"line_end":198,"column_start":12,"column_end":22},"name":"PNGEncoder","qualname":"::png::PNGEncoder","value":"PNGEncoder {  }","parent":null,"children":[{"krate":0,"index":1715}],"decl_id":null,"docs":" PNG encoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1718},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":392197,"byte_end":392200,"line_start":204,"line_end":204,"column_start":12,"column_end":15},"name":"new","qualname":"<PNGEncoder<W>>::new","value":"fn (w: W) -> PNGEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1719},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":392400,"byte_end":392406,"line_start":211,"line_end":211,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNGEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image ```image```\n that has dimensions ```width``` and ```height```\n and ```ColorType``` ```c```\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":1733},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"pnm","qualname":"::pnm","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\mod.rs","parent":null,"children":[{"krate":0,"index":1734},{"krate":0,"index":1735},{"krate":0,"index":1736},{"krate":0,"index":1737},{"krate":0,"index":1738},{"krate":0,"index":1744},{"krate":0,"index":1748},{"krate":0,"index":1768},{"krate":0,"index":1919},{"krate":0,"index":2050}],"decl_id":null,"docs":" Decoding of netpbm image formats (pbm, pgm, ppm and pam).","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2273,"byte_end":2296,"line_start":98,"line_end":98,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":1821},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":407198,"byte_end":407208,"line_start":49,"line_end":49,"column_start":12,"column_end":22},"name":"PnmDecoder","qualname":"::pnm::decoder::PnmDecoder","value":"PnmDecoder {  }","parent":null,"children":[{"krate":0,"index":1823},{"krate":0,"index":1824},{"krate":0,"index":1825}],"decl_id":null,"docs":" PNM decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1828},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":407398,"byte_end":407401,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<PnmDecoder<R>>::new","value":"fn (read: R) -> ImageResult<PnmDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream ```read```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1829},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":408870,"byte_end":408880,"line_start":90,"line_end":90,"column_start":12,"column_end":22},"name":"into_inner","qualname":"<PnmDecoder<R>>::into_inner","value":"fn (self) -> (R, PNMHeader)","parent":null,"children":[],"decl_id":null,"docs":" Extract the reader and header after an image has been read.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1858},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":420580,"byte_end":420589,"line_start":415,"line_end":415,"column_start":12,"column_end":21},"name":"PnmReader","qualname":"::pnm::decoder::PnmReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1883},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":424341,"byte_end":424348,"line_start":518,"line_end":518,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PnmDecoder<R>>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Get the pnm subtype, depending on the magic constant contained in the header\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4005},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":445746,"byte_end":445748,"line_start":24,"line_end":24,"column_start":5,"column_end":7},"name":"U8","qualname":"::pnm::encoder::FlatSamples::U8","value":"FlatSamples::U8(&'a [u8])","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4008},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":445764,"byte_end":445767,"line_start":25,"line_end":25,"column_start":5,"column_end":8},"name":"U16","qualname":"::pnm::encoder::FlatSamples::U16","value":"FlatSamples::U16(&'a [u16])","parent":{"krate":0,"index":4003},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4003},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":445724,"byte_end":445735,"line_start":23,"line_end":23,"column_start":10,"column_end":21},"name":"FlatSamples","qualname":"::pnm::encoder::FlatSamples","value":"FlatSamples::{U8, U16}","parent":null,"children":[{"krate":0,"index":4005},{"krate":0,"index":4008}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":1954},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":445848,"byte_end":445858,"line_start":29,"line_end":29,"column_start":12,"column_end":22},"name":"PNMEncoder","qualname":"::pnm::encoder::PNMEncoder","value":"PNMEncoder {  }","parent":null,"children":[{"krate":0,"index":1956},{"krate":0,"index":1957}],"decl_id":null,"docs":" Encodes images to any of the `pnm` image formats.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1992},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":447248,"byte_end":447251,"line_start":84,"line_end":84,"column_start":12,"column_end":15},"name":"new","qualname":"<PNMEncoder<W>>::new","value":"fn (writer: W) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create new PNMEncoder from the `writer`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1993},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":447801,"byte_end":447813,"line_start":98,"line_end":98,"column_start":12,"column_end":24},"name":"with_subtype","qualname":"<PNMEncoder<W>>::with_subtype","value":"fn (self, subtype: PNMSubtype) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Encode a specific pnm subtype image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1994},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":448519,"byte_end":448530,"line_start":114,"line_end":114,"column_start":12,"column_end":23},"name":"with_header","qualname":"<PNMEncoder<W>>::with_header","value":"fn (self, header: PNMHeader) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Enforce the use of a chosen header.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1995},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":449101,"byte_end":449120,"line_start":128,"line_end":128,"column_start":12,"column_end":31},"name":"with_dynamic_header","qualname":"<PNMEncoder<W>>::with_dynamic_header","value":"fn (self) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create the header dynamically for each image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":1996},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":449496,"byte_end":449502,"line_start":139,"line_end":139,"column_start":12,"column_end":18},"name":"encode","qualname":"<PNMEncoder<W>>::encode","value":"fn <'s, S> (&mut self, image: S, width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode an image whose samples are represented as `u8`.","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4017},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":467937,"byte_end":467943,"line_start":7,"line_end":7,"column_start":5,"column_end":11},"name":"Binary","qualname":"::pnm::header::SampleEncoding::Binary","value":"SampleEncoding::Binary","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":" Samples are unsigned binary integers in big endian\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4019},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468027,"byte_end":468032,"line_start":10,"line_end":10,"column_start":5,"column_end":10},"name":"Ascii","qualname":"::pnm::header::SampleEncoding::Ascii","value":"SampleEncoding::Ascii","parent":{"krate":0,"index":4016},"children":[],"decl_id":null,"docs":" Samples are encoded as decimal ascii strings separated by whitespace\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4016},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":467857,"byte_end":467871,"line_start":5,"line_end":5,"column_start":10,"column_end":24},"name":"SampleEncoding","qualname":"::pnm::header::SampleEncoding","value":"SampleEncoding::{Binary, Ascii}","parent":null,"children":[{"krate":0,"index":4017},{"krate":0,"index":4019}],"decl_id":null,"docs":" The kind of encoding used to store sample values\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4033},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468185,"byte_end":468191,"line_start":17,"line_end":17,"column_start":5,"column_end":11},"name":"Bitmap","qualname":"::pnm::header::PNMSubtype::Bitmap","value":"PNMSubtype::Bitmap(SampleEncoding)","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":" Magic numbers P1 and P4\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4036},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468246,"byte_end":468253,"line_start":20,"line_end":20,"column_start":5,"column_end":12},"name":"Graymap","qualname":"::pnm::header::PNMSubtype::Graymap","value":"PNMSubtype::Graymap(SampleEncoding)","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":" Magic numbers P2 and P5\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4039},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468308,"byte_end":468314,"line_start":23,"line_end":23,"column_start":5,"column_end":11},"name":"Pixmap","qualname":"::pnm::header::PNMSubtype::Pixmap","value":"PNMSubtype::Pixmap(SampleEncoding)","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":" Magic numbers P3 and P6\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4042},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468361,"byte_end":468373,"line_start":26,"line_end":26,"column_start":5,"column_end":17},"name":"ArbitraryMap","qualname":"::pnm::header::PNMSubtype::ArbitraryMap","value":"PNMSubtype::ArbitraryMap","parent":{"krate":0,"index":4032},"children":[],"decl_id":null,"docs":" Magic number P7\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4032},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468136,"byte_end":468146,"line_start":15,"line_end":15,"column_start":10,"column_end":20},"name":"PNMSubtype","qualname":"::pnm::header::PNMSubtype","value":"PNMSubtype::{Bitmap, Graymap, Pixmap, ArbitraryMap}","parent":null,"children":[{"krate":0,"index":4033},{"krate":0,"index":4036},{"krate":0,"index":4039},{"krate":0,"index":4042}],"decl_id":null,"docs":" Denotes the category of the magic number\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2052},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":468765,"byte_end":468774,"line_start":35,"line_end":35,"column_start":12,"column_end":21},"name":"PNMHeader","qualname":"::pnm::header::PNMHeader","value":"PNMHeader {  }","parent":null,"children":[{"krate":0,"index":2053},{"krate":0,"index":2054}],"decl_id":null,"docs":" Stores the complete header data of a file.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4056},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469103,"byte_end":469115,"line_start":49,"line_end":49,"column_start":12,"column_end":24},"name":"BitmapHeader","qualname":"::pnm::header::BitmapHeader","value":"BitmapHeader { encoding, height, width }","parent":null,"children":[{"krate":0,"index":4057},{"krate":0,"index":4058},{"krate":0,"index":4059}],"decl_id":null,"docs":" Header produced by a `pbm` file (\"Portable Bit Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4057},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469163,"byte_end":469171,"line_start":51,"line_end":51,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::BitmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4058},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469231,"byte_end":469237,"line_start":54,"line_end":54,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::BitmapHeader::height","value":"u32","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4059},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469285,"byte_end":469290,"line_start":57,"line_end":57,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::BitmapHeader::width","value":"u32","parent":{"krate":0,"index":4056},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4065},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469399,"byte_end":469412,"line_start":62,"line_end":62,"column_start":12,"column_end":25},"name":"GraymapHeader","qualname":"::pnm::header::GraymapHeader","value":"GraymapHeader { encoding, height, width, maxwhite }","parent":null,"children":[{"krate":0,"index":4066},{"krate":0,"index":4067},{"krate":0,"index":4068},{"krate":0,"index":4069}],"decl_id":null,"docs":" Header produced by a `pgm` file (\"Portable Gray Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4066},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469460,"byte_end":469468,"line_start":64,"line_end":64,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::GraymapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4067},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469528,"byte_end":469534,"line_start":67,"line_end":67,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::GraymapHeader::height","value":"u32","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4068},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469582,"byte_end":469587,"line_start":70,"line_end":70,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::GraymapHeader::width","value":"u32","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4069},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469649,"byte_end":469657,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"name":"maxwhite","qualname":"::pnm::header::GraymapHeader::maxwhite","value":"u32","parent":{"krate":0,"index":4065},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4075},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469767,"byte_end":469779,"line_start":78,"line_end":78,"column_start":12,"column_end":24},"name":"PixmapHeader","qualname":"::pnm::header::PixmapHeader","value":"PixmapHeader { encoding, height, width, maxval }","parent":null,"children":[{"krate":0,"index":4076},{"krate":0,"index":4077},{"krate":0,"index":4078},{"krate":0,"index":4079}],"decl_id":null,"docs":" Header produced by a `ppm` file (\"Portable Pixel Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4076},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469827,"byte_end":469835,"line_start":80,"line_end":80,"column_start":9,"column_end":17},"name":"encoding","qualname":"::pnm::header::PixmapHeader::encoding","value":"pnm::header::SampleEncoding","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":" Binary or Ascii encoded file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4077},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469895,"byte_end":469901,"line_start":83,"line_end":83,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::PixmapHeader::height","value":"u32","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4078},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":469949,"byte_end":469954,"line_start":86,"line_end":86,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::PixmapHeader::width","value":"u32","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4079},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470016,"byte_end":470022,"line_start":89,"line_end":89,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::PixmapHeader::maxval","value":"u32","parent":{"krate":0,"index":4075},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4085},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470130,"byte_end":470145,"line_start":94,"line_end":94,"column_start":12,"column_end":27},"name":"ArbitraryHeader","qualname":"::pnm::header::ArbitraryHeader","value":"ArbitraryHeader { height, width, depth, maxval, tupltype }","parent":null,"children":[{"krate":0,"index":4086},{"krate":0,"index":4087},{"krate":0,"index":4088},{"krate":0,"index":4089},{"krate":0,"index":4090}],"decl_id":null,"docs":" Header produced by a `pam` file (\"Portable Arbitrary Map\")\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4086},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470189,"byte_end":470195,"line_start":96,"line_end":96,"column_start":9,"column_end":15},"name":"height","qualname":"::pnm::header::ArbitraryHeader::height","value":"u32","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":" Height of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4087},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470243,"byte_end":470248,"line_start":99,"line_end":99,"column_start":9,"column_end":14},"name":"width","qualname":"::pnm::header::ArbitraryHeader::width","value":"u32","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":" Width of the image file\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4088},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470297,"byte_end":470302,"line_start":102,"line_end":102,"column_start":9,"column_end":14},"name":"depth","qualname":"::pnm::header::ArbitraryHeader::depth","value":"u32","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":" Number of color channels\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4089},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470364,"byte_end":470370,"line_start":105,"line_end":105,"column_start":9,"column_end":15},"name":"maxval","qualname":"::pnm::header::ArbitraryHeader::maxval","value":"u32","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":" Maximum sample value within the image\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4090},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470431,"byte_end":470439,"line_start":108,"line_end":108,"column_start":9,"column_end":17},"name":"tupltype","qualname":"::pnm::header::ArbitraryHeader::tupltype","value":"std::option::Option<pnm::header::ArbitraryTuplType>","parent":{"krate":0,"index":4085},"children":[],"decl_id":null,"docs":" Color interpretation of image pixels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4096},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470642,"byte_end":470655,"line_start":115,"line_end":115,"column_start":5,"column_end":18},"name":"BlackAndWhite","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhite","value":"ArbitraryTuplType::BlackAndWhite","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1)\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4098},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470738,"byte_end":470756,"line_start":118,"line_end":118,"column_start":5,"column_end":23},"name":"BlackAndWhiteAlpha","qualname":"::pnm::header::ArbitraryTuplType::BlackAndWhiteAlpha","value":"ArbitraryTuplType::BlackAndWhiteAlpha","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Pixels are either black (0) or white (1) and a second alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4100},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470808,"byte_end":470817,"line_start":121,"line_end":121,"column_start":5,"column_end":14},"name":"Grayscale","qualname":"::pnm::header::ArbitraryTuplType::Grayscale","value":"ArbitraryTuplType::Grayscale","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Pixels represent the amount of white\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4102},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470875,"byte_end":470889,"line_start":124,"line_end":124,"column_start":5,"column_end":19},"name":"GrayscaleAlpha","qualname":"::pnm::header::ArbitraryTuplType::GrayscaleAlpha","value":"ArbitraryTuplType::GrayscaleAlpha","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Grayscale with an additional alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4104},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470937,"byte_end":470940,"line_start":127,"line_end":127,"column_start":5,"column_end":8},"name":"RGB","qualname":"::pnm::header::ArbitraryTuplType::RGB","value":"ArbitraryTuplType::RGB","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Three channels: Red, Green, Blue\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4106},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470994,"byte_end":471002,"line_start":130,"line_end":130,"column_start":5,"column_end":13},"name":"RGBAlpha","qualname":"::pnm::header::ArbitraryTuplType::RGBAlpha","value":"ArbitraryTuplType::RGBAlpha","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" Four channels: Red, Green, Blue, Alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4108},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":471059,"byte_end":471065,"line_start":133,"line_end":133,"column_start":5,"column_end":11},"name":"Custom","qualname":"::pnm::header::ArbitraryTuplType::Custom","value":"ArbitraryTuplType::Custom(String)","parent":{"krate":0,"index":4095},"children":[],"decl_id":null,"docs":" An image format which is not standardized\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4095},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":470569,"byte_end":470586,"line_start":113,"line_end":113,"column_start":10,"column_end":27},"name":"ArbitraryTuplType","qualname":"::pnm::header::ArbitraryTuplType","value":"ArbitraryTuplType::{BlackAndWhite, BlackAndWhiteAlpha, Grayscale, GrayscaleAlpha, RGB, RGBAlpha, Custom}","parent":null,"children":[{"krate":0,"index":4096},{"krate":0,"index":4098},{"krate":0,"index":4100},{"krate":0,"index":4102},{"krate":0,"index":4104},{"krate":0,"index":4106},{"krate":0,"index":4108}],"decl_id":null,"docs":" Standardized tuple type specifiers in the header of a `pam`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2069},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":471186,"byte_end":471200,"line_start":138,"line_end":138,"column_start":12,"column_end":26},"name":"magic_constant","qualname":"<PNMSubtype>::magic_constant","value":"fn (self) -> &'static [u8; 2]","parent":null,"children":[],"decl_id":null,"docs":" Get the two magic constant bytes corresponding to this format subtype.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2071},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":471779,"byte_end":471794,"line_start":151,"line_end":151,"column_start":12,"column_end":27},"name":"sample_encoding","qualname":"<PNMSubtype>::sample_encoding","value":"fn (self) -> SampleEncoding","parent":null,"children":[],"decl_id":null,"docs":" Whether samples are stored as binary or as decimal ascii\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2073},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":472157,"byte_end":472164,"line_start":163,"line_end":163,"column_start":12,"column_end":19},"name":"subtype","qualname":"<PNMHeader>::subtype","value":"fn (&self) -> PNMSubtype","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the format subtype from which the header was created.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2074},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":472679,"byte_end":472684,"line_start":173,"line_end":173,"column_start":12,"column_end":17},"name":"width","qualname":"<PNMHeader>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2075},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":473102,"byte_end":473108,"line_start":183,"line_end":183,"column_start":12,"column_end":18},"name":"height","qualname":"<PNMHeader>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of the image this header is for.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2076},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":473566,"byte_end":473580,"line_start":193,"line_end":193,"column_start":12,"column_end":26},"name":"maximal_sample","qualname":"<PNMHeader>::maximal_sample","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The biggest value a sample can have. In other words, the colour resolution.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2077},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":473998,"byte_end":474007,"line_start":203,"line_end":203,"column_start":12,"column_end":21},"name":"as_bitmap","qualname":"<PNMHeader>::as_bitmap","value":"fn (&self) -> Option<&BitmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying bitmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2078},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":474238,"byte_end":474248,"line_start":211,"line_end":211,"column_start":12,"column_end":22},"name":"as_graymap","qualname":"<PNMHeader>::as_graymap","value":"fn (&self) -> Option<&GraymapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying graymap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2079},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":474482,"byte_end":474491,"line_start":219,"line_end":219,"column_start":12,"column_end":21},"name":"as_pixmap","qualname":"<PNMHeader>::as_pixmap","value":"fn (&self) -> Option<&PixmapHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying pixmap header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2080},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":474724,"byte_end":474736,"line_start":227,"line_end":227,"column_start":12,"column_end":24},"name":"as_arbitrary","qualname":"<PNMHeader>::as_arbitrary","value":"fn (&self) -> Option<&ArbitraryHeader>","parent":null,"children":[],"decl_id":null,"docs":" Retrieve the underlying arbitrary header if any\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2081},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":474976,"byte_end":474981,"line_start":235,"line_end":235,"column_start":12,"column_end":17},"name":"write","qualname":"<PNMHeader>::write","value":"fn (&self, writer: &mut dyn io::Write) -> io::Result<()>","parent":null,"children":[],"decl_id":null,"docs":" Write the header back into a binary stream\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2090},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tga","qualname":"::tga","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\mod.rs","parent":null,"children":[{"krate":0,"index":2091},{"krate":0,"index":2092}],"decl_id":null,"docs":" Decoding of TGA Images","sig":null,"attributes":[{"value":"cfg(feature = \"tga\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2310,"byte_end":2333,"line_start":100,"line_end":100,"column_start":1,"column_end":24}}]},{"kind":"Struct","id":{"krate":0,"index":2147},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":483742,"byte_end":483752,"line_start":158,"line_end":158,"column_start":12,"column_end":22},"name":"TgaDecoder","qualname":"::tga::decoder::TgaDecoder","value":"TgaDecoder {  }","parent":null,"children":[{"krate":0,"index":2149},{"krate":0,"index":2150},{"krate":0,"index":2151},{"krate":0,"index":2152},{"krate":0,"index":2153},{"krate":0,"index":2154},{"krate":0,"index":2155},{"krate":0,"index":2156},{"krate":0,"index":2157},{"krate":0,"index":2158},{"krate":0,"index":2159}],"decl_id":null,"docs":" The representation of a TGA decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2162},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":484178,"byte_end":484181,"line_start":179,"line_end":179,"column_start":12,"column_end":15},"name":"new","qualname":"<TgaDecoder<R>>::new","value":"fn (r: R) -> ImageResult<TgaDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder that decodes from the stream `r`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2186},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":496146,"byte_end":496155,"line_start":520,"line_end":520,"column_start":12,"column_end":21},"name":"TGAReader","qualname":"::tga::decoder::TGAReader","value":"TGAReader {  }","parent":null,"children":[{"krate":0,"index":2188},{"krate":0,"index":2189}],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2194},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"tiff","qualname":"::tiff","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","parent":null,"children":[{"krate":0,"index":2195},{"krate":0,"index":2196},{"krate":0,"index":2197},{"krate":0,"index":2203},{"krate":0,"index":2204},{"krate":0,"index":2205},{"krate":0,"index":2208},{"krate":0,"index":2211},{"krate":0,"index":2214},{"krate":0,"index":2217},{"krate":0,"index":2218},{"krate":0,"index":2223},{"krate":0,"index":2226},{"krate":0,"index":2228},{"krate":0,"index":2233},{"krate":0,"index":2237},{"krate":0,"index":2245},{"krate":0,"index":2248},{"krate":0,"index":2250},{"krate":0,"index":2254}],"decl_id":null,"docs":" Decoding and Encoding of TIFF Images","sig":null,"attributes":[{"value":"cfg(feature = \"tiff\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2347,"byte_end":2371,"line_start":102,"line_end":102,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2218},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":497119,"byte_end":497130,"line_start":24,"line_end":24,"column_start":12,"column_end":23},"name":"TiffDecoder","qualname":"::tiff::TiffDecoder","value":"TiffDecoder {  }","parent":null,"children":[{"krate":0,"index":2220},{"krate":0,"index":2221},{"krate":0,"index":2222}],"decl_id":null,"docs":" Decoder for TIFF images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2225},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":497352,"byte_end":497355,"line_start":36,"line_end":36,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffDecoder<R>>::new","value":"fn (r: R) -> Result<TiffDecoder<R>, ImageError>","parent":null,"children":[],"decl_id":null,"docs":" Create a new TiffDecoder.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2228},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":499329,"byte_end":499339,"line_start":79,"line_end":79,"column_start":12,"column_end":22},"name":"TiffReader","qualname":"::tiff::TiffReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2245},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":500874,"byte_end":500885,"line_start":129,"line_end":129,"column_start":12,"column_end":23},"name":"TiffEncoder","qualname":"::tiff::TiffEncoder","value":"TiffEncoder {  }","parent":null,"children":[{"krate":0,"index":2247}],"decl_id":null,"docs":" Encoder for tiff images\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2252},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":501350,"byte_end":501353,"line_start":142,"line_end":142,"column_start":12,"column_end":15},"name":"new","qualname":"<TiffEncoder<W>>::new","value":"fn (w: W) -> TiffEncoder<W>","parent":null,"children":[],"decl_id":null,"docs":" Create a new encoder that writes its output to `w`\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2253},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":501585,"byte_end":501591,"line_start":149,"line_end":149,"column_start":12,"column_end":18},"name":"encode","qualname":"<TiffEncoder<W>>::encode","value":"fn (self, data: &[u8], width: u32, height: u32, color: ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encodes the image `image` that has dimensions `width` and `height` and `ColorType` `c`.","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2257},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\mod.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"webp","qualname":"::webp","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\mod.rs","parent":null,"children":[{"krate":0,"index":2258},{"krate":0,"index":2259},{"krate":0,"index":2307},{"krate":0,"index":2313}],"decl_id":null,"docs":" Decoding of WebP Images\n","sig":null,"attributes":[{"value":"cfg(feature = \"webp\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2386,"byte_end":2410,"line_start":104,"line_end":104,"column_start":1,"column_end":25}}]},{"kind":"Struct","id":{"krate":0,"index":2278},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":503487,"byte_end":503498,"line_start":18,"line_end":18,"column_start":12,"column_end":23},"name":"WebPDecoder","qualname":"::webp::decoder::WebPDecoder","value":"WebPDecoder {  }","parent":null,"children":[{"krate":0,"index":2280},{"krate":0,"index":2281},{"krate":0,"index":2282}],"decl_id":null,"docs":" WebP Image format decoder. Currently only supportes the luma channel (meaning that decoded\n images will be grayscale).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2285},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":503710,"byte_end":503713,"line_start":27,"line_end":27,"column_start":12,"column_end":15},"name":"new","qualname":"<WebPDecoder<R>>::new","value":"fn (r: R) -> ImageResult<WebPDecoder<R>>","parent":null,"children":[],"decl_id":null,"docs":" Create a new WebPDecoder from the Reader ```r```.\n This function takes ownership of the Reader.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2290},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":505674,"byte_end":505684,"line_start":103,"line_end":103,"column_start":12,"column_end":22},"name":"WebpReader","qualname":"::webp::decoder::WebpReader","value":"","parent":null,"children":[],"decl_id":null,"docs":" Wrapper struct around a `Cursor<Vec<u8>>`\n","sig":null,"attributes":[]},{"kind":"Mod","id":{"krate":0,"index":2313},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":0,"byte_end":0,"line_start":1,"line_end":1,"column_start":1,"column_end":1},"name":"vp8","qualname":"::webp::vp8","value":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","parent":null,"children":[{"krate":0,"index":2314},{"krate":0,"index":2317},{"krate":0,"index":2318},{"krate":0,"index":2319},{"krate":0,"index":2320},{"krate":0,"index":2321},{"krate":0,"index":2324},{"krate":0,"index":2325},{"krate":0,"index":2326},{"krate":0,"index":2327},{"krate":0,"index":2328},{"krate":0,"index":2329},{"krate":0,"index":2330},{"krate":0,"index":2331},{"krate":0,"index":2332},{"krate":0,"index":2333},{"krate":0,"index":2334},{"krate":0,"index":2335},{"krate":0,"index":2336},{"krate":0,"index":2337},{"krate":0,"index":2338},{"krate":0,"index":2339},{"krate":0,"index":2340},{"krate":0,"index":2341},{"krate":0,"index":4130},{"krate":0,"index":4155},{"krate":0,"index":4154},{"krate":0,"index":4152},{"krate":0,"index":4149},{"krate":0,"index":4150},{"krate":0,"index":4146},{"krate":0,"index":4147},{"krate":0,"index":4157},{"krate":0,"index":4179},{"krate":0,"index":4178},{"krate":0,"index":4176},{"krate":0,"index":4173},{"krate":0,"index":4174},{"krate":0,"index":4170},{"krate":0,"index":4171},{"krate":0,"index":4181},{"krate":0,"index":4221},{"krate":0,"index":4220},{"krate":0,"index":4218},{"krate":0,"index":4215},{"krate":0,"index":4216},{"krate":0,"index":4212},{"krate":0,"index":4213},{"krate":0,"index":2342},{"krate":0,"index":2343},{"krate":0,"index":2345},{"krate":0,"index":2347},{"krate":0,"index":2349},{"krate":0,"index":2351},{"krate":0,"index":2355},{"krate":0,"index":2357},{"krate":0,"index":2359},{"krate":0,"index":2364},{"krate":0,"index":2365},{"krate":0,"index":2366},{"krate":0,"index":2367},{"krate":0,"index":2368},{"krate":0,"index":2369},{"krate":0,"index":2370},{"krate":0,"index":2371},{"krate":0,"index":2372},{"krate":0,"index":2373},{"krate":0,"index":2374},{"krate":0,"index":2375},{"krate":0,"index":2376},{"krate":0,"index":2377},{"krate":0,"index":2378},{"krate":0,"index":2380},{"krate":0,"index":2383},{"krate":0,"index":2385},{"krate":0,"index":4223},{"krate":0,"index":4225},{"krate":0,"index":2387},{"krate":0,"index":2389},{"krate":0,"index":2395},{"krate":0,"index":4227},{"krate":0,"index":4240},{"krate":0,"index":4236},{"krate":0,"index":4235},{"krate":0,"index":4242},{"krate":0,"index":4257},{"krate":0,"index":4255},{"krate":0,"index":4253},{"krate":0,"index":4259},{"krate":0,"index":4272},{"krate":0,"index":4271},{"krate":0,"index":4269},{"krate":0,"index":2403},{"krate":0,"index":2426},{"krate":0,"index":2452},{"krate":0,"index":2455},{"krate":0,"index":2457},{"krate":0,"index":2459},{"krate":0,"index":2461},{"krate":0,"index":2463},{"krate":0,"index":2465},{"krate":0,"index":2467},{"krate":0,"index":2470},{"krate":0,"index":2471},{"krate":0,"index":2472},{"krate":0,"index":2473},{"krate":0,"index":2474},{"krate":0,"index":2475},{"krate":0,"index":2476},{"krate":0,"index":2477},{"krate":0,"index":2478},{"krate":0,"index":2479},{"krate":0,"index":2480},{"krate":0,"index":2481},{"krate":0,"index":2482},{"krate":0,"index":2483},{"krate":0,"index":2484},{"krate":0,"index":2485},{"krate":0,"index":2486},{"krate":0,"index":2487},{"krate":0,"index":2488},{"krate":0,"index":2489},{"krate":0,"index":2490}],"decl_id":null,"docs":" An implementation of the VP8 Video Codec","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4242},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538051,"byte_end":538056,"line_start":789,"line_end":789,"column_start":12,"column_end":17},"name":"Frame","qualname":"::webp::vp8::Frame","value":"Frame { width, height, ybuf, keyframe, for_display, pixel_type }","parent":null,"children":[{"krate":0,"index":4243},{"krate":0,"index":4244},{"krate":0,"index":4245},{"krate":0,"index":4246},{"krate":0,"index":4247},{"krate":0,"index":4248},{"krate":0,"index":4249},{"krate":0,"index":4250},{"krate":0,"index":4251},{"krate":0,"index":4252}],"decl_id":null,"docs":" A Representation of the last decoded video frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4243},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538103,"byte_end":538108,"line_start":791,"line_end":791,"column_start":9,"column_end":14},"name":"width","qualname":"::webp::vp8::Frame::width","value":"u16","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" The width of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4244},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538161,"byte_end":538167,"line_start":794,"line_end":794,"column_start":9,"column_end":15},"name":"height","qualname":"::webp::vp8::Frame::height","value":"u16","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" The height of the luma plane\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4245},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538219,"byte_end":538223,"line_start":797,"line_end":797,"column_start":9,"column_end":13},"name":"ybuf","qualname":"::webp::vp8::Frame::ybuf","value":"std::vec::Vec<u8>","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" The luma plane of the frame\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4246},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538294,"byte_end":538302,"line_start":800,"line_end":800,"column_start":9,"column_end":17},"name":"keyframe","qualname":"::webp::vp8::Frame::keyframe","value":"bool","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Indicates whether this frame is a keyframe\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4248},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538398,"byte_end":538409,"line_start":805,"line_end":805,"column_start":9,"column_end":20},"name":"for_display","qualname":"::webp::vp8::Frame::for_display","value":"bool","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" Indicates whether this frame is intended for display\n","sig":null,"attributes":[]},{"kind":"Field","id":{"krate":0,"index":4249},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538540,"byte_end":538550,"line_start":810,"line_end":810,"column_start":9,"column_end":19},"name":"pixel_type","qualname":"::webp::vp8::Frame::pixel_type","value":"u8","parent":{"krate":0,"index":4242},"children":[],"decl_id":null,"docs":" The pixel type of the frame as defined by Section 9.2\n of the VP8 Specification\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2403},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":538926,"byte_end":538936,"line_start":838,"line_end":838,"column_start":12,"column_end":22},"name":"Vp8Decoder","qualname":"::webp::vp8::Vp8Decoder","value":"Vp8Decoder {  }","parent":null,"children":[{"krate":0,"index":2405},{"krate":0,"index":2406},{"krate":0,"index":2407},{"krate":0,"index":2408},{"krate":0,"index":2409},{"krate":0,"index":2410},{"krate":0,"index":2411},{"krate":0,"index":2412},{"krate":0,"index":2414},{"krate":0,"index":2416},{"krate":0,"index":2417},{"krate":0,"index":2419},{"krate":0,"index":2420},{"krate":0,"index":2421},{"krate":0,"index":2422},{"krate":0,"index":2423},{"krate":0,"index":2424},{"krate":0,"index":2425}],"decl_id":null,"docs":" VP8 Decoder","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2428},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":539600,"byte_end":539603,"line_start":873,"line_end":873,"column_start":12,"column_end":15},"name":"new","qualname":"<Vp8Decoder<R>>::new","value":"fn (r: R) -> Vp8Decoder<R>","parent":null,"children":[],"decl_id":null,"docs":" Create a new decoder.\n The reader must present a raw vp8 bitstream to the decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2450},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":559415,"byte_end":559427,"line_start":1486,"line_end":1486,"column_start":12,"column_end":24},"name":"decode_frame","qualname":"<Vp8Decoder<R>>::decode_frame","value":"fn (&mut self) -> ImageResult<&Frame>","parent":null,"children":[],"decl_id":null,"docs":" Decodes the current frame and returns a reference to it\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2497},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":576728,"byte_end":576734,"line_start":10,"line_end":10,"column_start":12,"column_end":18},"name":"Frames","qualname":"::animation::Frames","value":"Frames {  }","parent":null,"children":[{"krate":0,"index":2499}],"decl_id":null,"docs":" An implementation dependent iterator, reading the frames as requested\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2502},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":576914,"byte_end":576917,"line_start":16,"line_end":16,"column_start":12,"column_end":15},"name":"new","qualname":"<Frames>::new","value":"fn (iterator: Box<dyn Iterator<Item = ImageResult<Frame>> + 'a>) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Creates a new `Frames` from an implementation specific iterator.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2503},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577309,"byte_end":577323,"line_start":25,"line_end":25,"column_start":12,"column_end":26},"name":"collect_frames","qualname":"<Frames>::collect_frames","value":"fn (self) -> ImageResult<Vec<Frame>>","parent":null,"children":[],"decl_id":null,"docs":" Steps through the iterator from the current frame until the end and pushes each frame into\n a `Vec`.\n If en error is encountered that error is returned instead.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4274},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577612,"byte_end":577617,"line_start":39,"line_end":39,"column_start":12,"column_end":17},"name":"Frame","qualname":"::animation::Frame","value":"Frame {  }","parent":null,"children":[{"krate":0,"index":4275},{"krate":0,"index":4276},{"krate":0,"index":4277},{"krate":0,"index":4278}],"decl_id":null,"docs":" A single animation frame\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4281},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577899,"byte_end":577904,"line_start":51,"line_end":51,"column_start":12,"column_end":17},"name":"Delay","qualname":"::animation::Delay","value":"Delay {  }","parent":null,"children":[{"krate":0,"index":4282}],"decl_id":null,"docs":" The delay of a frame relative to the previous one.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2509},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578006,"byte_end":578009,"line_start":57,"line_end":57,"column_start":12,"column_end":15},"name":"new","qualname":"<Frame>::new","value":"fn (buffer: RgbaImage) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame without any delay.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2510},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578237,"byte_end":578247,"line_start":67,"line_end":67,"column_start":12,"column_end":22},"name":"from_parts","qualname":"<Frame>::from_parts","value":"fn (buffer: RgbaImage, left: u32, top: u32, delay: Delay) -> Frame","parent":null,"children":[],"decl_id":null,"docs":" Contructs a new frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2511},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578459,"byte_end":578464,"line_start":77,"line_end":77,"column_start":12,"column_end":17},"name":"delay","qualname":"<Frame>::delay","value":"fn (&self) -> Delay","parent":null,"children":[],"decl_id":null,"docs":" Delay of this frame\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2512},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578553,"byte_end":578559,"line_start":82,"line_end":82,"column_start":12,"column_end":18},"name":"buffer","qualname":"<Frame>::buffer","value":"fn (&self) -> &RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2513},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578655,"byte_end":578666,"line_start":87,"line_end":87,"column_start":12,"column_end":23},"name":"into_buffer","qualname":"<Frame>::into_buffer","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns the image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2514},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578755,"byte_end":578759,"line_start":92,"line_end":92,"column_start":12,"column_end":16},"name":"left","qualname":"<Frame>::left","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the x offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2515},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578841,"byte_end":578844,"line_start":97,"line_end":97,"column_start":12,"column_end":15},"name":"top","qualname":"<Frame>::top","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" Returns the y offset\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2517},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":579109,"byte_end":579128,"line_start":111,"line_end":111,"column_start":12,"column_end":31},"name":"from_numer_denom_ms","qualname":"<Delay>::from_numer_denom_ms","value":"fn (numerator: u32, denominator: u32) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Create a delay from a ratio of milliseconds.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2518},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":579771,"byte_end":579795,"line_start":129,"line_end":129,"column_start":12,"column_end":36},"name":"from_saturating_duration","qualname":"<Delay>::from_saturating_duration","value":"fn (duration: Duration) -> Self","parent":null,"children":[],"decl_id":null,"docs":" Convert from a duration, clamped between 0 and an implemented defined maximum.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2520},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":580971,"byte_end":580985,"line_start":158,"line_end":158,"column_start":12,"column_end":26},"name":"numer_denom_ms","qualname":"<Delay>::numer_denom_ms","value":"fn (self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The numerator and denominator of the delay in milliseconds.","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2569},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588294,"byte_end":588299,"line_start":19,"line_end":19,"column_start":11,"column_end":16},"name":"Pixel","qualname":"::buffer::Pixel","value":"Pixel: Copy + Clone","parent":null,"children":[{"krate":0,"index":2570},{"krate":0,"index":2571},{"krate":0,"index":2572},{"krate":0,"index":2573},{"krate":0,"index":2574},{"krate":0,"index":2575},{"krate":0,"index":2576},{"krate":0,"index":2577},{"krate":0,"index":2578},{"krate":0,"index":2579},{"krate":0,"index":2580},{"krate":0,"index":2581},{"krate":0,"index":2582},{"krate":0,"index":2583},{"krate":0,"index":2584},{"krate":0,"index":2585},{"krate":0,"index":2586},{"krate":0,"index":2587},{"krate":0,"index":2588},{"krate":0,"index":2589},{"krate":0,"index":2591},{"krate":0,"index":2593},{"krate":0,"index":2596},{"krate":0,"index":2599},{"krate":0,"index":2602},{"krate":0,"index":2605},{"krate":0,"index":2607},{"krate":0,"index":2609},{"krate":0,"index":2610}],"decl_id":null,"docs":" A generalized pixel.","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2570},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588363,"byte_end":588371,"line_start":21,"line_end":21,"column_start":10,"column_end":18},"name":"Subpixel","qualname":"::buffer::Pixel::Subpixel","value":"type Subpixel: Primitive;","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" The underlying subpixel type.\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2571},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588446,"byte_end":588459,"line_start":24,"line_end":24,"column_start":11,"column_end":24},"name":"CHANNEL_COUNT","qualname":"::buffer::Pixel::CHANNEL_COUNT","value":"u8","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" The number of channels of this pixel type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2572},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588602,"byte_end":588615,"line_start":27,"line_end":27,"column_start":8,"column_end":21},"name":"channel_count","qualname":"::buffer::Pixel::channel_count","value":"fn () -> u8","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns the number of channels of this pixel type.\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use CHANNEL_COUNT associated constant\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588528,"byte_end":588594,"line_start":26,"line_end":26,"column_start":5,"column_end":71}}]},{"kind":"Method","id":{"krate":0,"index":2573},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588711,"byte_end":588719,"line_start":32,"line_end":32,"column_start":8,"column_end":16},"name":"channels","qualname":"::buffer::Pixel::channels","value":"fn (&self) -> &[Self::Subpixel]","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns the components as a slice.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2574},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588807,"byte_end":588819,"line_start":35,"line_end":35,"column_start":8,"column_end":20},"name":"channels_mut","qualname":"::buffer::Pixel::channels_mut","value":"fn (&mut self) -> &mut [Self::Subpixel]","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns the components as a mutable slice\n","sig":null,"attributes":[]},{"kind":"Const","id":{"krate":0,"index":2575},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588985,"byte_end":588996,"line_start":39,"line_end":39,"column_start":11,"column_end":22},"name":"COLOR_MODEL","qualname":"::buffer::Pixel::COLOR_MODEL","value":"&'static str","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" A string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2576},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589213,"byte_end":589224,"line_start":43,"line_end":43,"column_start":8,"column_end":19},"name":"color_model","qualname":"::buffer::Pixel::color_model","value":"fn () -> &'static str","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns a string that can help to interpret the meaning each channel\n See [gimp babl](http://gegl.org/babl/).\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_MODEL associated constant\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589141,"byte_end":589205,"line_start":42,"line_end":42,"column_start":5,"column_end":69}}]},{"kind":"Const","id":{"krate":0,"index":2577},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589328,"byte_end":589338,"line_start":48,"line_end":48,"column_start":11,"column_end":21},"name":"COLOR_TYPE","qualname":"::buffer::Pixel::COLOR_TYPE","value":"ColorType","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" ColorType for this pixel format\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2578},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589478,"byte_end":589488,"line_start":51,"line_end":51,"column_start":8,"column_end":18},"name":"color_type","qualname":"::buffer::Pixel::color_type","value":"fn () -> ColorType","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns the ColorType for this pixel format\n","sig":null,"attributes":[{"value":"deprecated(note = \"please use COLOR_TYPE associated constant\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589407,"byte_end":589470,"line_start":50,"line_end":50,"column_start":5,"column_end":68}}]},{"kind":"Method","id":{"krate":0,"index":2579},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":589726,"byte_end":589735,"line_start":59,"line_end":59,"column_start":8,"column_end":17},"name":"channels4","qualname":"::buffer::Pixel::channels4","value":"fn (&self) -> (Self::Subpixel, Self::Subpixel, Self::Subpixel, Self::Subpixel)","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns the channels of this pixel as a 4 tuple. If the pixel\n has less than 4 channels the remainder is filled with the maximum value","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2580},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590038,"byte_end":590051,"line_start":72,"line_end":72,"column_start":8,"column_end":21},"name":"from_channels","qualname":"::buffer::Pixel::from_channels","value":"fn (a: Self::Subpixel, b: Self::Subpixel, c: Self::Subpixel, d: Self::Subpixel) -> Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Construct a pixel from the 4 channels a, b, c and d.\n If the pixel does not contain 4 channels the extra are ignored.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2581},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590405,"byte_end":590415,"line_start":83,"line_end":83,"column_start":8,"column_end":18},"name":"from_slice","qualname":"::buffer::Pixel::from_slice","value":"fn (slice: &[Self::Subpixel]) -> &Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns a view into a slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2582},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590695,"byte_end":590709,"line_start":89,"line_end":89,"column_start":8,"column_end":22},"name":"from_slice_mut","qualname":"::buffer::Pixel::from_slice_mut","value":"fn (slice: &mut [Self::Subpixel]) -> &mut Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Returns mutable view into a mutable slice.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2583},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590796,"byte_end":590802,"line_start":92,"line_end":92,"column_start":8,"column_end":14},"name":"to_rgb","qualname":"::buffer::Pixel::to_rgb","value":"fn (&self) -> Rgb<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2584},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590898,"byte_end":590905,"line_start":95,"line_end":95,"column_start":8,"column_end":15},"name":"to_rgba","qualname":"::buffer::Pixel::to_rgba","value":"fn (&self) -> Rgba<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2585},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":590981,"byte_end":590988,"line_start":98,"line_end":98,"column_start":8,"column_end":15},"name":"to_luma","qualname":"::buffer::Pixel::to_luma","value":"fn (&self) -> Luma<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to luma\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2586},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591086,"byte_end":591099,"line_start":101,"line_end":101,"column_start":8,"column_end":21},"name":"to_luma_alpha","qualname":"::buffer::Pixel::to_luma_alpha","value":"fn (&self) -> LumaA<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to luma with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2587},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591175,"byte_end":591181,"line_start":104,"line_end":104,"column_start":8,"column_end":14},"name":"to_bgr","qualname":"::buffer::Pixel::to_bgr","value":"fn (&self) -> Bgr<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2588},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591277,"byte_end":591284,"line_start":107,"line_end":107,"column_start":8,"column_end":15},"name":"to_bgra","qualname":"::buffer::Pixel::to_bgra","value":"fn (&self) -> Bgra<Self::Subpixel>","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Convert this pixel to BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2589},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591391,"byte_end":591394,"line_start":110,"line_end":110,"column_start":8,"column_end":11},"name":"map","qualname":"::buffer::Pixel::map","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2591},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591555,"byte_end":591560,"line_start":115,"line_end":115,"column_start":8,"column_end":13},"name":"apply","qualname":"::buffer::Pixel::apply","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2593},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":591785,"byte_end":591799,"line_start":121,"line_end":121,"column_start":8,"column_end":22},"name":"map_with_alpha","qualname":"::buffer::Pixel::map_with_alpha","value":"fn <F, G> (&self, f: F, g: G) -> Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2596},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":592105,"byte_end":592121,"line_start":128,"line_end":128,"column_start":8,"column_end":24},"name":"apply_with_alpha","qualname":"::buffer::Pixel::apply_with_alpha","value":"fn <F, G> (&mut self, f: F, g: G) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Apply the function ```g``` to the alpha channel. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2599},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":592350,"byte_end":592367,"line_start":134,"line_end":134,"column_start":8,"column_end":25},"name":"map_without_alpha","qualname":"::buffer::Pixel::map_without_alpha","value":"fn <F> (&self, f: F) -> Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2602},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":592659,"byte_end":592678,"line_start":145,"line_end":145,"column_start":8,"column_end":27},"name":"apply_without_alpha","qualname":"::buffer::Pixel::apply_without_alpha","value":"fn <F> (&mut self, f: F) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel except the alpha channel.\n Works in place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2605},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":592921,"byte_end":592925,"line_start":154,"line_end":154,"column_start":8,"column_end":12},"name":"map2","qualname":"::buffer::Pixel::map2","value":"fn <F> (&self, other: &Self, f: F) -> Self","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2607},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593165,"byte_end":593171,"line_start":160,"line_end":160,"column_start":8,"column_end":14},"name":"apply2","qualname":"::buffer::Pixel::apply2","value":"fn <F> (&mut self, other: &Self, f: F) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Apply the function ```f``` to each channel of this pixel and\n ```other``` pairwise. Works in-place.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2609},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593318,"byte_end":593324,"line_start":165,"line_end":165,"column_start":8,"column_end":14},"name":"invert","qualname":"::buffer::Pixel::invert","value":"fn (&mut self) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Invert this pixel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2610},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593435,"byte_end":593440,"line_start":168,"line_end":168,"column_start":8,"column_end":13},"name":"blend","qualname":"::buffer::Pixel::blend","value":"fn (&mut self, other: &Self) -> ()","parent":{"krate":0,"index":2569},"children":[],"decl_id":null,"docs":" Blend the color of a given pixel into ourself, taking into account alpha channels\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2611},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593510,"byte_end":593516,"line_start":172,"line_end":172,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::buffer::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":2614}],"decl_id":null,"docs":" Iterate over pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2630},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594285,"byte_end":594294,"line_start":211,"line_end":211,"column_start":12,"column_end":21},"name":"PixelsMut","qualname":"::buffer::PixelsMut","value":"PixelsMut {  }","parent":null,"children":[{"krate":0,"index":2633}],"decl_id":null,"docs":" Iterate over mutable pixel refs.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2649},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595118,"byte_end":595122,"line_start":252,"line_end":252,"column_start":12,"column_end":16},"name":"Rows","qualname":"::buffer::Rows","value":"Rows {  }","parent":null,"children":[{"krate":0,"index":2652}],"decl_id":null,"docs":" Iterate over rows of an image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2668},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596051,"byte_end":596058,"line_start":295,"line_end":295,"column_start":12,"column_end":19},"name":"RowsMut","qualname":"::buffer::RowsMut","value":"RowsMut {  }","parent":null,"children":[{"krate":0,"index":2671}],"decl_id":null,"docs":" Iterate over mutable rows of an image\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2687},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597018,"byte_end":597033,"line_start":338,"line_end":338,"column_start":12,"column_end":27},"name":"EnumeratePixels","qualname":"::buffer::EnumeratePixels","value":"EnumeratePixels {  }","parent":null,"children":[{"krate":0,"index":2690},{"krate":0,"index":2691},{"krate":0,"index":2692},{"krate":0,"index":2693}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2704},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597781,"byte_end":597794,"line_start":376,"line_end":376,"column_start":12,"column_end":25},"name":"EnumerateRows","qualname":"::buffer::EnumerateRows","value":"EnumerateRows {  }","parent":null,"children":[{"krate":0,"index":2707},{"krate":0,"index":2708},{"krate":0,"index":2709}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2720},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":598657,"byte_end":598675,"line_start":419,"line_end":419,"column_start":12,"column_end":30},"name":"EnumeratePixelsMut","qualname":"::buffer::EnumeratePixelsMut","value":"EnumeratePixelsMut {  }","parent":null,"children":[{"krate":0,"index":2723},{"krate":0,"index":2724},{"krate":0,"index":2725},{"krate":0,"index":2726}],"decl_id":null,"docs":" Enumerate the pixels of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":2737},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":599440,"byte_end":599456,"line_start":457,"line_end":457,"column_start":12,"column_end":28},"name":"EnumerateRowsMut","qualname":"::buffer::EnumerateRowsMut","value":"EnumerateRowsMut {  }","parent":null,"children":[{"krate":0,"index":2740},{"krate":0,"index":2741},{"krate":0,"index":2742}],"decl_id":null,"docs":" Enumerate the rows of an image.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4301},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":600341,"byte_end":600352,"line_start":501,"line_end":501,"column_start":12,"column_end":23},"name":"ImageBuffer","qualname":"::buffer::ImageBuffer","value":"ImageBuffer {  }","parent":null,"children":[{"krate":0,"index":4304},{"krate":0,"index":4305},{"krate":0,"index":4306},{"krate":0,"index":4307}],"decl_id":null,"docs":" Generic image buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2756},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601110,"byte_end":601118,"line_start":523,"line_end":523,"column_start":12,"column_end":20},"name":"from_raw","qualname":"<ImageBuffer<P, Container>>::from_raw","value":"fn (width: u32, height: u32, buf: Container) -> Option<ImageBuffer<P, Container>>","parent":null,"children":[],"decl_id":null,"docs":" Contructs a buffer from a generic container\n (for example a `Vec` or a slice)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2757},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601524,"byte_end":601532,"line_start":537,"line_end":537,"column_start":12,"column_end":20},"name":"into_raw","qualname":"<ImageBuffer<P, Container>>::into_raw","value":"fn (self) -> Container","parent":null,"children":[],"decl_id":null,"docs":" Returns the underlying raw buffer\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2758},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601634,"byte_end":601644,"line_start":542,"line_end":542,"column_start":12,"column_end":22},"name":"dimensions","qualname":"<ImageBuffer<P, Container>>::dimensions","value":"fn (&self) -> (u32, u32)","parent":null,"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2759},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601753,"byte_end":601758,"line_start":547,"line_end":547,"column_start":12,"column_end":17},"name":"width","qualname":"<ImageBuffer<P, Container>>::width","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2760},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601846,"byte_end":601852,"line_start":552,"line_end":552,"column_start":12,"column_end":18},"name":"height","qualname":"<ImageBuffer<P, Container>>::height","value":"fn (&self) -> u32","parent":null,"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2761},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":601966,"byte_end":601972,"line_start":557,"line_end":557,"column_start":12,"column_end":18},"name":"pixels","qualname":"<ImageBuffer<P, Container>>::pixels","value":"fn (&self) -> Pixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2762},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":602173,"byte_end":602177,"line_start":564,"line_end":564,"column_start":12,"column_end":16},"name":"rows","qualname":"<ImageBuffer<P, Container>>::rows","value":"fn (&self) -> Rows<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the rows of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2763},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":602520,"byte_end":602536,"line_start":575,"line_end":575,"column_start":12,"column_end":28},"name":"enumerate_pixels","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels","value":"fn (&self) -> EnumeratePixels<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2764},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":602868,"byte_end":602882,"line_start":587,"line_end":587,"column_start":12,"column_end":26},"name":"enumerate_rows","qualname":"<ImageBuffer<P, Container>>::enumerate_rows","value":"fn (&self) -> EnumerateRows<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2765},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":603203,"byte_end":603212,"line_start":600,"line_end":600,"column_start":12,"column_end":21},"name":"get_pixel","qualname":"<ImageBuffer<P, Container>>::get_pixel","value":"fn (&self, x: u32, y: u32) -> &P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2773},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":604938,"byte_end":604951,"line_start":641,"line_end":641,"column_start":12,"column_end":25},"name":"sample_layout","qualname":"<ImageBuffer<P, Container>>::sample_layout","value":"fn (&self) -> SampleLayout","parent":null,"children":[],"decl_id":null,"docs":" Get the format of the buffer when viewed as a matrix of samples.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2774},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":605565,"byte_end":605582,"line_start":652,"line_end":652,"column_start":12,"column_end":29},"name":"into_flat_samples","qualname":"<ImageBuffer<P, Container>>::into_flat_samples","value":"fn (self) -> FlatSamples<Container>","parent":null,"children":[],"decl_id":null,"docs":" Return the raw sample buffer with its stride an dimension information.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2775},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":606028,"byte_end":606043,"line_start":667,"line_end":667,"column_start":12,"column_end":27},"name":"as_flat_samples","qualname":"<ImageBuffer<P, Container>>::as_flat_samples","value":"fn (&self) -> FlatSamples<&[P::Subpixel]>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2779},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":606562,"byte_end":606572,"line_start":686,"line_end":686,"column_start":12,"column_end":22},"name":"pixels_mut","qualname":"<ImageBuffer<P, Container>>::pixels_mut","value":"fn (&mut self) -> PixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable pixels of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2780},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":606795,"byte_end":606803,"line_start":693,"line_end":693,"column_start":12,"column_end":20},"name":"rows_mut","qualname":"<ImageBuffer<P, Container>>::rows_mut","value":"fn (&mut self) -> RowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Returns an iterator over the mutable rows of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2781},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":607168,"byte_end":607188,"line_start":704,"line_end":704,"column_start":12,"column_end":32},"name":"enumerate_pixels_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_pixels_mut","value":"fn (&mut self) -> EnumeratePixelsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the pixels of the image.\n The iterator yields the coordinates of each pixel\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2782},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":607562,"byte_end":607580,"line_start":717,"line_end":717,"column_start":12,"column_end":30},"name":"enumerate_rows_mut","qualname":"<ImageBuffer<P, Container>>::enumerate_rows_mut","value":"fn (&mut self) -> EnumerateRowsMut<P>","parent":null,"children":[],"decl_id":null,"docs":" Enumerates over the rows of the image.\n The iterator yields the y-coordinate of each row\n along with a mutable reference to them.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2783},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":607943,"byte_end":607956,"line_start":731,"line_end":731,"column_start":12,"column_end":25},"name":"get_pixel_mut","qualname":"<ImageBuffer<P, Container>>::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut P","parent":null,"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2784},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":608405,"byte_end":608414,"line_start":743,"line_end":743,"column_start":12,"column_end":21},"name":"put_pixel","qualname":"<ImageBuffer<P, Container>>::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: P) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Puts a pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2788},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":608859,"byte_end":608863,"line_start":758,"line_end":758,"column_start":12,"column_end":16},"name":"save","qualname":"<ImageBuffer<P, Container>>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2793},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":609538,"byte_end":609554,"line_start":784,"line_end":784,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<ImageBuffer<P, Container>>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2841},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":616109,"byte_end":616112,"line_start":997,"line_end":997,"column_start":12,"column_end":15},"name":"new","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::new","value":"fn (width: u32, height: u32) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Creates a new image buffer based on a `Vec<P::Subpixel>`.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2842},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":616650,"byte_end":616660,"line_start":1013,"line_end":1013,"column_start":12,"column_end":22},"name":"from_pixel","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_pixel","value":"fn (width: u32, height: u32, pixel: P) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by copying a pixel","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2843},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":617175,"byte_end":617182,"line_start":1028,"line_end":1028,"column_start":12,"column_end":19},"name":"from_fn","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_fn","value":"fn <F> (width: u32, height: u32, mut f: F) -> ImageBuffer<P, Vec<P::Subpixel>>","parent":null,"children":[],"decl_id":null,"docs":" Constructs a new ImageBuffer by repeated application of the supplied function.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2845},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":617593,"byte_end":617601,"line_start":1041,"line_end":1041,"column_start":12,"column_end":20},"name":"from_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::from_vec","value":"fn (width: u32, height: u32, buf: Vec<P::Subpixel>) -> Option<ImageBuffer<P, Vec<P::Subpixel>>>","parent":null,"children":[],"decl_id":null,"docs":" Creates an image buffer out of an existing buffer.\n Returns None if the buffer is not big enough.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2846},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":617888,"byte_end":617896,"line_start":1051,"line_end":1051,"column_start":12,"column_end":20},"name":"into_vec","qualname":"<ImageBuffer<P, Vec<P::Subpixel>>>::into_vec","value":"fn (self) -> Vec<P::Subpixel>","parent":null,"children":[],"decl_id":null,"docs":" Consumes the image buffer and returns the underlying data\n as an owned buffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":2847},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":618024,"byte_end":618037,"line_start":1057,"line_end":1057,"column_start":11,"column_end":24},"name":"ConvertBuffer","qualname":"::buffer::ConvertBuffer","value":"ConvertBuffer<T>","parent":null,"children":[{"krate":0,"index":2849}],"decl_id":null,"docs":" Provides color conversions for whole image buffers.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2849},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":618224,"byte_end":618231,"line_start":1062,"line_end":1062,"column_start":8,"column_end":15},"name":"convert","qualname":"::buffer::ConvertBuffer::convert","value":"fn (&self) -> T","parent":{"krate":0,"index":2847},"children":[],"decl_id":null,"docs":" Converts `self` to a buffer of type T","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2851},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":618499,"byte_end":618513,"line_start":1070,"line_end":1070,"column_start":12,"column_end":26},"name":"expand_palette","qualname":"<GrayImage>::expand_palette","value":"fn (self, palette: &[(u8, u8, u8)], transparent_idx: Option<u8>) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Expands a color palette by re-using the existing buffer.\n Assumes 8 bit per pixel. Uses an optionally transparent index to\n adjust it's alpha value accordingly.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2860},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":620257,"byte_end":620265,"line_start":1122,"line_end":1122,"column_start":10,"column_end":18},"name":"RgbImage","qualname":"::buffer::RgbImage","value":"ImageBuffer<Rgb<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2861},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":620354,"byte_end":620363,"line_start":1124,"line_end":1124,"column_start":10,"column_end":19},"name":"RgbaImage","qualname":"::buffer::RgbaImage","value":"ImageBuffer<Rgba<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable Rgb + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2862},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":620443,"byte_end":620452,"line_start":1126,"line_end":1126,"column_start":10,"column_end":19},"name":"GrayImage","qualname":"::buffer::GrayImage","value":"ImageBuffer<Luma<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale image buffer\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":2863},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":620548,"byte_end":620562,"line_start":1128,"line_end":1128,"column_start":10,"column_end":24},"name":"GrayAlphaImage","qualname":"::buffer::GrayAlphaImage","value":"ImageBuffer<LumaA<u8>, Vec<u8>>","parent":null,"children":[],"decl_id":null,"docs":" Sendable grayscale + alpha channel image buffer\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4313},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628087,"byte_end":628089,"line_start":11,"line_end":11,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ColorType::L8","value":"ColorType::L8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4315},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628150,"byte_end":628153,"line_start":13,"line_end":13,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ColorType::La8","value":"ColorType::La8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 8-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4317},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628208,"byte_end":628212,"line_start":15,"line_end":15,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ColorType::Rgb8","value":"ColorType::Rgb8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit R, G and B channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4319},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628267,"byte_end":628272,"line_start":17,"line_end":17,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ColorType::Rgba8","value":"ColorType::Rgba8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 8-bit RGB with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4321},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628313,"byte_end":628316,"line_start":20,"line_end":20,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ColorType::L16","value":"ColorType::L16","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4323},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628378,"byte_end":628382,"line_start":22,"line_end":22,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ColorType::La16","value":"ColorType::La16","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 16-bit luminance with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4325},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628416,"byte_end":628421,"line_start":24,"line_end":24,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ColorType::Rgb16","value":"ColorType::Rgb16","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGB\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4327},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628456,"byte_end":628462,"line_start":26,"line_end":26,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ColorType::Rgba16","value":"ColorType::Rgba16","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 16-bit RGBA\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4329},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628518,"byte_end":628522,"line_start":29,"line_end":29,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ColorType::Bgr8","value":"ColorType::Bgr8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel contains 8-bit B, G and R channels\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4331},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628577,"byte_end":628582,"line_start":31,"line_end":31,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ColorType::Bgra8","value":"ColorType::Bgra8","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":" Pixel is 8-bit BGR with an alpha channel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4333},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628608,"byte_end":628623,"line_start":34,"line_end":34,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ColorType::__NonExhaustive","value":"ColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4312},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4312},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628038,"byte_end":628047,"line_start":9,"line_end":9,"column_start":10,"column_end":19},"name":"ColorType","qualname":"::color::ColorType","value":"ColorType::{L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4313},{"krate":0,"index":4315},{"krate":0,"index":4317},{"krate":0,"index":4319},{"krate":0,"index":4321},{"krate":0,"index":4323},{"krate":0,"index":4325},{"krate":0,"index":4327},{"krate":0,"index":4329},{"krate":0,"index":4331},{"krate":0,"index":4333}],"decl_id":null,"docs":" An enumeration over supported color types and bit depths\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2881},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628771,"byte_end":628786,"line_start":39,"line_end":39,"column_start":12,"column_end":27},"name":"bytes_per_pixel","qualname":"<ColorType>::bytes_per_pixel","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bytes contained in a pixel of `ColorType` ```c```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2882},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":629330,"byte_end":629344,"line_start":53,"line_end":53,"column_start":12,"column_end":26},"name":"bits_per_pixel","qualname":"<ColorType>::bits_per_pixel","value":"fn (self) -> u16","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of bits contained in a pixel of `ColorType` ```c``` (which will always be\n a multiple of 8).\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2883},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":629507,"byte_end":629520,"line_start":58,"line_end":58,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Returns the number of color channels that make up this pixel\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4352},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630149,"byte_end":630151,"line_start":74,"line_end":74,"column_start":5,"column_end":7},"name":"L1","qualname":"::color::ExtendedColorType::L1","value":"ExtendedColorType::L1","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4354},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630157,"byte_end":630160,"line_start":75,"line_end":75,"column_start":5,"column_end":8},"name":"La1","qualname":"::color::ExtendedColorType::La1","value":"ExtendedColorType::La1","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4356},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630166,"byte_end":630170,"line_start":76,"line_end":76,"column_start":5,"column_end":9},"name":"Rgb1","qualname":"::color::ExtendedColorType::Rgb1","value":"ExtendedColorType::Rgb1","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4358},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630176,"byte_end":630181,"line_start":77,"line_end":77,"column_start":5,"column_end":10},"name":"Rgba1","qualname":"::color::ExtendedColorType::Rgba1","value":"ExtendedColorType::Rgba1","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4360},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630187,"byte_end":630189,"line_start":78,"line_end":78,"column_start":5,"column_end":7},"name":"L2","qualname":"::color::ExtendedColorType::L2","value":"ExtendedColorType::L2","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4362},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630195,"byte_end":630198,"line_start":79,"line_end":79,"column_start":5,"column_end":8},"name":"La2","qualname":"::color::ExtendedColorType::La2","value":"ExtendedColorType::La2","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4364},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630204,"byte_end":630208,"line_start":80,"line_end":80,"column_start":5,"column_end":9},"name":"Rgb2","qualname":"::color::ExtendedColorType::Rgb2","value":"ExtendedColorType::Rgb2","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4366},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630214,"byte_end":630219,"line_start":81,"line_end":81,"column_start":5,"column_end":10},"name":"Rgba2","qualname":"::color::ExtendedColorType::Rgba2","value":"ExtendedColorType::Rgba2","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4368},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630225,"byte_end":630227,"line_start":82,"line_end":82,"column_start":5,"column_end":7},"name":"L4","qualname":"::color::ExtendedColorType::L4","value":"ExtendedColorType::L4","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4370},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630233,"byte_end":630236,"line_start":83,"line_end":83,"column_start":5,"column_end":8},"name":"La4","qualname":"::color::ExtendedColorType::La4","value":"ExtendedColorType::La4","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4372},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630242,"byte_end":630246,"line_start":84,"line_end":84,"column_start":5,"column_end":9},"name":"Rgb4","qualname":"::color::ExtendedColorType::Rgb4","value":"ExtendedColorType::Rgb4","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4374},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630252,"byte_end":630257,"line_start":85,"line_end":85,"column_start":5,"column_end":10},"name":"Rgba4","qualname":"::color::ExtendedColorType::Rgba4","value":"ExtendedColorType::Rgba4","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4376},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630263,"byte_end":630265,"line_start":86,"line_end":86,"column_start":5,"column_end":7},"name":"L8","qualname":"::color::ExtendedColorType::L8","value":"ExtendedColorType::L8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4378},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630271,"byte_end":630274,"line_start":87,"line_end":87,"column_start":5,"column_end":8},"name":"La8","qualname":"::color::ExtendedColorType::La8","value":"ExtendedColorType::La8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4380},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630280,"byte_end":630284,"line_start":88,"line_end":88,"column_start":5,"column_end":9},"name":"Rgb8","qualname":"::color::ExtendedColorType::Rgb8","value":"ExtendedColorType::Rgb8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4382},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630290,"byte_end":630295,"line_start":89,"line_end":89,"column_start":5,"column_end":10},"name":"Rgba8","qualname":"::color::ExtendedColorType::Rgba8","value":"ExtendedColorType::Rgba8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4384},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630301,"byte_end":630304,"line_start":90,"line_end":90,"column_start":5,"column_end":8},"name":"L16","qualname":"::color::ExtendedColorType::L16","value":"ExtendedColorType::L16","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4386},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630310,"byte_end":630314,"line_start":91,"line_end":91,"column_start":5,"column_end":9},"name":"La16","qualname":"::color::ExtendedColorType::La16","value":"ExtendedColorType::La16","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4388},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630320,"byte_end":630325,"line_start":92,"line_end":92,"column_start":5,"column_end":10},"name":"Rgb16","qualname":"::color::ExtendedColorType::Rgb16","value":"ExtendedColorType::Rgb16","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4390},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630331,"byte_end":630337,"line_start":93,"line_end":93,"column_start":5,"column_end":11},"name":"Rgba16","qualname":"::color::ExtendedColorType::Rgba16","value":"ExtendedColorType::Rgba16","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4392},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630343,"byte_end":630347,"line_start":94,"line_end":94,"column_start":5,"column_end":9},"name":"Bgr8","qualname":"::color::ExtendedColorType::Bgr8","value":"ExtendedColorType::Bgr8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4394},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630353,"byte_end":630358,"line_start":95,"line_end":95,"column_start":5,"column_end":10},"name":"Bgra8","qualname":"::color::ExtendedColorType::Bgra8","value":"ExtendedColorType::Bgra8","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4396},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630587,"byte_end":630594,"line_start":100,"line_end":100,"column_start":5,"column_end":12},"name":"Unknown","qualname":"::color::ExtendedColorType::Unknown","value":"ExtendedColorType::Unknown(u8)","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":" Pixel is of unknown color type with the specified bits per pixel. This can apply to pixels\n which are associated with an external palette. In that case, the pixel value is an index\n into the palette.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4399},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630624,"byte_end":630639,"line_start":103,"line_end":103,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::color::ExtendedColorType::__NonExhaustive","value":"ExtendedColorType::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4351},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4351},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630125,"byte_end":630142,"line_start":73,"line_end":73,"column_start":10,"column_end":27},"name":"ExtendedColorType","qualname":"::color::ExtendedColorType","value":"ExtendedColorType::{L1, La1, Rgb1, Rgba1, L2, La2, Rgb2, Rgba2, L4, La4, Rgb4, Rgba4, L8, La8, Rgb8, Rgba8, L16, La16, Rgb16, Rgba16, Bgr8, Bgra8, Unknown, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4352},{"krate":0,"index":4354},{"krate":0,"index":4356},{"krate":0,"index":4358},{"krate":0,"index":4360},{"krate":0,"index":4362},{"krate":0,"index":4364},{"krate":0,"index":4366},{"krate":0,"index":4368},{"krate":0,"index":4370},{"krate":0,"index":4372},{"krate":0,"index":4374},{"krate":0,"index":4376},{"krate":0,"index":4378},{"krate":0,"index":4380},{"krate":0,"index":4382},{"krate":0,"index":4384},{"krate":0,"index":4386},{"krate":0,"index":4388},{"krate":0,"index":4390},{"krate":0,"index":4392},{"krate":0,"index":4394},{"krate":0,"index":4396},{"krate":0,"index":4399}],"decl_id":null,"docs":" An enumeration of color types encountered in image formats.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2885},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630922,"byte_end":630935,"line_start":111,"line_end":111,"column_start":12,"column_end":25},"name":"channel_count","qualname":"<ExtendedColorType>::channel_count","value":"fn (self) -> u8","parent":null,"children":[],"decl_id":null,"docs":" Get the number of channels for colors of this type.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":4717},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637299,"byte_end":637302,"line_start":331,"line_end":331,"column_start":5,"column_end":8},"name":"Rgb","qualname":"::color::Rgb","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4746},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637379,"byte_end":637382,"line_start":332,"line_end":332,"column_start":5,"column_end":8},"name":"Bgr","qualname":"::color::Bgr","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4775},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637458,"byte_end":637462,"line_start":333,"line_end":333,"column_start":5,"column_end":9},"name":"Luma","qualname":"::color::Luma","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4804},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637539,"byte_end":637543,"line_start":334,"line_end":334,"column_start":5,"column_end":9},"name":"Rgba","qualname":"::color::Rgba","value":"","parent":null,"children":[],"decl_id":null,"docs":"RGB colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4833},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637639,"byte_end":637643,"line_start":335,"line_end":335,"column_start":5,"column_end":9},"name":"Bgra","qualname":"::color::Bgra","value":"","parent":null,"children":[],"decl_id":null,"docs":"BGR colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Struct","id":{"krate":0,"index":4862},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637738,"byte_end":637743,"line_start":336,"line_end":336,"column_start":5,"column_end":10},"name":"LumaA","qualname":"::color::LumaA","value":"","parent":null,"children":[],"decl_id":null,"docs":"Grayscale colors + alpha channel\n","sig":null,"attributes":[{"value":"repr(C)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633049,"byte_end":633059,"line_start":173,"line_end":173,"column_start":1,"column_end":11}},{"value":"allow(missing_docs)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":633060,"byte_end":633082,"line_start":174,"line_end":174,"column_start":1,"column_end":23}}]},{"kind":"Trait","id":{"krate":0,"index":2889},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":637910,"byte_end":637919,"line_start":340,"line_end":340,"column_start":11,"column_end":20},"name":"FromColor","qualname":"::color::FromColor","value":"FromColor<Other>","parent":null,"children":[{"krate":0,"index":2891}],"decl_id":null,"docs":" Provides color conversions for the different pixel types.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":2891},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":638009,"byte_end":638019,"line_start":342,"line_end":342,"column_start":8,"column_end":18},"name":"from_color","qualname":"::color::FromColor::from_color","value":"fn (&mut self, _: &Other) -> ()","parent":{"krate":0,"index":2889},"children":[],"decl_id":null,"docs":" Changes `self` to represent `Other` in the color space of `Self`\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4943},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":665703,"byte_end":665713,"line_start":36,"line_end":36,"column_start":5,"column_end":15},"name":"ImageLuma8","qualname":"::dynimage::DynamicImage::ImageLuma8","value":"DynamicImage::ImageLuma8(GrayImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4946},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":665789,"byte_end":665800,"line_start":39,"line_end":39,"column_start":5,"column_end":16},"name":"ImageLumaA8","qualname":"::dynimage::DynamicImage::ImageLumaA8","value":"DynamicImage::ImageLumaA8(GrayAlphaImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4949},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":665869,"byte_end":665878,"line_start":42,"line_end":42,"column_start":5,"column_end":14},"name":"ImageRgb8","qualname":"::dynimage::DynamicImage::ImageRgb8","value":"DynamicImage::ImageRgb8(RgbImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4952},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":665952,"byte_end":665962,"line_start":45,"line_end":45,"column_start":5,"column_end":15},"name":"ImageRgba8","qualname":"::dynimage::DynamicImage::ImageRgba8","value":"DynamicImage::ImageRgba8(RgbaImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4955},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666026,"byte_end":666035,"line_start":48,"line_end":48,"column_start":5,"column_end":14},"name":"ImageBgr8","qualname":"::dynimage::DynamicImage::ImageBgr8","value":"DynamicImage::ImageBgr8(BgrImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4958},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666109,"byte_end":666119,"line_start":51,"line_end":51,"column_start":5,"column_end":15},"name":"ImageBgra8","qualname":"::dynimage::DynamicImage::ImageBgra8","value":"DynamicImage::ImageBgra8(BgraImage)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 8-bit Bgr with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4961},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666185,"byte_end":666196,"line_start":54,"line_end":54,"column_start":5,"column_end":16},"name":"ImageLuma16","qualname":"::dynimage::DynamicImage::ImageLuma16","value":"DynamicImage::ImageLuma16(Gray16Image)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4964},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666275,"byte_end":666287,"line_start":57,"line_end":57,"column_start":5,"column_end":17},"name":"ImageLumaA16","qualname":"::dynimage::DynamicImage::ImageLumaA16","value":"DynamicImage::ImageLumaA16(GrayAlpha16Image)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Luma with alpha\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4967},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666359,"byte_end":666369,"line_start":60,"line_end":60,"column_start":5,"column_end":15},"name":"ImageRgb16","qualname":"::dynimage::DynamicImage::ImageRgb16","value":"DynamicImage::ImageRgb16(Rgb16Image)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4970},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":666446,"byte_end":666457,"line_start":63,"line_end":63,"column_start":5,"column_end":16},"name":"ImageRgba16","qualname":"::dynimage::DynamicImage::ImageRgba16","value":"DynamicImage::ImageRgba16(Rgba16Image)","parent":{"krate":0,"index":4942},"children":[],"decl_id":null,"docs":" Each pixel in this image is 16-bit Rgb with alpha\n","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4942},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":665637,"byte_end":665649,"line_start":34,"line_end":34,"column_start":10,"column_end":22},"name":"DynamicImage","qualname":"::dynimage::DynamicImage","value":"DynamicImage::{ImageLuma8, ImageLumaA8, ImageRgb8, ImageRgba8, ImageBgr8, ImageBgra8, ImageLuma16, ImageLumaA16, ImageRgb16, ImageRgba16}","parent":null,"children":[{"krate":0,"index":4943},{"krate":0,"index":4946},{"krate":0,"index":4949},{"krate":0,"index":4952},{"krate":0,"index":4955},{"krate":0,"index":4958},{"krate":0,"index":4961},{"krate":0,"index":4964},{"krate":0,"index":4967},{"krate":0,"index":4970}],"decl_id":null,"docs":" A Dynamic Image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3106},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":670672,"byte_end":670681,"line_start":130,"line_end":130,"column_start":12,"column_end":21},"name":"new_luma8","qualname":"<DynamicImage>::new_luma8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3107},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":670884,"byte_end":670895,"line_start":136,"line_end":136,"column_start":12,"column_end":23},"name":"new_luma_a8","qualname":"<DynamicImage>::new_luma_a8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3108},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":671072,"byte_end":671080,"line_start":141,"line_end":141,"column_start":12,"column_end":20},"name":"new_rgb8","qualname":"<DynamicImage>::new_rgb8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3109},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":671256,"byte_end":671265,"line_start":146,"line_end":146,"column_start":12,"column_end":21},"name":"new_rgba8","qualname":"<DynamicImage>::new_rgba8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3110},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":671442,"byte_end":671451,"line_start":151,"line_end":151,"column_start":12,"column_end":21},"name":"new_bgra8","qualname":"<DynamicImage>::new_bgra8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGRA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3111},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":671627,"byte_end":671635,"line_start":156,"line_end":156,"column_start":12,"column_end":20},"name":"new_bgr8","qualname":"<DynamicImage>::new_bgr8","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of BGR pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3112},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":671811,"byte_end":671821,"line_start":161,"line_end":161,"column_start":12,"column_end":22},"name":"new_luma16","qualname":"<DynamicImage>::new_luma16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3113},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672025,"byte_end":672037,"line_start":167,"line_end":167,"column_start":12,"column_end":24},"name":"new_luma_a16","qualname":"<DynamicImage>::new_luma_a16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of grey\n pixels with transparency.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3114},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672215,"byte_end":672224,"line_start":172,"line_end":172,"column_start":12,"column_end":21},"name":"new_rgb16","qualname":"<DynamicImage>::new_rgb16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGB pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3115},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672401,"byte_end":672411,"line_start":177,"line_end":177,"column_start":12,"column_end":22},"name":"new_rgba16","qualname":"<DynamicImage>::new_rgba16","value":"fn (w: u32, h: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Creates a dynamic image backed by a buffer of RGBA pixels.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3116},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672577,"byte_end":672589,"line_start":182,"line_end":182,"column_start":12,"column_end":24},"name":"from_decoder","qualname":"<DynamicImage>::from_decoder","value":"fn <'a> (decoder: impl ImageDecoder<'a>) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Decodes an encoded image into a dynamic image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3119},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672767,"byte_end":672773,"line_start":189,"line_end":189,"column_start":12,"column_end":18},"name":"to_rgb","qualname":"<DynamicImage>::to_rgb","value":"fn (&self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGB image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3120},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":672942,"byte_end":672949,"line_start":196,"line_end":196,"column_start":12,"column_end":19},"name":"to_rgba","qualname":"<DynamicImage>::to_rgba","value":"fn (&self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an RGBA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3121},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":673118,"byte_end":673124,"line_start":203,"line_end":203,"column_start":12,"column_end":18},"name":"to_bgr","qualname":"<DynamicImage>::to_bgr","value":"fn (&self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGR image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3122},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":673293,"byte_end":673300,"line_start":210,"line_end":210,"column_start":12,"column_end":19},"name":"to_bgra","qualname":"<DynamicImage>::to_bgra","value":"fn (&self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as an BGRA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3123},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":673469,"byte_end":673476,"line_start":217,"line_end":217,"column_start":12,"column_end":19},"name":"to_luma","qualname":"<DynamicImage>::to_luma","value":"fn (&self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a Luma image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3124},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":673646,"byte_end":673659,"line_start":224,"line_end":224,"column_start":12,"column_end":25},"name":"to_luma_alpha","qualname":"<DynamicImage>::to_luma_alpha","value":"fn (&self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Returns a copy of this image as a LumaA image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3125},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":673951,"byte_end":673959,"line_start":234,"line_end":234,"column_start":12,"column_end":20},"name":"into_rgb","qualname":"<DynamicImage>::into_rgb","value":"fn (self) -> RgbImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGB image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3126},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":674276,"byte_end":674285,"line_start":245,"line_end":245,"column_start":12,"column_end":21},"name":"into_rgba","qualname":"<DynamicImage>::into_rgba","value":"fn (self) -> RgbaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a RGBA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3127},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":674604,"byte_end":674612,"line_start":256,"line_end":256,"column_start":12,"column_end":20},"name":"into_bgr","qualname":"<DynamicImage>::into_bgr","value":"fn (self) -> BgrImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGR image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3128},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":674929,"byte_end":674938,"line_start":267,"line_end":267,"column_start":12,"column_end":21},"name":"into_bgra","qualname":"<DynamicImage>::into_bgra","value":"fn (self) -> BgraImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a BGRA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3129},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":675258,"byte_end":675267,"line_start":278,"line_end":278,"column_start":12,"column_end":21},"name":"into_luma","qualname":"<DynamicImage>::into_luma","value":"fn (self) -> GrayImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a Luma image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3130},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":675588,"byte_end":675603,"line_start":289,"line_end":289,"column_start":12,"column_end":27},"name":"into_luma_alpha","qualname":"<DynamicImage>::into_luma_alpha","value":"fn (self) -> GrayAlphaImage","parent":null,"children":[],"decl_id":null,"docs":" Consume the image and returns a LumaA image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3131},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":675838,"byte_end":675842,"line_start":297,"line_end":297,"column_start":12,"column_end":16},"name":"crop","qualname":"<DynamicImage>::crop","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a cut out of this image delimited by the bounding rectangle.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3132},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":676071,"byte_end":676078,"line_start":302,"line_end":302,"column_start":12,"column_end":19},"name":"as_rgb8","qualname":"<DynamicImage>::as_rgb8","value":"fn (&self) -> Option<&RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3133},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":676293,"byte_end":676304,"line_start":310,"line_end":310,"column_start":12,"column_end":23},"name":"as_mut_rgb8","qualname":"<DynamicImage>::as_mut_rgb8","value":"fn (&mut self) -> Option<&mut RgbImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3134},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":676523,"byte_end":676530,"line_start":318,"line_end":318,"column_start":12,"column_end":19},"name":"as_bgr8","qualname":"<DynamicImage>::as_bgr8","value":"fn (&self) -> Option<&BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3135},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":676745,"byte_end":676756,"line_start":326,"line_end":326,"column_start":12,"column_end":23},"name":"as_mut_bgr8","qualname":"<DynamicImage>::as_mut_bgr8","value":"fn (&mut self) -> Option<&mut BgrImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit BGR image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3136},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":676976,"byte_end":676984,"line_start":334,"line_end":334,"column_start":12,"column_end":20},"name":"as_rgba8","qualname":"<DynamicImage>::as_rgba8","value":"fn (&self) -> Option<&RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3137},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":677202,"byte_end":677214,"line_start":342,"line_end":342,"column_start":12,"column_end":24},"name":"as_mut_rgba8","qualname":"<DynamicImage>::as_mut_rgba8","value":"fn (&mut self) -> Option<&mut RgbaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3138},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":677436,"byte_end":677444,"line_start":350,"line_end":350,"column_start":12,"column_end":20},"name":"as_bgra8","qualname":"<DynamicImage>::as_bgra8","value":"fn (&self) -> Option<&BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit BGRA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3139},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":677662,"byte_end":677674,"line_start":358,"line_end":358,"column_start":12,"column_end":24},"name":"as_mut_bgra8","qualname":"<DynamicImage>::as_mut_bgra8","value":"fn (&mut self) -> Option<&mut BgraImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3140},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":677901,"byte_end":677909,"line_start":366,"line_end":366,"column_start":12,"column_end":20},"name":"as_luma8","qualname":"<DynamicImage>::as_luma8","value":"fn (&self) -> Option<&GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3141},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":678132,"byte_end":678144,"line_start":374,"line_end":374,"column_start":12,"column_end":24},"name":"as_mut_luma8","qualname":"<DynamicImage>::as_mut_luma8","value":"fn (&mut self) -> Option<&mut GrayImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3142},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":678393,"byte_end":678407,"line_start":382,"line_end":382,"column_start":12,"column_end":26},"name":"as_luma_alpha8","qualname":"<DynamicImage>::as_luma_alpha8","value":"fn (&self) -> Option<&GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3143},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":678658,"byte_end":678676,"line_start":390,"line_end":390,"column_start":12,"column_end":30},"name":"as_mut_luma_alpha8","qualname":"<DynamicImage>::as_mut_luma_alpha8","value":"fn (&mut self) -> Option<&mut GrayAlphaImage>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 8bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3144},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":678904,"byte_end":678912,"line_start":398,"line_end":398,"column_start":12,"column_end":20},"name":"as_rgb16","qualname":"<DynamicImage>::as_rgb16","value":"fn (&self) -> Option<&Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3145},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":679131,"byte_end":679143,"line_start":406,"line_end":406,"column_start":12,"column_end":24},"name":"as_mut_rgb16","qualname":"<DynamicImage>::as_mut_rgb16","value":"fn (&mut self) -> Option<&mut Rgb16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGB image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3146},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":679367,"byte_end":679376,"line_start":414,"line_end":414,"column_start":12,"column_end":21},"name":"as_rgba16","qualname":"<DynamicImage>::as_rgba16","value":"fn (&self) -> Option<&Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3147},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":679598,"byte_end":679611,"line_start":422,"line_end":422,"column_start":12,"column_end":25},"name":"as_mut_rgba16","qualname":"<DynamicImage>::as_mut_rgba16","value":"fn (&mut self) -> Option<&mut Rgba16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit RGBA image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3148},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":679842,"byte_end":679851,"line_start":430,"line_end":430,"column_start":12,"column_end":21},"name":"as_luma16","qualname":"<DynamicImage>::as_luma16","value":"fn (&self) -> Option<&Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3149},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":680078,"byte_end":680091,"line_start":438,"line_end":438,"column_start":12,"column_end":25},"name":"as_mut_luma16","qualname":"<DynamicImage>::as_mut_luma16","value":"fn (&mut self) -> Option<&mut Gray16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3150},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":680344,"byte_end":680359,"line_start":446,"line_end":446,"column_start":12,"column_end":27},"name":"as_luma_alpha16","qualname":"<DynamicImage>::as_luma_alpha16","value":"fn (&self) -> Option<&GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3151},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":680614,"byte_end":680633,"line_start":454,"line_end":454,"column_start":12,"column_end":31},"name":"as_mut_luma_alpha16","qualname":"<DynamicImage>::as_mut_luma_alpha16","value":"fn (&mut self) -> Option<&mut GrayAlpha16Image>","parent":null,"children":[],"decl_id":null,"docs":" Return a mutable reference to an 16bit Grayscale image with an alpha channel\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3152},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":680892,"byte_end":680910,"line_start":462,"line_end":462,"column_start":12,"column_end":30},"name":"as_flat_samples_u8","qualname":"<DynamicImage>::as_flat_samples_u8","value":"fn (&self) -> Option<FlatSamples<&[u8]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 8 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3153},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":681544,"byte_end":681563,"line_start":475,"line_end":475,"column_start":12,"column_end":31},"name":"as_flat_samples_u16","qualname":"<DynamicImage>::as_flat_samples_u16","value":"fn (&self) -> Option<FlatSamples<&[u16]>>","parent":null,"children":[],"decl_id":null,"docs":" Return a view on the raw sample buffer for 16 bit per channel images.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3154},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":682030,"byte_end":682038,"line_start":486,"line_end":486,"column_start":12,"column_end":20},"name":"to_bytes","qualname":"<DynamicImage>::to_bytes","value":"fn (&self) -> Vec<u8>","parent":null,"children":[],"decl_id":null,"docs":" Return this image's pixels as a byte vector.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3155},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":682146,"byte_end":682151,"line_start":491,"line_end":491,"column_start":12,"column_end":17},"name":"color","qualname":"<DynamicImage>::color","value":"fn (&self) -> color::ColorType","parent":null,"children":[],"decl_id":null,"docs":" Return this image's color type.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3156},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":682955,"byte_end":682964,"line_start":507,"line_end":507,"column_start":12,"column_end":21},"name":"grayscale","qualname":"<DynamicImage>::grayscale","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Return a grayscale version of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3157},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":684070,"byte_end":684076,"line_start":524,"line_end":524,"column_start":12,"column_end":18},"name":"invert","qualname":"<DynamicImage>::invert","value":"fn (&mut self) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Invert the colors of this image.\n This method operates inplace.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3158},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":684440,"byte_end":684446,"line_start":532,"line_end":532,"column_start":12,"column_end":18},"name":"resize","qualname":"<DynamicImage>::resize","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3159},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":684910,"byte_end":684922,"line_start":542,"line_end":542,"column_start":12,"column_end":24},"name":"resize_exact","qualname":"<DynamicImage>::resize_exact","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3160},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":685613,"byte_end":685622,"line_start":559,"line_end":559,"column_start":12,"column_end":21},"name":"thumbnail","qualname":"<DynamicImage>::thumbnail","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to fit within a specific size.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the bounds specified by ```nwidth``` and ```nheight```.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3161},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":686230,"byte_end":686245,"line_start":571,"line_end":571,"column_start":12,"column_end":27},"name":"thumbnail_exact","qualname":"<DynamicImage>::thumbnail_exact","value":"fn (&self, nwidth: u32, nheight: u32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Scale this image down to a specific size.\n Returns a new image. Does not preserve aspect ratio.\n ```nwidth``` and ```nheight``` are the new image's dimensions.\n This method uses a fast integer algorithm where each source\n pixel contributes to exactly one target pixel.\n May give aliasing artifacts if new size is close to old size.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3162},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":686765,"byte_end":686779,"line_start":581,"line_end":581,"column_start":12,"column_end":26},"name":"resize_to_fill","qualname":"<DynamicImage>::resize_to_fill","value":"fn (&self, nwidth: u32, nheight: u32, filter: imageops::FilterType) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Resize this image using the specified filter algorithm.\n Returns a new image. The image's aspect ratio is preserved.\n The image is scaled to the maximum possible size that fits\n within the larger (relative to aspect ratio) of the bounds\n specified by ```nwidth``` and ```nheight```, then cropped to\n fit within the other bound.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3163},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":687599,"byte_end":687603,"line_start":604,"line_end":604,"column_start":12,"column_end":16},"name":"blur","qualname":"<DynamicImage>::blur","value":"fn (&self, sigma: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs a Gaussian blur on this image.\n ```sigma``` is a measure of how much to blur by.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3164},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":687981,"byte_end":687990,"line_start":613,"line_end":613,"column_start":12,"column_end":21},"name":"unsharpen","qualname":"<DynamicImage>::unsharpen","value":"fn (&self, sigma: f32, threshold: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Performs an unsharpen mask on this image.\n ```sigma``` is the amount to blur the image by.\n ```threshold``` is a control of how much to sharpen.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3165},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":688199,"byte_end":688208,"line_start":618,"line_end":618,"column_start":12,"column_end":21},"name":"filter3x3","qualname":"<DynamicImage>::filter3x3","value":"fn (&self, kernel: &[f32]) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Filters this image with the specified 3x3 kernel.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3166},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":688618,"byte_end":688633,"line_start":629,"line_end":629,"column_start":12,"column_end":27},"name":"adjust_contrast","qualname":"<DynamicImage>::adjust_contrast","value":"fn (&self, c: f32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Adjust the contrast of this image.\n ```contrast``` is the amount to adjust the contrast by.\n Negative values decrease the contrast and positive values increase the contrast.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3167},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":688933,"byte_end":688941,"line_start":636,"line_end":636,"column_start":12,"column_end":20},"name":"brighten","qualname":"<DynamicImage>::brighten","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Brighten the pixels of this image.\n ```value``` is the amount to brighten each pixel by.\n Negative values decrease the brightness and positive values increase it.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3168},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":689289,"byte_end":689298,"line_start":644,"line_end":644,"column_start":12,"column_end":21},"name":"huerotate","qualname":"<DynamicImage>::huerotate","value":"fn (&self, value: i32) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Hue rotate the supplied image.\n `value` is the degrees to rotate each pixel by.\n 0 and 360 do nothing, the rest rotates by the given degree value.\n just like the css webkit filter hue-rotate(180)\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3169},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":689457,"byte_end":689462,"line_start":649,"line_end":649,"column_start":12,"column_end":17},"name":"flipv","qualname":"<DynamicImage>::flipv","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image vertically\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3170},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":689608,"byte_end":689613,"line_start":654,"line_end":654,"column_start":12,"column_end":17},"name":"fliph","qualname":"<DynamicImage>::fliph","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Flip this image horizontally\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3171},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":689772,"byte_end":689780,"line_start":659,"line_end":659,"column_start":12,"column_end":20},"name":"rotate90","qualname":"<DynamicImage>::rotate90","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 90 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3172},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":689933,"byte_end":689942,"line_start":664,"line_end":664,"column_start":12,"column_end":21},"name":"rotate180","qualname":"<DynamicImage>::rotate180","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 180 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3173},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":690096,"byte_end":690105,"line_start":669,"line_end":669,"column_start":12,"column_end":21},"name":"rotate270","qualname":"<DynamicImage>::rotate270","value":"fn (&self) -> DynamicImage","parent":null,"children":[],"decl_id":null,"docs":" Rotate this image 270 degrees clockwise.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3174},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":690260,"byte_end":690268,"line_start":674,"line_end":674,"column_start":12,"column_end":20},"name":"write_to","qualname":"<DynamicImage>::write_to","value":"fn <W, F> (&self, w: &mut W, format: F) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Encode this image and write it to ```w```\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3177},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":693419,"byte_end":693423,"line_start":761,"line_end":761,"column_start":12,"column_end":16},"name":"save","qualname":"<DynamicImage>::save","value":"fn <Q> (&self, path: Q) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3179},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":693795,"byte_end":693811,"line_start":775,"line_end":775,"column_start":12,"column_end":28},"name":"save_with_format","qualname":"<DynamicImage>::save_with_format","value":"fn <Q> (&self, path: Q, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the buffer to a file at the specified path in\n the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3199},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":700466,"byte_end":700470,"line_start":948,"line_end":948,"column_start":8,"column_end":12},"name":"open","qualname":"::dynimage::open","value":"fn <P> (path: P) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Open the image located at the path specified.\n The image's format is determined from the path's file extension.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3201},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":701025,"byte_end":701041,"line_start":963,"line_end":963,"column_start":8,"column_end":24},"name":"image_dimensions","qualname":"::dynimage::image_dimensions","value":"fn <P> (path: P) -> ImageResult<(u32, u32)>","parent":null,"children":[],"decl_id":null,"docs":" Read the dimensions of the image located at the specified path.\n This is faster than fully loading the image and then getting its dimensions.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3203},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":701616,"byte_end":701627,"line_start":978,"line_end":978,"column_start":8,"column_end":19},"name":"save_buffer","qualname":"::dynimage::save_buffer","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3205},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":702281,"byte_end":702304,"line_start":1000,"line_end":1000,"column_start":8,"column_end":31},"name":"save_buffer_with_format","qualname":"::dynimage::save_buffer_with_format","value":"fn <P> (path: P, buf: &[u8], width: u32, height: u32, color: color::ColorType, format: ImageFormat) -> ImageResult<()>","parent":null,"children":[],"decl_id":null,"docs":" Saves the supplied buffer to a file at the path specified\n in the specified format.","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3207},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":702867,"byte_end":702883,"line_start":1023,"line_end":1023,"column_start":8,"column_end":24},"name":"load_from_memory","qualname":"::dynimage::load_from_memory","value":"fn (buffer: &[u8]) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[]},{"kind":"Function","id":{"krate":0,"index":3208},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":703365,"byte_end":703393,"line_start":1038,"line_end":1038,"column_start":8,"column_end":36},"name":"load_from_memory_with_format","qualname":"::dynimage::load_from_memory_with_format","value":"fn (buf: &[u8], format: ImageFormat) -> ImageResult<DynamicImage>","parent":null,"children":[],"decl_id":null,"docs":" Create a new image from a byte slice","sig":null,"attributes":[{"value":"inline(always)","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":703340,"byte_end":703357,"line_start":1037,"line_end":1037,"column_start":1,"column_end":18}}]},{"kind":"TupleVariant","id":{"krate":0,"index":4976},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708027,"byte_end":708030,"line_start":23,"line_end":23,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageFormat::Png","value":"ImageFormat::Png","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4978},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708069,"byte_end":708073,"line_start":26,"line_end":26,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageFormat::Jpeg","value":"ImageFormat::Jpeg","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in JPEG Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4980},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708111,"byte_end":708114,"line_start":29,"line_end":29,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageFormat::Gif","value":"ImageFormat::Gif","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4982},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708153,"byte_end":708157,"line_start":32,"line_end":32,"column_start":5,"column_end":9},"name":"WebP","qualname":"::image::ImageFormat::WebP","value":"ImageFormat::WebP","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in WEBP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4984},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708203,"byte_end":708206,"line_start":35,"line_end":35,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageFormat::Pnm","value":"ImageFormat::Pnm","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in general PNM Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4986},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708245,"byte_end":708249,"line_start":38,"line_end":38,"column_start":5,"column_end":9},"name":"Tiff","qualname":"::image::ImageFormat::Tiff","value":"ImageFormat::Tiff","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in TIFF Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4988},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708287,"byte_end":708290,"line_start":41,"line_end":41,"column_start":5,"column_end":8},"name":"Tga","qualname":"::image::ImageFormat::Tga","value":"ImageFormat::Tga","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in TGA Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4990},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708328,"byte_end":708331,"line_start":44,"line_end":44,"column_start":5,"column_end":8},"name":"Dds","qualname":"::image::ImageFormat::Dds","value":"ImageFormat::Dds","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in DDS Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4992},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708369,"byte_end":708372,"line_start":47,"line_end":47,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageFormat::Bmp","value":"ImageFormat::Bmp","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4994},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708410,"byte_end":708413,"line_start":50,"line_end":50,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageFormat::Ico","value":"ImageFormat::Ico","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4996},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708460,"byte_end":708463,"line_start":53,"line_end":53,"column_start":5,"column_end":8},"name":"Hdr","qualname":"::image::ImageFormat::Hdr","value":"ImageFormat::Hdr","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":" An Image in Radiance HDR Format\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":4998},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708489,"byte_end":708504,"line_start":56,"line_end":56,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageFormat::__NonExhaustive","value":"ImageFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":4975},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":4975},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":707978,"byte_end":707989,"line_start":21,"line_end":21,"column_start":10,"column_end":21},"name":"ImageFormat","qualname":"::image::ImageFormat","value":"ImageFormat::{Png, Jpeg, Gif, WebP, Pnm, Tiff, Tga, Dds, Bmp, Ico, Hdr, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":4976},{"krate":0,"index":4978},{"krate":0,"index":4980},{"krate":0,"index":4982},{"krate":0,"index":4984},{"krate":0,"index":4986},{"krate":0,"index":4988},{"krate":0,"index":4990},{"krate":0,"index":4992},{"krate":0,"index":4994},{"krate":0,"index":4996},{"krate":0,"index":4998}],"decl_id":null,"docs":" An enumeration of supported image formats.\n Not all formats support both encoding and decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3231},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708646,"byte_end":708655,"line_start":61,"line_end":61,"column_start":12,"column_end":21},"name":"from_path","qualname":"<ImageFormat>::from_path","value":"fn <P> (path: P) -> ImageResult<Self>","parent":null,"children":[],"decl_id":null,"docs":" Return the image format specified by the path's file extension.\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5017},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709105,"byte_end":709108,"line_start":73,"line_end":73,"column_start":5,"column_end":8},"name":"Png","qualname":"::image::ImageOutputFormat::Png","value":"ImageOutputFormat::Png","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in PNG Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"png\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709046,"byte_end":709069,"line_start":71,"line_end":71,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5019},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709199,"byte_end":709203,"line_start":77,"line_end":77,"column_start":5,"column_end":9},"name":"Jpeg","qualname":"::image::ImageOutputFormat::Jpeg","value":"ImageOutputFormat::Jpeg(u8)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in JPEG Format with specified quality\n","sig":null,"attributes":[{"value":"cfg(feature = \"jpeg\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709115,"byte_end":709139,"line_start":75,"line_end":75,"column_start":5,"column_end":29}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5022},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709285,"byte_end":709288,"line_start":81,"line_end":81,"column_start":5,"column_end":8},"name":"Pnm","qualname":"::image::ImageOutputFormat::Pnm","value":"ImageOutputFormat::Pnm(PNMSubtype)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in one of the PNM Formats\n","sig":null,"attributes":[{"value":"cfg(feature = \"pnm\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709214,"byte_end":709237,"line_start":79,"line_end":79,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5025},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709366,"byte_end":709369,"line_start":85,"line_end":85,"column_start":5,"column_end":8},"name":"Gif","qualname":"::image::ImageOutputFormat::Gif","value":"ImageOutputFormat::Gif","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in GIF Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"gif\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709307,"byte_end":709330,"line_start":83,"line_end":83,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5027},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709435,"byte_end":709438,"line_start":89,"line_end":89,"column_start":5,"column_end":8},"name":"Ico","qualname":"::image::ImageOutputFormat::Ico","value":"ImageOutputFormat::Ico","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in ICO Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"ico\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709376,"byte_end":709399,"line_start":87,"line_end":87,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5029},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709504,"byte_end":709507,"line_start":93,"line_end":93,"column_start":5,"column_end":8},"name":"Bmp","qualname":"::image::ImageOutputFormat::Bmp","value":"ImageOutputFormat::Bmp","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" An Image in BMP Format\n","sig":null,"attributes":[{"value":"cfg(feature = \"bmp\")","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709445,"byte_end":709468,"line_start":91,"line_end":91,"column_start":5,"column_end":28}}]},{"kind":"TupleVariant","id":{"krate":0,"index":5031},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709759,"byte_end":709770,"line_start":98,"line_end":98,"column_start":5,"column_end":16},"name":"Unsupported","qualname":"::image::ImageOutputFormat::Unsupported","value":"ImageOutputFormat::Unsupported(String)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":" A value for signalling an error: An unsupported format was requested\n","sig":null,"attributes":[]},{"kind":"TupleVariant","id":{"krate":0,"index":5034},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709804,"byte_end":709819,"line_start":101,"line_end":101,"column_start":5,"column_end":20},"name":"__NonExhaustive","qualname":"::image::ImageOutputFormat::__NonExhaustive","value":"ImageOutputFormat::__NonExhaustive(crate::utils::NonExhaustiveMarker)","parent":{"krate":0,"index":5016},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Enum","id":{"krate":0,"index":5016},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709022,"byte_end":709039,"line_start":70,"line_end":70,"column_start":10,"column_end":27},"name":"ImageOutputFormat","qualname":"::image::ImageOutputFormat","value":"ImageOutputFormat::{Png, Jpeg, Pnm, Gif, Ico, Bmp, Unsupported, __NonExhaustive}","parent":null,"children":[{"krate":0,"index":5017},{"krate":0,"index":5019},{"krate":0,"index":5022},{"krate":0,"index":5025},{"krate":0,"index":5027},{"krate":0,"index":5029},{"krate":0,"index":5031},{"krate":0,"index":5034}],"decl_id":null,"docs":" An enumeration of supported image formats for encoding.\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5048},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718279,"byte_end":718287,"line_start":303,"line_end":303,"column_start":12,"column_end":20},"name":"Progress","qualname":"::image::Progress","value":"Progress {  }","parent":null,"children":[{"krate":0,"index":5049},{"krate":0,"index":5050}],"decl_id":null,"docs":" Represents the progress of an image operation.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3258},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718395,"byte_end":718402,"line_start":310,"line_end":310,"column_start":12,"column_end":19},"name":"current","qualname":"<Progress>::current","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of completed decoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3259},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718575,"byte_end":718580,"line_start":317,"line_end":317,"column_start":12,"column_end":17},"name":"total","qualname":"<Progress>::total","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" A measure of all necessary decoding work.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3260},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718690,"byte_end":718699,"line_start":322,"line_end":322,"column_start":12,"column_end":21},"name":"remaining","qualname":"<Progress>::remaining","value":"fn (self) -> u64","parent":null,"children":[],"decl_id":null,"docs":" Calculate a measure for remaining decoding work.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3261},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718828,"byte_end":718840,"line_start":328,"line_end":328,"column_start":11,"column_end":23},"name":"ImageDecoder","qualname":"::image::ImageDecoder","value":"ImageDecoder<'a>: Sized","parent":null,"children":[{"krate":0,"index":3263},{"krate":0,"index":3264},{"krate":0,"index":3265},{"krate":0,"index":3266},{"krate":0,"index":3267},{"krate":0,"index":3268},{"krate":0,"index":3269},{"krate":0,"index":3270},{"krate":0,"index":3272}],"decl_id":null,"docs":" The trait that all decoders implement\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3263},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718917,"byte_end":718923,"line_start":330,"line_end":330,"column_start":10,"column_end":16},"name":"Reader","qualname":"::image::ImageDecoder::Reader","value":"type Reader: Read + 'a;","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" The type of reader produced by `into_reader`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3264},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":719013,"byte_end":719023,"line_start":333,"line_end":333,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::ImageDecoder::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns a tuple containing the width and height of the image\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3265},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":719128,"byte_end":719138,"line_start":336,"line_end":336,"column_start":8,"column_end":18},"name":"color_type","qualname":"::image::ImageDecoder::color_type","value":"fn (&self) -> ColorType","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns the color type of the image data produced by this decoder\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3266},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":719232,"byte_end":719251,"line_start":339,"line_end":339,"column_start":8,"column_end":27},"name":"original_color_type","qualname":"::image::ImageDecoder::original_color_type","value":"fn (&self) -> ExtendedColorType","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Retuns the color type of the image file before decoding\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3267},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":719592,"byte_end":719603,"line_start":346,"line_end":346,"column_start":8,"column_end":19},"name":"into_reader","qualname":"::image::ImageDecoder::into_reader","value":"fn (self) -> ImageResult<Self::Reader>","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns a reader that can be used to obtain the bytes of the image. For the best\n performance, always try to read at least `scanline_bytes` from the reader at a time. Reading\n fewer bytes will cause the reader to perform internal buffering.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3268},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":719990,"byte_end":720001,"line_start":354,"line_end":354,"column_start":8,"column_end":19},"name":"total_bytes","qualname":"::image::ImageDecoder::total_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns the total number of bytes in the decoded image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3269},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":720338,"byte_end":720352,"line_start":361,"line_end":361,"column_start":8,"column_end":22},"name":"scanline_bytes","qualname":"::image::ImageDecoder::scanline_bytes","value":"fn (&self) -> u64","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns the minimum number of bytes that can be efficiently read from this decoder. This may\n be as few as 1 or as many as `total_bytes()`.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3270},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":721241,"byte_end":721251,"line_start":385,"line_end":385,"column_start":8,"column_end":18},"name":"read_image","qualname":"::image::ImageDecoder::read_image","value":"fn (self, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Returns all the bytes in the image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3272},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":721479,"byte_end":721503,"line_start":391,"line_end":391,"column_start":8,"column_end":32},"name":"read_image_with_progress","qualname":"::image::ImageDecoder::read_image_with_progress","value":"fn <F> (self, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3261},"children":[],"decl_id":null,"docs":" Same as `read_image` but periodically calls the provided callback to give updates on loading\n progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3274},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":722489,"byte_end":722504,"line_start":425,"line_end":425,"column_start":11,"column_end":26},"name":"ImageDecoderExt","qualname":"::image::ImageDecoderExt","value":"ImageDecoderExt<'a>: ImageDecoder<'a> + Sized","parent":null,"children":[{"krate":0,"index":3276},{"krate":0,"index":3278}],"decl_id":null,"docs":" ImageDecoderExt trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3276},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":722593,"byte_end":722602,"line_start":427,"line_end":427,"column_start":8,"column_end":17},"name":"read_rect","qualname":"::image::ImageDecoderExt::read_rect","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8]) -> ImageResult<()>","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3278},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":722913,"byte_end":722936,"line_start":439,"line_end":439,"column_start":8,"column_end":31},"name":"read_rect_with_progress","qualname":"::image::ImageDecoderExt::read_rect_with_progress","value":"fn <F> (&mut self, x: u32, y: u32, width: u32, height: u32, buf: &mut [u8], progress_callback: F) -> ImageResult<()>","parent":{"krate":0,"index":3274},"children":[],"decl_id":null,"docs":" Read a rectangular section of the image, periodically reporting progress.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3280},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":723167,"byte_end":723183,"line_start":451,"line_end":451,"column_start":11,"column_end":27},"name":"AnimationDecoder","qualname":"::image::AnimationDecoder","value":"AnimationDecoder<'a>","parent":null,"children":[{"krate":0,"index":3282}],"decl_id":null,"docs":" AnimationDecoder trait\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3282},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":723255,"byte_end":723266,"line_start":453,"line_end":453,"column_start":8,"column_end":19},"name":"into_frames","qualname":"::image::AnimationDecoder::into_frames","value":"fn (self) -> Frames<'a>","parent":{"krate":0,"index":3280},"children":[],"decl_id":null,"docs":" Consume the decoder producing a series of frames.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3283},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":723338,"byte_end":723350,"line_start":457,"line_end":457,"column_start":11,"column_end":23},"name":"ImageEncoder","qualname":"::image::ImageEncoder","value":"ImageEncoder","parent":null,"children":[{"krate":0,"index":3284}],"decl_id":null,"docs":" The trait all encoders implement\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3284},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":723899,"byte_end":723910,"line_start":468,"line_end":468,"column_start":8,"column_end":19},"name":"write_image","qualname":"::image::ImageEncoder::write_image","value":"fn (self, buf: &[u8], width: u32, height: u32, color_type: ColorType) -> ImageResult<()>","parent":{"krate":0,"index":3283},"children":[],"decl_id":null,"docs":" Writes all the bytes in an image to the encoder.","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3285},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":724087,"byte_end":724093,"line_start":478,"line_end":478,"column_start":12,"column_end":18},"name":"Pixels","qualname":"::image::Pixels","value":"Pixels {  }","parent":null,"children":[{"krate":0,"index":3288},{"krate":0,"index":3289},{"krate":0,"index":3290},{"krate":0,"index":3291},{"krate":0,"index":3292}],"decl_id":null,"docs":" Immutable pixel iterator\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3298},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":724726,"byte_end":724742,"line_start":509,"line_end":509,"column_start":11,"column_end":27},"name":"GenericImageView","qualname":"::image::GenericImageView","value":"GenericImageView","parent":null,"children":[{"krate":0,"index":3299},{"krate":0,"index":3300},{"krate":0,"index":3301},{"krate":0,"index":3302},{"krate":0,"index":3303},{"krate":0,"index":3304},{"krate":0,"index":3305},{"krate":0,"index":3306},{"krate":0,"index":3307},{"krate":0,"index":3308},{"krate":0,"index":3309},{"krate":0,"index":3310}],"decl_id":null,"docs":" Trait to inspect an image.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3299},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":724781,"byte_end":724786,"line_start":511,"line_end":511,"column_start":10,"column_end":15},"name":"Pixel","qualname":"::image::GenericImageView::Pixel","value":"type Pixel: Pixel;","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" The type of pixel.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3300},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725020,"byte_end":725034,"line_start":516,"line_end":516,"column_start":10,"column_end":24},"name":"InnerImageView","qualname":"::image::GenericImageView::InnerImageView","value":"type InnerImageView: GenericImageView<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3301},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725127,"byte_end":725137,"line_start":519,"line_end":519,"column_start":8,"column_end":18},"name":"dimensions","qualname":"::image::GenericImageView::dimensions","value":"fn (&self) -> (u32, u32)","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" The width and height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3302},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725201,"byte_end":725206,"line_start":522,"line_end":522,"column_start":8,"column_end":13},"name":"width","qualname":"::image::GenericImageView::width","value":"fn (&self) -> u32","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" The width of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3303},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725321,"byte_end":725327,"line_start":528,"line_end":528,"column_start":8,"column_end":14},"name":"height","qualname":"::image::GenericImageView::height","value":"fn (&self) -> u32","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" The height of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3304},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725454,"byte_end":725460,"line_start":534,"line_end":534,"column_start":8,"column_end":14},"name":"bounds","qualname":"::image::GenericImageView::bounds","value":"fn (&self) -> (u32, u32, u32, u32)","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" The bounding rectangle of this image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3305},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725577,"byte_end":725586,"line_start":537,"line_end":537,"column_start":8,"column_end":17},"name":"in_bounds","qualname":"::image::GenericImageView::in_bounds","value":"fn (&self, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns true if this x, y coordinate is contained inside the image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3306},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":725909,"byte_end":725918,"line_start":549,"line_end":549,"column_start":8,"column_end":17},"name":"get_pixel","qualname":"::image::GenericImageView::get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3307},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":726105,"byte_end":726121,"line_start":554,"line_end":554,"column_start":15,"column_end":31},"name":"unsafe_get_pixel","qualname":"::image::GenericImageView::unsafe_get_pixel","value":"fn (&self, x: u32, y: u32) -> Self::Pixel","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns the pixel located at (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3308},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":726353,"byte_end":726359,"line_start":561,"line_end":561,"column_start":8,"column_end":14},"name":"pixels","qualname":"::image::GenericImageView::pixels","value":"fn (&self) -> Pixels<Self>","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns an Iterator over the pixels of this image.\n The iterator yields the coordinates of each pixel\n along with their value\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3309},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":726629,"byte_end":726634,"line_start":574,"line_end":574,"column_start":8,"column_end":13},"name":"inner","qualname":"::image::GenericImageView::inner","value":"fn (&self) -> &Self::InnerImageView","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns a reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3310},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":726831,"byte_end":726835,"line_start":578,"line_end":578,"column_start":8,"column_end":12},"name":"view","qualname":"::image::GenericImageView::view","value":"fn (&self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&Self::InnerImageView>","parent":{"krate":0,"index":3298},"children":[],"decl_id":null,"docs":" Returns an subimage that is an immutable view into this image.\n You can use [`GenericImage::sub_image`] if you need a mutable view instead.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3311},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727034,"byte_end":727046,"line_start":584,"line_end":584,"column_start":11,"column_end":23},"name":"GenericImage","qualname":"::image::GenericImage","value":"GenericImage: GenericImageView","parent":null,"children":[{"krate":0,"index":3312},{"krate":0,"index":3313},{"krate":0,"index":3314},{"krate":0,"index":3315},{"krate":0,"index":3316},{"krate":0,"index":3317},{"krate":0,"index":3319},{"krate":0,"index":3321},{"krate":0,"index":3322}],"decl_id":null,"docs":" A trait for manipulating images.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3312},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727291,"byte_end":727301,"line_start":588,"line_end":588,"column_start":10,"column_end":20},"name":"InnerImage","qualname":"::image::GenericImage::InnerImage","value":"type InnerImage: GenericImage<Pixel = Self::Pixel>;","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Underlying image type. This is mainly used by SubImages in order to\n always have a reference to the original image. This allows for less\n indirections and it eases the use of nested SubImages.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3313},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727491,"byte_end":727504,"line_start":595,"line_end":595,"column_start":8,"column_end":21},"name":"get_pixel_mut","qualname":"::image::GenericImage::get_pixel_mut","value":"fn (&mut self, x: u32, y: u32) -> &mut Self::Pixel","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Gets a reference to the mutable pixel at location `(x, y)`","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3314},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727678,"byte_end":727687,"line_start":602,"line_end":602,"column_start":8,"column_end":17},"name":"put_pixel","qualname":"::image::GenericImage::put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3315},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727879,"byte_end":727895,"line_start":607,"line_end":607,"column_start":15,"column_end":31},"name":"unsafe_put_pixel","qualname":"::image::GenericImage::unsafe_put_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Puts a pixel at location (x, y)","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3316},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":728162,"byte_end":728173,"line_start":614,"line_end":614,"column_start":8,"column_end":19},"name":"blend_pixel","qualname":"::image::GenericImage::blend_pixel","value":"fn (&mut self, x: u32, y: u32, pixel: Self::Pixel) -> ()","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Put a pixel at location (x, y), taking into account alpha channels","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3317},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":728621,"byte_end":728630,"line_start":625,"line_end":625,"column_start":8,"column_end":17},"name":"copy_from","qualname":"::image::GenericImage::copy_from","value":"fn <O> (&mut self, other: &O, x: u32, y: u32) -> ImageResult<()>","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Copies all of the pixels from another image into this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3319},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":729585,"byte_end":729596,"line_start":651,"line_end":651,"column_start":8,"column_end":19},"name":"copy_within","qualname":"::image::GenericImage::copy_within","value":"fn (&mut self, source: Rect, x: u32, y: u32) -> bool","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Copies all of the pixels from one part of this image to another part of this image.","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3321},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":731254,"byte_end":731263,"line_start":687,"line_end":687,"column_start":8,"column_end":17},"name":"inner_mut","qualname":"::image::GenericImage::inner_mut","value":"fn (&mut self) -> &mut Self::InnerImage","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Returns a mutable reference to the underlying image.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3322},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":731458,"byte_end":731467,"line_start":691,"line_end":691,"column_start":8,"column_end":17},"name":"sub_image","qualname":"::image::GenericImage::sub_image","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> SubImage<&mut Self::InnerImage>","parent":{"krate":0,"index":3311},"children":[],"decl_id":null,"docs":" Returns a mutable subimage that is a view into this image.\n If you want an immutable subimage instead, use [`GenericImageView::view`]\n","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":3323},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":731958,"byte_end":731966,"line_start":708,"line_end":708,"column_start":12,"column_end":20},"name":"SubImage","qualname":"::image::SubImage","value":"SubImage {  }","parent":null,"children":[{"krate":0,"index":3325},{"krate":0,"index":3326},{"krate":0,"index":3327},{"krate":0,"index":3328},{"krate":0,"index":3329}],"decl_id":null,"docs":" A View into another image","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3336},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":732354,"byte_end":732357,"line_start":724,"line_end":724,"column_start":12,"column_end":15},"name":"new","qualname":"<SubImage<I>>::new","value":"fn (image: I, x: u32, y: u32, width: u32, height: u32) -> SubImage<I>","parent":null,"children":[],"decl_id":null,"docs":" Construct a new subimage\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3337},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":732646,"byte_end":732659,"line_start":735,"line_end":735,"column_start":12,"column_end":25},"name":"change_bounds","qualname":"<SubImage<I>>::change_bounds","value":"fn (&mut self, x: u32, y: u32, width: u32, height: u32) -> ()","parent":null,"children":[],"decl_id":null,"docs":" Change the coordinates of this subimage.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3338},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":732893,"byte_end":732901,"line_start":743,"line_end":743,"column_start":12,"column_end":20},"name":"to_image","qualname":"<SubImage<I>>::to_image","value":"fn (&self) -> ImageBuffer<DerefPixel<I>, Vec<DerefSubpixel<I>>>","parent":null,"children":[],"decl_id":null,"docs":" Convert this subimage to an ImageBuffer\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3362},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745567,"byte_end":745582,"line_start":10,"line_end":10,"column_start":11,"column_end":26},"name":"EncodableLayout","qualname":"::traits::EncodableLayout","value":"EncodableLayout: seals::EncodableLayout","parent":null,"children":[{"krate":0,"index":3363}],"decl_id":null,"docs":" Types which are safe to treat as an immutable byte slice in a pixel layout\n for image encoding.\n","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3363},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745653,"byte_end":745661,"line_start":12,"line_end":12,"column_start":8,"column_end":16},"name":"as_bytes","qualname":"::traits::EncodableLayout::as_bytes","value":"fn (&self) -> &[u8]","parent":{"krate":0,"index":3362},"children":[],"decl_id":null,"docs":" Get the bytes of this value.\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3368},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745949,"byte_end":745958,"line_start":28,"line_end":28,"column_start":11,"column_end":20},"name":"Primitive","qualname":"::traits::Primitive","value":"Primitive: Copy + NumCast + Num + PartialOrd<Self> + Clone + Bounded","parent":null,"children":[],"decl_id":null,"docs":" Primitive trait from old stdlib\n","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3381},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746480,"byte_end":746491,"line_start":45,"line_end":45,"column_start":11,"column_end":22},"name":"Enlargeable","qualname":"::traits::Enlargeable","value":"Enlargeable: Sized + Bounded + NumCast","parent":null,"children":[{"krate":0,"index":3382},{"krate":0,"index":3383}],"decl_id":null,"docs":" An Enlargable::Larger value should be enough to calculate\n the sum (average) of a few hundred or thousand Enlargeable values.\n","sig":null,"attributes":[]},{"kind":"Type","id":{"krate":0,"index":3382},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746530,"byte_end":746536,"line_start":46,"line_end":46,"column_start":10,"column_end":16},"name":"Larger","qualname":"::traits::Enlargeable::Larger","value":"type Larger: Primitive + AddAssign + 'static;","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Method","id":{"krate":0,"index":3383},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746579,"byte_end":746589,"line_start":48,"line_end":48,"column_start":8,"column_end":18},"name":"clamp_from","qualname":"::traits::Enlargeable::clamp_from","value":"fn (n: Self::Larger) -> Self","parent":{"krate":0,"index":3381},"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Trait","id":{"krate":0,"index":3391},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":747070,"byte_end":747085,"line_start":71,"line_end":71,"column_start":15,"column_end":30},"name":"EncodableLayout","qualname":"::traits::seals::EncodableLayout","value":"EncodableLayout","parent":null,"children":[],"decl_id":null,"docs":"","sig":null,"attributes":[]},{"kind":"Struct","id":{"krate":0,"index":5063},"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\utils\\mod.rs","byte_start":750508,"byte_end":750527,"line_start":89,"line_end":89,"column_start":12,"column_end":31},"name":"NonExhaustiveMarker","qualname":"::utils::NonExhaustiveMarker","value":"NonExhaustiveMarker {  }","parent":null,"children":[{"krate":0,"index":5064}],"decl_id":null,"docs":" A marker struct for __NonExhaustive enums.","sig":null,"attributes":[]}],"impls":[{"id":0,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10556,"byte_end":10566,"line_start":196,"line_end":196,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":72},{"krate":0,"index":73},{"krate":0,"index":74},{"krate":0,"index":75},{"krate":0,"index":76},{"krate":0,"index":77}],"docs":"","sig":null,"attributes":[]},{"id":1,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":11635,"byte_end":11651,"line_start":230,"line_end":230,"column_start":6,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":79},{"krate":0,"index":80},{"krate":0,"index":81},{"krate":0,"index":82}],"docs":"","sig":null,"attributes":[]},{"id":2,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":12635,"byte_end":12648,"line_start":261,"line_end":261,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":84},{"krate":0,"index":86},{"krate":0,"index":87},{"krate":0,"index":88},{"krate":0,"index":89},{"krate":0,"index":90}],"docs":"","sig":null,"attributes":[]},{"id":3,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":14392,"byte_end":14405,"line_start":321,"line_end":321,"column_start":6,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":92},{"krate":0,"index":94},{"krate":0,"index":95}],"docs":"","sig":null,"attributes":[]},{"id":4,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15181,"byte_end":15195,"line_start":349,"line_end":349,"column_start":6,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":97},{"krate":0,"index":98}],"docs":"","sig":null,"attributes":[]},{"id":5,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15574,"byte_end":15584,"line_start":364,"line_end":364,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":100},{"krate":0,"index":101}],"docs":"","sig":null,"attributes":[]},{"id":6,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15941,"byte_end":15951,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":103}],"docs":"","sig":null,"attributes":[]},{"id":7,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16067,"byte_end":16082,"line_start":384,"line_end":384,"column_start":28,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":105}],"docs":"","sig":null,"attributes":[]},{"id":8,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16211,"byte_end":16226,"line_start":390,"line_end":390,"column_start":36,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":107}],"docs":"","sig":null,"attributes":[]},{"id":9,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16476,"byte_end":16492,"line_start":399,"line_end":399,"column_start":32,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":109}],"docs":"","sig":null,"attributes":[]},{"id":10,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16795,"byte_end":16805,"line_start":411,"line_end":411,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":113}],"docs":"","sig":null,"attributes":[]},{"id":11,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":17266,"byte_end":17276,"line_start":424,"line_end":424,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":115}],"docs":"","sig":null,"attributes":[]},{"id":12,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":17729,"byte_end":17745,"line_start":437,"line_end":437,"column_start":23,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":117}],"docs":"","sig":null,"attributes":[]},{"id":13,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":19367,"byte_end":19383,"line_start":480,"line_end":480,"column_start":16,"column_end":32},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":14,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":19411,"byte_end":19425,"line_start":482,"line_end":482,"column_start":23,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":120}],"docs":"","sig":null,"attributes":[]},{"id":15,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":20313,"byte_end":20327,"line_start":510,"line_end":510,"column_start":16,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":122}],"docs":"","sig":null,"attributes":[]},{"id":16,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":20532,"byte_end":20545,"line_start":519,"line_end":519,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":124}],"docs":"","sig":null,"attributes":[]},{"id":17,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":21006,"byte_end":21019,"line_start":537,"line_end":537,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":126}],"docs":"","sig":null,"attributes":[]},{"id":18,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":21224,"byte_end":21237,"line_start":546,"line_end":546,"column_start":23,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":128}],"docs":"","sig":null,"attributes":[]},{"id":19,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22062,"byte_end":22075,"line_start":573,"line_end":573,"column_start":16,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":130}],"docs":"","sig":null,"attributes":[]},{"id":20,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22280,"byte_end":22290,"line_start":582,"line_end":582,"column_start":23,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":132}],"docs":"","sig":null,"attributes":[]},{"id":21,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22673,"byte_end":22683,"line_start":592,"line_end":592,"column_start":16,"column_end":26},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":22,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22711,"byte_end":22726,"line_start":594,"line_end":594,"column_start":23,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":135}],"docs":"","sig":null,"attributes":[]},{"id":23,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":26170,"byte_end":26178,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":162},{"krate":0,"index":163},{"krate":0,"index":164},{"krate":0,"index":165},{"krate":0,"index":166},{"krate":0,"index":167},{"krate":0,"index":168},{"krate":0,"index":170},{"krate":0,"index":172},{"krate":0,"index":173},{"krate":0,"index":174}],"docs":"","sig":null,"attributes":[]},{"id":24,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63961,"byte_end":63968,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":306},{"krate":0,"index":307},{"krate":0,"index":308}],"docs":"","sig":null,"attributes":[]},{"id":25,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":64412,"byte_end":64420,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":310},{"krate":0,"index":311},{"krate":0,"index":312}],"docs":"","sig":null,"attributes":[]},{"id":26,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":79389,"byte_end":79401,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":369},{"krate":0,"index":370},{"krate":0,"index":371}],"docs":"","sig":null,"attributes":[]},{"id":27,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98218,"byte_end":98224,"line_start":67,"line_end":67,"column_start":15,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":444},{"krate":0,"index":445},{"krate":0,"index":446},{"krate":0,"index":447},{"krate":0,"index":448},{"krate":0,"index":449}],"docs":"","sig":null,"attributes":[]},{"id":28,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":99590,"byte_end":99596,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":451},{"krate":0,"index":453}],"docs":"","sig":null,"attributes":[]},{"id":29,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":100361,"byte_end":100367,"line_start":136,"line_end":136,"column_start":25,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":456},{"krate":0,"index":457},{"krate":0,"index":459},{"krate":0,"index":460},{"krate":0,"index":461}],"docs":"","sig":null,"attributes":[]},{"id":30,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\free_functions.rs","byte_start":114277,"byte_end":114287,"line_start":281,"line_end":281,"column_start":26,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":518}],"docs":"","sig":null,"attributes":[]},{"id":31,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":118210,"byte_end":118222,"line_start":109,"line_end":109,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":537},{"krate":0,"index":538},{"krate":0,"index":539},{"krate":0,"index":540},{"krate":0,"index":541},{"krate":0,"index":542},{"krate":0,"index":544},{"krate":0,"index":546},{"krate":0,"index":549},{"krate":0,"index":550},{"krate":0,"index":551},{"krate":0,"index":552},{"krate":0,"index":553},{"krate":0,"index":557},{"krate":0,"index":558}],"docs":"","sig":null,"attributes":[]},{"id":32,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":130817,"byte_end":130820,"line_start":422,"line_end":422,"column_start":6,"column_end":9},"value":"","parent":null,"children":[{"krate":0,"index":560},{"krate":0,"index":561},{"krate":0,"index":562}],"docs":"","sig":null,"attributes":[]},{"id":33,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":131078,"byte_end":131089,"line_start":437,"line_end":437,"column_start":14,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":565},{"krate":0,"index":566},{"krate":0,"index":567},{"krate":0,"index":568},{"krate":0,"index":570},{"krate":0,"index":572},{"krate":0,"index":574},{"krate":0,"index":577},{"krate":0,"index":579},{"krate":0,"index":581},{"krate":0,"index":583},{"krate":0,"index":585},{"krate":0,"index":587},{"krate":0,"index":589},{"krate":0,"index":591},{"krate":0,"index":593},{"krate":0,"index":596},{"krate":0,"index":597},{"krate":0,"index":598},{"krate":0,"index":599},{"krate":0,"index":600},{"krate":0,"index":601},{"krate":0,"index":602},{"krate":0,"index":603},{"krate":0,"index":604}],"docs":"","sig":null,"attributes":[]},{"id":34,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152821,"byte_end":152825,"line_start":972,"line_end":972,"column_start":24,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":608},{"krate":0,"index":609},{"krate":0,"index":610},{"krate":0,"index":611},{"krate":0,"index":612},{"krate":0,"index":613},{"krate":0,"index":614},{"krate":0,"index":615},{"krate":0,"index":616},{"krate":0,"index":617}],"docs":"","sig":null,"attributes":[]},{"id":35,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":158410,"byte_end":158417,"line_start":1105,"line_end":1105,"column_start":24,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":621},{"krate":0,"index":622},{"krate":0,"index":623},{"krate":0,"index":624},{"krate":0,"index":625},{"krate":0,"index":626},{"krate":0,"index":627},{"krate":0,"index":628},{"krate":0,"index":629}],"docs":"","sig":null,"attributes":[]},{"id":36,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":162793,"byte_end":162804,"line_start":1219,"line_end":1219,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":634},{"krate":0,"index":635}],"docs":"","sig":null,"attributes":[]},{"id":37,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":163413,"byte_end":163424,"line_start":1238,"line_end":1238,"column_start":43,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":639}],"docs":"","sig":null,"attributes":[]},{"id":38,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":164028,"byte_end":164032,"line_start":1256,"line_end":1256,"column_start":45,"column_end":49},"value":"","parent":null,"children":[{"krate":0,"index":644},{"krate":0,"index":645},{"krate":0,"index":646},{"krate":0,"index":647},{"krate":0,"index":648},{"krate":0,"index":649},{"krate":0,"index":652}],"docs":"","sig":null,"attributes":[]},{"id":39,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":165279,"byte_end":165286,"line_start":1301,"line_end":1301,"column_start":45,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":656},{"krate":0,"index":657},{"krate":0,"index":658},{"krate":0,"index":659},{"krate":0,"index":660},{"krate":0,"index":661},{"krate":0,"index":664}],"docs":"","sig":null,"attributes":[]},{"id":40,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":166553,"byte_end":166560,"line_start":1346,"line_end":1346,"column_start":41,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":668},{"krate":0,"index":669},{"krate":0,"index":670},{"krate":0,"index":671},{"krate":0,"index":672}],"docs":"","sig":null,"attributes":[]},{"id":41,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":167455,"byte_end":167465,"line_start":1375,"line_end":1375,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":674}],"docs":"","sig":null,"attributes":[]},{"id":42,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":167864,"byte_end":167874,"line_start":1386,"line_end":1386,"column_start":21,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":676}],"docs":"","sig":null,"attributes":[]},{"id":43,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":176586,"byte_end":176597,"line_start":98,"line_end":98,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":744},{"krate":0,"index":745}],"docs":"","sig":null,"attributes":[]},{"id":44,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":185101,"byte_end":185109,"line_start":362,"line_end":362,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":768},{"krate":0,"index":769}],"docs":"","sig":null,"attributes":[]},{"id":45,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":186567,"byte_end":186576,"line_start":408,"line_end":408,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":771}],"docs":"","sig":null,"attributes":[]},{"id":46,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":187852,"byte_end":187867,"line_start":463,"line_end":463,"column_start":32,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":813},{"krate":0,"index":814}],"docs":"","sig":null,"attributes":[]},{"id":47,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":189723,"byte_end":189733,"line_start":515,"line_end":515,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":817},{"krate":0,"index":818},{"krate":0,"index":819},{"krate":0,"index":820},{"krate":0,"index":822},{"krate":0,"index":823},{"krate":0,"index":824},{"krate":0,"index":825},{"krate":0,"index":826},{"krate":0,"index":827},{"krate":0,"index":828},{"krate":0,"index":829},{"krate":0,"index":832},{"krate":0,"index":833},{"krate":0,"index":834},{"krate":0,"index":836},{"krate":0,"index":838},{"krate":0,"index":841},{"krate":0,"index":843},{"krate":0,"index":846},{"krate":0,"index":848},{"krate":0,"index":849}],"docs":"","sig":null,"attributes":[]},{"id":48,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":220350,"byte_end":220359,"line_start":1292,"line_end":1292,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":857},{"krate":0,"index":858}],"docs":"","sig":null,"attributes":[]},{"id":49,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":220779,"byte_end":220789,"line_start":1306,"line_end":1306,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":862},{"krate":0,"index":863},{"krate":0,"index":864},{"krate":0,"index":865},{"krate":0,"index":866}],"docs":"","sig":null,"attributes":[]},{"id":50,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":221464,"byte_end":221474,"line_start":1331,"line_end":1331,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":870}],"docs":"","sig":null,"attributes":[]},{"id":51,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":222982,"byte_end":222992,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":897},{"krate":0,"index":898},{"krate":0,"index":899},{"krate":0,"index":900},{"krate":0,"index":901},{"krate":0,"index":902}],"docs":"","sig":null,"attributes":[]},{"id":52,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":230455,"byte_end":230465,"line_start":222,"line_end":222,"column_start":37,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":906}],"docs":"","sig":null,"attributes":[]},{"id":53,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":235561,"byte_end":235572,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":924}],"docs":"","sig":null,"attributes":[]},{"id":54,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":236313,"byte_end":236319,"line_start":67,"line_end":67,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":927}],"docs":"","sig":null,"attributes":[]},{"id":55,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":238028,"byte_end":238038,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":937}],"docs":"","sig":null,"attributes":[]},{"id":56,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":239089,"byte_end":239099,"line_start":147,"line_end":147,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":942},{"krate":0,"index":943},{"krate":0,"index":944},{"krate":0,"index":945},{"krate":0,"index":946},{"krate":0,"index":947}],"docs":"","sig":null,"attributes":[]},{"id":57,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240864,"byte_end":240874,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":967},{"krate":0,"index":968},{"krate":0,"index":969}],"docs":"","sig":null,"attributes":[]},{"id":58,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":241831,"byte_end":241841,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":979},{"krate":0,"index":980}],"docs":"","sig":null,"attributes":[]},{"id":59,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":243501,"byte_end":243511,"line_start":115,"line_end":115,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":984},{"krate":0,"index":985},{"krate":0,"index":986},{"krate":0,"index":987},{"krate":0,"index":988},{"krate":0,"index":989}],"docs":"","sig":null,"attributes":[]},{"id":60,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":244408,"byte_end":244418,"line_start":147,"line_end":147,"column_start":55,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":993}],"docs":"","sig":null,"attributes":[]},{"id":61,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245380,"byte_end":245389,"line_start":177,"line_end":177,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1003}],"docs":"","sig":null,"attributes":[]},{"id":62,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245649,"byte_end":245659,"line_start":189,"line_end":189,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1010},{"krate":0,"index":1011}],"docs":"","sig":null,"attributes":[]},{"id":63,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269346,"byte_end":269356,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1100}],"docs":"","sig":null,"attributes":[]},{"id":64,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269808,"byte_end":269817,"line_start":66,"line_end":66,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1108},{"krate":0,"index":1109}],"docs":"","sig":null,"attributes":[]},{"id":65,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":270230,"byte_end":270240,"line_start":80,"line_end":80,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1113},{"krate":0,"index":1114},{"krate":0,"index":1115},{"krate":0,"index":1116},{"krate":0,"index":1117}],"docs":"","sig":null,"attributes":[]},{"id":66,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":272937,"byte_end":272953,"line_start":154,"line_end":154,"column_start":15,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1128}],"docs":"","sig":null,"attributes":[]},{"id":67,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":273565,"byte_end":273581,"line_start":176,"line_end":176,"column_start":28,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1131},{"krate":0,"index":1132}],"docs":"","sig":null,"attributes":[]},{"id":68,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278555,"byte_end":278565,"line_start":304,"line_end":304,"column_start":49,"column_end":59},"value":"","parent":null,"children":[{"krate":0,"index":1138}],"docs":"","sig":null,"attributes":[]},{"id":69,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278828,"byte_end":278835,"line_start":316,"line_end":316,"column_start":16,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1145},{"krate":0,"index":1146},{"krate":0,"index":1147},{"krate":0,"index":1148},{"krate":0,"index":1150},{"krate":0,"index":1152},{"krate":0,"index":1154},{"krate":0,"index":1156}],"docs":"","sig":null,"attributes":[]},{"id":70,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":282315,"byte_end":282325,"line_start":417,"line_end":417,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1159}],"docs":"","sig":null,"attributes":[]},{"id":71,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":283557,"byte_end":283567,"line_start":25,"line_end":25,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1190},{"krate":0,"index":1191},{"krate":0,"index":1192}],"docs":"","sig":null,"attributes":[]},{"id":72,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":284848,"byte_end":284857,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1200},{"krate":0,"index":1201}],"docs":"","sig":null,"attributes":[]},{"id":73,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":285273,"byte_end":285283,"line_start":79,"line_end":79,"column_start":48,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":1205},{"krate":0,"index":1206},{"krate":0,"index":1207},{"krate":0,"index":1208},{"krate":0,"index":1209}],"docs":"","sig":null,"attributes":[]},{"id":74,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":285791,"byte_end":285801,"line_start":99,"line_end":99,"column_start":58,"column_end":68},"value":"","parent":null,"children":[{"krate":0,"index":1213}],"docs":"","sig":null,"attributes":[]},{"id":75,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286856,"byte_end":286866,"line_start":142,"line_end":142,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1222},{"krate":0,"index":1223},{"krate":0,"index":1225}],"docs":"","sig":null,"attributes":[]},{"id":76,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":289172,"byte_end":289182,"line_start":207,"line_end":207,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1231},{"krate":0,"index":1232},{"krate":0,"index":1234},{"krate":0,"index":1235},{"krate":0,"index":1236},{"krate":0,"index":1241},{"krate":0,"index":1243}],"docs":"","sig":null,"attributes":[]},{"id":77,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":294959,"byte_end":294969,"line_start":362,"line_end":362,"column_start":35,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":1247},{"krate":0,"index":1248},{"krate":0,"index":1249}],"docs":"","sig":null,"attributes":[]},{"id":78,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":295869,"byte_end":295892,"line_start":390,"line_end":390,"column_start":18,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":1261}],"docs":"","sig":null,"attributes":[]},{"id":79,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":296185,"byte_end":296208,"line_start":403,"line_end":403,"column_start":31,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":1264},{"krate":0,"index":1265},{"krate":0,"index":1266}],"docs":"","sig":null,"attributes":[]},{"id":80,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":297915,"byte_end":297938,"line_start":452,"line_end":452,"column_start":40,"column_end":63},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":81,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304683,"byte_end":304694,"line_start":640,"line_end":640,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":1288},{"krate":0,"index":1289}],"docs":"","sig":null,"attributes":[]},{"id":82,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":311257,"byte_end":311263,"line_start":805,"line_end":805,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1302}],"docs":"","sig":null,"attributes":[]},{"id":83,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":311533,"byte_end":311539,"line_start":813,"line_end":813,"column_start":46,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":1306}],"docs":"","sig":null,"attributes":[]},{"id":84,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":315311,"byte_end":315321,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1336},{"krate":0,"index":1337}],"docs":"","sig":null,"attributes":[]},{"id":85,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":317883,"byte_end":317894,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":1349}],"docs":"","sig":null,"attributes":[]},{"id":86,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":318020,"byte_end":318031,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1352},{"krate":0,"index":1353}],"docs":"","sig":null,"attributes":[]},{"id":87,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":318732,"byte_end":318752,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1361}],"docs":"","sig":null,"attributes":[]},{"id":88,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":319011,"byte_end":319031,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1364},{"krate":0,"index":1365}],"docs":"","sig":null,"attributes":[]},{"id":89,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":331723,"byte_end":331733,"line_start":44,"line_end":44,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":1415}],"docs":"","sig":null,"attributes":[]},{"id":90,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":334152,"byte_end":334160,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":1423},{"krate":0,"index":1424},{"krate":0,"index":1425},{"krate":0,"index":1426},{"krate":0,"index":1428},{"krate":0,"index":1431}],"docs":"","sig":null,"attributes":[]},{"id":91,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":335473,"byte_end":335482,"line_start":167,"line_end":167,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1440},{"krate":0,"index":1441}],"docs":"","sig":null,"attributes":[]},{"id":92,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":335902,"byte_end":335912,"line_start":181,"line_end":181,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":1445},{"krate":0,"index":1446},{"krate":0,"index":1447},{"krate":0,"index":1448},{"krate":0,"index":1449}],"docs":"","sig":null,"attributes":[]},{"id":93,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":340810,"byte_end":340820,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1469},{"krate":0,"index":1470}],"docs":"","sig":null,"attributes":[]},{"id":94,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":341814,"byte_end":341824,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1473}],"docs":"","sig":null,"attributes":[]},{"id":95,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":344325,"byte_end":344336,"line_start":16,"line_end":16,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1505}],"docs":"","sig":null,"attributes":[]},{"id":96,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":345045,"byte_end":345055,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":1513},{"krate":0,"index":1514}],"docs":"","sig":null,"attributes":[]},{"id":97,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":345468,"byte_end":345479,"line_start":52,"line_end":52,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":1518},{"krate":0,"index":1519},{"krate":0,"index":1520},{"krate":0,"index":1521},{"krate":0,"index":1522}],"docs":"","sig":null,"attributes":[]},{"id":98,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":347266,"byte_end":347275,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":1525}],"docs":"","sig":null,"attributes":[]},{"id":99,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":347533,"byte_end":347543,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1528}],"docs":"","sig":null,"attributes":[]},{"id":100,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":353669,"byte_end":353678,"line_start":168,"line_end":168,"column_start":25,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":1585},{"krate":0,"index":1586},{"krate":0,"index":1587},{"krate":0,"index":1588},{"krate":0,"index":1589},{"krate":0,"index":1590}],"docs":"","sig":null,"attributes":[]},{"id":101,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357307,"byte_end":357319,"line_start":309,"line_end":309,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":1592}],"docs":"","sig":null,"attributes":[]},{"id":102,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357657,"byte_end":357669,"line_start":321,"line_end":321,"column_start":18,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":1594}],"docs":"","sig":null,"attributes":[]},{"id":103,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":358245,"byte_end":358256,"line_start":346,"line_end":346,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":1609},{"krate":0,"index":1610},{"krate":0,"index":1612},{"krate":0,"index":1613},{"krate":0,"index":1614},{"krate":0,"index":1617}],"docs":"","sig":null,"attributes":[]},{"id":104,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":367594,"byte_end":367605,"line_start":635,"line_end":635,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":1627}],"docs":"","sig":null,"attributes":[]},{"id":105,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":385267,"byte_end":385276,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"value":"","parent":null,"children":[{"krate":0,"index":1687}],"docs":"","sig":null,"attributes":[]},{"id":106,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":386034,"byte_end":386043,"line_start":51,"line_end":51,"column_start":24,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":1690},{"krate":0,"index":1691}],"docs":"","sig":null,"attributes":[]},{"id":107,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":387298,"byte_end":387308,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1698}],"docs":"","sig":null,"attributes":[]},{"id":108,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":390686,"byte_end":390696,"line_start":155,"line_end":155,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1702},{"krate":0,"index":1703},{"krate":0,"index":1704},{"krate":0,"index":1705},{"krate":0,"index":1706},{"krate":0,"index":1712}],"docs":"","sig":null,"attributes":[]},{"id":109,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":392107,"byte_end":392117,"line_start":202,"line_end":202,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1718},{"krate":0,"index":1719}],"docs":"","sig":null,"attributes":[]},{"id":110,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":393609,"byte_end":393619,"line_start":232,"line_end":232,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1724}],"docs":"","sig":null,"attributes":[]},{"id":111,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":394854,"byte_end":394864,"line_start":264,"line_end":264,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":1731}],"docs":"","sig":null,"attributes":[]},{"id":112,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":402891,"byte_end":402900,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":1759},{"krate":0,"index":1760}],"docs":"","sig":null,"attributes":[]},{"id":113,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":404161,"byte_end":404170,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1763},{"krate":0,"index":1764}],"docs":"","sig":null,"attributes":[]},{"id":114,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":404796,"byte_end":404805,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":1767}],"docs":"","sig":null,"attributes":[]},{"id":115,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":407302,"byte_end":407312,"line_start":55,"line_end":55,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1828},{"krate":0,"index":1829},{"krate":0,"index":1830},{"krate":0,"index":1831},{"krate":0,"index":1832},{"krate":0,"index":1833}],"docs":"","sig":null,"attributes":[]},{"id":116,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":420506,"byte_end":420515,"line_start":412,"line_end":412,"column_start":32,"column_end":41},"value":"","parent":null,"children":[],"docs":"","sig":null,"attributes":[]},{"id":117,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":420644,"byte_end":420653,"line_start":416,"line_end":416,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":1865},{"krate":0,"index":1866}],"docs":"","sig":null,"attributes":[]},{"id":118,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":421066,"byte_end":421076,"line_start":430,"line_end":430,"column_start":45,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":1870},{"krate":0,"index":1871},{"krate":0,"index":1872},{"krate":0,"index":1873},{"krate":0,"index":1874},{"krate":0,"index":1875}],"docs":"","sig":null,"attributes":[]},{"id":119,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":422953,"byte_end":422963,"line_start":483,"line_end":483,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":1879},{"krate":0,"index":1881},{"krate":0,"index":1883}],"docs":"","sig":null,"attributes":[]},{"id":120,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":425436,"byte_end":425438,"line_start":552,"line_end":552,"column_start":17,"column_end":19},"value":"","parent":null,"children":[{"krate":0,"index":1893},{"krate":0,"index":1894},{"krate":0,"index":1895}],"docs":"","sig":null,"attributes":[]},{"id":121,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":426103,"byte_end":426106,"line_start":579,"line_end":579,"column_start":17,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":1898},{"krate":0,"index":1899},{"krate":0,"index":1900}],"docs":"","sig":null,"attributes":[]},{"id":122,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":427378,"byte_end":427384,"line_start":618,"line_end":618,"column_start":17,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":1902},{"krate":0,"index":1903},{"krate":0,"index":1904}],"docs":"","sig":null,"attributes":[]},{"id":123,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":429077,"byte_end":429082,"line_start":674,"line_end":674,"column_start":17,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":1907},{"krate":0,"index":1908},{"krate":0,"index":1910}],"docs":"","sig":null,"attributes":[]},{"id":124,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":429994,"byte_end":430006,"line_start":706,"line_end":706,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1912}],"docs":"","sig":null,"attributes":[]},{"id":125,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430131,"byte_end":430144,"line_start":712,"line_end":712,"column_start":31,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":1914}],"docs":"","sig":null,"attributes":[]},{"id":126,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430524,"byte_end":430536,"line_start":724,"line_end":724,"column_start":31,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":1916}],"docs":"","sig":null,"attributes":[]},{"id":127,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430912,"byte_end":430927,"line_start":736,"line_end":736,"column_start":31,"column_end":46},"value":"","parent":null,"children":[{"krate":0,"index":1918}],"docs":"","sig":null,"attributes":[]},{"id":128,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":446926,"byte_end":446936,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":1992},{"krate":0,"index":1993},{"krate":0,"index":1994},{"krate":0,"index":1995},{"krate":0,"index":1996},{"krate":0,"index":1999},{"krate":0,"index":2000},{"krate":0,"index":2001}],"docs":"","sig":null,"attributes":[]},{"id":129,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":454532,"byte_end":454542,"line_start":276,"line_end":276,"column_start":33,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2004}],"docs":"","sig":null,"attributes":[]},{"id":130,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":454775,"byte_end":454793,"line_start":288,"line_end":288,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2007}],"docs":"","sig":null,"attributes":[]},{"id":131,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":455744,"byte_end":455759,"line_start":317,"line_end":317,"column_start":10,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2012}],"docs":"","sig":null,"attributes":[]},{"id":132,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":456300,"byte_end":456317,"line_start":338,"line_end":338,"column_start":10,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2015}],"docs":"","sig":null,"attributes":[]},{"id":133,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":460046,"byte_end":460064,"line_start":426,"line_end":426,"column_start":10,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2018}],"docs":"","sig":null,"attributes":[]},{"id":134,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":462435,"byte_end":462448,"line_start":487,"line_end":487,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2021},{"krate":0,"index":2022}],"docs":"","sig":null,"attributes":[]},{"id":135,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":462759,"byte_end":462771,"line_start":500,"line_end":500,"column_start":10,"column_end":22},"value":"","parent":null,"children":[{"krate":0,"index":2029},{"krate":0,"index":2031}],"docs":"","sig":null,"attributes":[]},{"id":136,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":464188,"byte_end":464199,"line_start":545,"line_end":545,"column_start":10,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":2035},{"krate":0,"index":2036},{"krate":0,"index":2039}],"docs":"","sig":null,"attributes":[]},{"id":137,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":465910,"byte_end":465921,"line_start":599,"line_end":599,"column_start":29,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2042}],"docs":"","sig":null,"attributes":[]},{"id":138,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":466040,"byte_end":466051,"line_start":605,"line_end":605,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2045}],"docs":"","sig":null,"attributes":[]},{"id":139,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":466152,"byte_end":466165,"line_start":611,"line_end":611,"column_start":10,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2048}],"docs":"","sig":null,"attributes":[]},{"id":140,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":471083,"byte_end":471093,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2069},{"krate":0,"index":2071}],"docs":"","sig":null,"attributes":[]},{"id":141,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":472063,"byte_end":472072,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2073},{"krate":0,"index":2074},{"krate":0,"index":2075},{"krate":0,"index":2076},{"krate":0,"index":2077},{"krate":0,"index":2078},{"krate":0,"index":2079},{"krate":0,"index":2080},{"krate":0,"index":2081}],"docs":"","sig":null,"attributes":[]},{"id":142,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478252,"byte_end":478261,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2083}],"docs":"","sig":null,"attributes":[]},{"id":143,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478454,"byte_end":478463,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":2085}],"docs":"","sig":null,"attributes":[]},{"id":144,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478657,"byte_end":478666,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":2087}],"docs":"","sig":null,"attributes":[]},{"id":145,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478861,"byte_end":478870,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2089}],"docs":"","sig":null,"attributes":[]},{"id":146,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":479835,"byte_end":479844,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2133},{"krate":0,"index":2134},{"krate":0,"index":2135},{"krate":0,"index":2136}],"docs":"","sig":null,"attributes":[]},{"id":147,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":481689,"byte_end":481695,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"value":"","parent":null,"children":[{"krate":0,"index":2138},{"krate":0,"index":2139}],"docs":"","sig":null,"attributes":[]},{"id":148,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":482964,"byte_end":482972,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2145},{"krate":0,"index":2146}],"docs":"","sig":null,"attributes":[]},{"id":149,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":484089,"byte_end":484099,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":2162},{"krate":0,"index":2163},{"krate":0,"index":2164},{"krate":0,"index":2165},{"krate":0,"index":2166},{"krate":0,"index":2167},{"krate":0,"index":2168},{"krate":0,"index":2170},{"krate":0,"index":2171},{"krate":0,"index":2172},{"krate":0,"index":2173},{"krate":0,"index":2174},{"krate":0,"index":2175},{"krate":0,"index":2176}],"docs":"","sig":null,"attributes":[]},{"id":150,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":494541,"byte_end":494551,"line_start":468,"line_end":468,"column_start":52,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2180},{"krate":0,"index":2181},{"krate":0,"index":2182},{"krate":0,"index":2183},{"krate":0,"index":2184},{"krate":0,"index":2185}],"docs":"","sig":null,"attributes":[]},{"id":151,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":496250,"byte_end":496259,"line_start":524,"line_end":524,"column_start":31,"column_end":40},"value":"","parent":null,"children":[{"krate":0,"index":2192}],"docs":"","sig":null,"attributes":[]},{"id":152,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":497265,"byte_end":497276,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"value":"","parent":null,"children":[{"krate":0,"index":2225}],"docs":"","sig":null,"attributes":[]},{"id":153,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":498819,"byte_end":498829,"line_start":67,"line_end":67,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2227}],"docs":"","sig":null,"attributes":[]},{"id":154,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":499394,"byte_end":499404,"line_start":80,"line_end":80,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2235},{"krate":0,"index":2236}],"docs":"","sig":null,"attributes":[]},{"id":155,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":499824,"byte_end":499835,"line_start":94,"line_end":94,"column_start":52,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2240},{"krate":0,"index":2241},{"krate":0,"index":2242},{"krate":0,"index":2243},{"krate":0,"index":2244}],"docs":"","sig":null,"attributes":[]},{"id":156,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":501263,"byte_end":501274,"line_start":140,"line_end":140,"column_start":23,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2252},{"krate":0,"index":2253}],"docs":"","sig":null,"attributes":[]},{"id":157,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":502682,"byte_end":502693,"line_start":165,"line_end":165,"column_start":40,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2256}],"docs":"","sig":null,"attributes":[]},{"id":158,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":503571,"byte_end":503582,"line_start":24,"line_end":24,"column_start":15,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2285},{"krate":0,"index":2286},{"krate":0,"index":2287},{"krate":0,"index":2288},{"krate":0,"index":2289}],"docs":"","sig":null,"attributes":[]},{"id":159,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":505739,"byte_end":505749,"line_start":104,"line_end":104,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2297},{"krate":0,"index":2298}],"docs":"","sig":null,"attributes":[]},{"id":160,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":506162,"byte_end":506173,"line_start":118,"line_end":118,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2302},{"krate":0,"index":2303},{"krate":0,"index":2304},{"krate":0,"index":2305},{"krate":0,"index":2306}],"docs":"","sig":null,"attributes":[]},{"id":161,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":535064,"byte_end":535074,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2396},{"krate":0,"index":2397},{"krate":0,"index":2398},{"krate":0,"index":2399},{"krate":0,"index":2400},{"krate":0,"index":2401},{"krate":0,"index":2402}],"docs":"","sig":null,"attributes":[]},{"id":162,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":539476,"byte_end":539486,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"value":"","parent":null,"children":[{"krate":0,"index":2428},{"krate":0,"index":2431},{"krate":0,"index":2432},{"krate":0,"index":2433},{"krate":0,"index":2436},{"krate":0,"index":2437},{"krate":0,"index":2438},{"krate":0,"index":2440},{"krate":0,"index":2444},{"krate":0,"index":2445},{"krate":0,"index":2446},{"krate":0,"index":2450}],"docs":"","sig":null,"attributes":[]},{"id":163,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":560479,"byte_end":560487,"line_start":1521,"line_end":1521,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":2453},{"krate":0,"index":2454}],"docs":"","sig":null,"attributes":[]},{"id":164,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561104,"byte_end":561112,"line_start":1544,"line_end":1544,"column_start":18,"column_end":26},"value":"","parent":null,"children":[{"krate":0,"index":2456}],"docs":"","sig":null,"attributes":[]},{"id":165,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561177,"byte_end":561187,"line_start":1550,"line_end":1550,"column_start":6,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2458}],"docs":"","sig":null,"attributes":[]},{"id":166,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561476,"byte_end":561486,"line_start":1562,"line_end":1562,"column_start":18,"column_end":28},"value":"","parent":null,"children":[{"krate":0,"index":2460}],"docs":"","sig":null,"attributes":[]},{"id":167,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561553,"byte_end":561562,"line_start":1568,"line_end":1568,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2462}],"docs":"","sig":null,"attributes":[]},{"id":168,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":562099,"byte_end":562108,"line_start":1586,"line_end":1586,"column_start":18,"column_end":27},"value":"","parent":null,"children":[{"krate":0,"index":2464}],"docs":"","sig":null,"attributes":[]},{"id":169,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":576817,"byte_end":576823,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"value":"","parent":null,"children":[{"krate":0,"index":2502},{"krate":0,"index":2503}],"docs":"","sig":null,"attributes":[]},{"id":170,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577413,"byte_end":577419,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"value":"","parent":null,"children":[{"krate":0,"index":2506},{"krate":0,"index":2507}],"docs":"","sig":null,"attributes":[]},{"id":171,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577938,"byte_end":577943,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2509},{"krate":0,"index":2510},{"krate":0,"index":2511},{"krate":0,"index":2512},{"krate":0,"index":2513},{"krate":0,"index":2514},{"krate":0,"index":2515}],"docs":"","sig":null,"attributes":[]},{"id":172,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578892,"byte_end":578897,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"value":"","parent":null,"children":[{"krate":0,"index":2517},{"krate":0,"index":2518},{"krate":0,"index":2520},{"krate":0,"index":2521},{"krate":0,"index":2522},{"krate":0,"index":2523}],"docs":"","sig":null,"attributes":[]},{"id":173,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":584933,"byte_end":584941,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2530}],"docs":"","sig":null,"attributes":[]},{"id":174,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593642,"byte_end":593648,"line_start":179,"line_end":179,"column_start":38,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2618},{"krate":0,"index":2619}],"docs":"","sig":null,"attributes":[]},{"id":175,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593892,"byte_end":593898,"line_start":191,"line_end":191,"column_start":47,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2624}],"docs":"","sig":null,"attributes":[]},{"id":176,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594047,"byte_end":594053,"line_start":200,"line_end":200,"column_start":49,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2628}],"docs":"","sig":null,"attributes":[]},{"id":177,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594423,"byte_end":594432,"line_start":218,"line_end":218,"column_start":38,"column_end":47},"value":"","parent":null,"children":[{"krate":0,"index":2637},{"krate":0,"index":2638}],"docs":"","sig":null,"attributes":[]},{"id":178,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594688,"byte_end":594697,"line_start":230,"line_end":230,"column_start":47,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2643}],"docs":"","sig":null,"attributes":[]},{"id":179,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594846,"byte_end":594855,"line_start":239,"line_end":239,"column_start":49,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2647}],"docs":"","sig":null,"attributes":[]},{"id":180,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595259,"byte_end":595263,"line_start":259,"line_end":259,"column_start":38,"column_end":42},"value":"","parent":null,"children":[{"krate":0,"index":2656},{"krate":0,"index":2657}],"docs":"","sig":null,"attributes":[]},{"id":181,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595586,"byte_end":595590,"line_start":273,"line_end":273,"column_start":47,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2662}],"docs":"","sig":null,"attributes":[]},{"id":182,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595739,"byte_end":595743,"line_start":282,"line_end":282,"column_start":49,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2666}],"docs":"","sig":null,"attributes":[]},{"id":183,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596198,"byte_end":596205,"line_start":302,"line_end":302,"column_start":38,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":2675},{"krate":0,"index":2676}],"docs":"","sig":null,"attributes":[]},{"id":184,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596541,"byte_end":596548,"line_start":316,"line_end":316,"column_start":47,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2681}],"docs":"","sig":null,"attributes":[]},{"id":185,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596697,"byte_end":596704,"line_start":325,"line_end":325,"column_start":49,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2685}],"docs":"","sig":null,"attributes":[]},{"id":186,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597200,"byte_end":597215,"line_start":348,"line_end":348,"column_start":38,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2697},{"krate":0,"index":2698}],"docs":"","sig":null,"attributes":[]},{"id":187,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597618,"byte_end":597633,"line_start":366,"line_end":366,"column_start":47,"column_end":62},"value":"","parent":null,"children":[{"krate":0,"index":2703}],"docs":"","sig":null,"attributes":[]},{"id":188,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597945,"byte_end":597958,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"value":"","parent":null,"children":[{"krate":0,"index":2713},{"krate":0,"index":2714}],"docs":"","sig":null,"attributes":[]},{"id":189,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":598496,"byte_end":598509,"line_start":409,"line_end":409,"column_start":47,"column_end":60},"value":"","parent":null,"children":[{"krate":0,"index":2719}],"docs":"","sig":null,"attributes":[]},{"id":190,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":598845,"byte_end":598863,"line_start":429,"line_end":429,"column_start":38,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2730},{"krate":0,"index":2731}],"docs":"","sig":null,"attributes":[]},{"id":191,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":599274,"byte_end":599292,"line_start":447,"line_end":447,"column_start":47,"column_end":65},"value":"","parent":null,"children":[{"krate":0,"index":2736}],"docs":"","sig":null,"attributes":[]},{"id":192,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":599610,"byte_end":599626,"line_start":466,"line_end":466,"column_start":38,"column_end":54},"value":"","parent":null,"children":[{"krate":0,"index":2746},{"krate":0,"index":2747}],"docs":"","sig":null,"attributes":[]},{"id":193,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":600173,"byte_end":600189,"line_start":490,"line_end":490,"column_start":47,"column_end":63},"value":"","parent":null,"children":[{"krate":0,"index":2752}],"docs":"","sig":null,"attributes":[]},{"id":194,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":600691,"byte_end":600702,"line_start":512,"line_end":512,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2756},{"krate":0,"index":2757},{"krate":0,"index":2758},{"krate":0,"index":2759},{"krate":0,"index":2760},{"krate":0,"index":2761},{"krate":0,"index":2762},{"krate":0,"index":2763},{"krate":0,"index":2764},{"krate":0,"index":2765},{"krate":0,"index":2766},{"krate":0,"index":2768},{"krate":0,"index":2771},{"krate":0,"index":2772},{"krate":0,"index":2773},{"krate":0,"index":2774},{"krate":0,"index":2775}],"docs":"","sig":null,"attributes":[]},{"id":195,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":606343,"byte_end":606354,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2779},{"krate":0,"index":2780},{"krate":0,"index":2781},{"krate":0,"index":2782},{"krate":0,"index":2783},{"krate":0,"index":2784}],"docs":"","sig":null,"attributes":[]},{"id":196,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":608524,"byte_end":608535,"line_start":748,"line_end":748,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2788}],"docs":"","sig":null,"attributes":[]},{"id":197,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":609187,"byte_end":609198,"line_start":773,"line_end":773,"column_start":20,"column_end":31},"value":"","parent":null,"children":[{"krate":0,"index":2793}],"docs":"","sig":null,"attributes":[]},{"id":198,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":609941,"byte_end":609952,"line_start":800,"line_end":800,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2798},{"krate":0,"index":2799}],"docs":"","sig":null,"attributes":[]},{"id":199,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610216,"byte_end":610227,"line_start":813,"line_end":813,"column_start":33,"column_end":44},"value":"","parent":null,"children":[{"krate":0,"index":2803}],"docs":"","sig":null,"attributes":[]},{"id":200,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610493,"byte_end":610504,"line_start":824,"line_end":824,"column_start":42,"column_end":53},"value":"","parent":null,"children":[{"krate":0,"index":2807},{"krate":0,"index":2808}],"docs":"","sig":null,"attributes":[]},{"id":201,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610775,"byte_end":610786,"line_start":837,"line_end":837,"column_start":45,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2812}],"docs":"","sig":null,"attributes":[]},{"id":202,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":611047,"byte_end":611058,"line_start":848,"line_end":848,"column_start":30,"column_end":41},"value":"","parent":null,"children":[{"krate":0,"index":2816}],"docs":"","sig":null,"attributes":[]},{"id":203,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":611417,"byte_end":611428,"line_start":863,"line_end":863,"column_start":41,"column_end":52},"value":"","parent":null,"children":[{"krate":0,"index":2820},{"krate":0,"index":2821},{"krate":0,"index":2822},{"krate":0,"index":2823},{"krate":0,"index":2824},{"krate":0,"index":2825},{"krate":0,"index":2826}],"docs":"","sig":null,"attributes":[]},{"id":204,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":612252,"byte_end":612263,"line_start":896,"line_end":896,"column_start":37,"column_end":48},"value":"","parent":null,"children":[{"krate":0,"index":2830},{"krate":0,"index":2831},{"krate":0,"index":2832},{"krate":0,"index":2833},{"krate":0,"index":2834},{"krate":0,"index":2835},{"krate":0,"index":2836}],"docs":"","sig":null,"attributes":[]},{"id":205,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":615848,"byte_end":615859,"line_start":988,"line_end":988,"column_start":26,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2841},{"krate":0,"index":2842},{"krate":0,"index":2843},{"krate":0,"index":2845},{"krate":0,"index":2846}],"docs":"","sig":null,"attributes":[]},{"id":206,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":618293,"byte_end":618302,"line_start":1066,"line_end":1066,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2851}],"docs":"","sig":null,"attributes":[]},{"id":207,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":619700,"byte_end":619711,"line_start":1104,"line_end":1104,"column_start":67,"column_end":78},"value":"","parent":null,"children":[{"krate":0,"index":2859}],"docs":"","sig":null,"attributes":[]},{"id":208,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628668,"byte_end":628677,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"value":"","parent":null,"children":[{"krate":0,"index":2881},{"krate":0,"index":2882},{"krate":0,"index":2883}],"docs":"","sig":null,"attributes":[]},{"id":209,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630684,"byte_end":630701,"line_start":106,"line_end":106,"column_start":6,"column_end":23},"value":"","parent":null,"children":[{"krate":0,"index":2885}],"docs":"","sig":null,"attributes":[]},{"id":210,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":631989,"byte_end":632006,"line_start":140,"line_end":140,"column_start":26,"column_end":43},"value":"","parent":null,"children":[{"krate":0,"index":2887}],"docs":"","sig":null,"attributes":[]},{"id":211,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":638102,"byte_end":638103,"line_start":346,"line_end":346,"column_start":32,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":2894}],"docs":"","sig":null,"attributes":[]},{"id":212,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":638541,"byte_end":638542,"line_start":360,"line_end":360,"column_start":29,"column_end":30},"value":"","parent":null,"children":[{"krate":0,"index":2901}],"docs":"","sig":null,"attributes":[]},{"id":213,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":639798,"byte_end":639802,"line_start":404,"line_end":404,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2912}],"docs":"","sig":null,"attributes":[]},{"id":214,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640031,"byte_end":640035,"line_start":412,"line_end":412,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2915}],"docs":"","sig":null,"attributes":[]},{"id":215,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640263,"byte_end":640267,"line_start":420,"line_end":420,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2918}],"docs":"","sig":null,"attributes":[]},{"id":216,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640492,"byte_end":640496,"line_start":428,"line_end":428,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2921}],"docs":"","sig":null,"attributes":[]},{"id":217,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640723,"byte_end":640727,"line_start":436,"line_end":436,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2924}],"docs":"","sig":null,"attributes":[]},{"id":218,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640875,"byte_end":640879,"line_start":443,"line_end":443,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2926}],"docs":"","sig":null,"attributes":[]},{"id":219,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641123,"byte_end":641127,"line_start":452,"line_end":452,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2928}],"docs":"","sig":null,"attributes":[]},{"id":220,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641371,"byte_end":641375,"line_start":461,"line_end":461,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2930}],"docs":"","sig":null,"attributes":[]},{"id":221,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641561,"byte_end":641565,"line_start":468,"line_end":468,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2932}],"docs":"","sig":null,"attributes":[]},{"id":222,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641751,"byte_end":641755,"line_start":475,"line_end":475,"column_start":32,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2934}],"docs":"","sig":null,"attributes":[]},{"id":223,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641992,"byte_end":641997,"line_start":485,"line_end":485,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2937}],"docs":"","sig":null,"attributes":[]},{"id":224,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642259,"byte_end":642264,"line_start":494,"line_end":494,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2940}],"docs":"","sig":null,"attributes":[]},{"id":225,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642525,"byte_end":642530,"line_start":503,"line_end":503,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2943}],"docs":"","sig":null,"attributes":[]},{"id":226,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642795,"byte_end":642800,"line_start":512,"line_end":512,"column_start":52,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2946}],"docs":"","sig":null,"attributes":[]},{"id":227,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643066,"byte_end":643071,"line_start":521,"line_end":521,"column_start":53,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2949}],"docs":"","sig":null,"attributes":[]},{"id":228,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643284,"byte_end":643289,"line_start":529,"line_end":529,"column_start":32,"column_end":37},"value":"","parent":null,"children":[{"krate":0,"index":2951}],"docs":"","sig":null,"attributes":[]},{"id":229,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643589,"byte_end":643594,"line_start":539,"line_end":539,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":2953}],"docs":"","sig":null,"attributes":[]},{"id":230,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643937,"byte_end":643941,"line_start":552,"line_end":552,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2956}],"docs":"","sig":null,"attributes":[]},{"id":231,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644242,"byte_end":644246,"line_start":563,"line_end":563,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2959}],"docs":"","sig":null,"attributes":[]},{"id":232,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644548,"byte_end":644552,"line_start":574,"line_end":574,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2962}],"docs":"","sig":null,"attributes":[]},{"id":233,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644853,"byte_end":644857,"line_start":585,"line_end":585,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2965}],"docs":"","sig":null,"attributes":[]},{"id":234,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645158,"byte_end":645162,"line_start":596,"line_end":596,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2968}],"docs":"","sig":null,"attributes":[]},{"id":235,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645439,"byte_end":645443,"line_start":607,"line_end":607,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":2970}],"docs":"","sig":null,"attributes":[]},{"id":236,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645805,"byte_end":645809,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":2972}],"docs":"","sig":null,"attributes":[]},{"id":237,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646206,"byte_end":646210,"line_start":632,"line_end":632,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2975}],"docs":"","sig":null,"attributes":[]},{"id":238,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646511,"byte_end":646515,"line_start":643,"line_end":643,"column_start":52,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2978}],"docs":"","sig":null,"attributes":[]},{"id":239,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646817,"byte_end":646821,"line_start":654,"line_end":654,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2981}],"docs":"","sig":null,"attributes":[]},{"id":240,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647122,"byte_end":647126,"line_start":665,"line_end":665,"column_start":54,"column_end":58},"value":"","parent":null,"children":[{"krate":0,"index":2984}],"docs":"","sig":null,"attributes":[]},{"id":241,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647427,"byte_end":647431,"line_start":676,"line_end":676,"column_start":53,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2987}],"docs":"","sig":null,"attributes":[]},{"id":242,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647755,"byte_end":647758,"line_start":690,"line_end":690,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2990}],"docs":"","sig":null,"attributes":[]},{"id":243,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648027,"byte_end":648030,"line_start":700,"line_end":700,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":2993}],"docs":"","sig":null,"attributes":[]},{"id":244,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648298,"byte_end":648301,"line_start":710,"line_end":710,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":2996}],"docs":"","sig":null,"attributes":[]},{"id":245,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648566,"byte_end":648569,"line_start":720,"line_end":720,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":2999}],"docs":"","sig":null,"attributes":[]},{"id":246,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648833,"byte_end":648836,"line_start":730,"line_end":730,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3002}],"docs":"","sig":null,"attributes":[]},{"id":247,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649074,"byte_end":649077,"line_start":740,"line_end":740,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3004}],"docs":"","sig":null,"attributes":[]},{"id":248,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649302,"byte_end":649305,"line_start":748,"line_end":748,"column_start":29,"column_end":32},"value":"","parent":null,"children":[{"krate":0,"index":3006}],"docs":"","sig":null,"attributes":[]},{"id":249,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649578,"byte_end":649581,"line_start":759,"line_end":759,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3009}],"docs":"","sig":null,"attributes":[]},{"id":250,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649849,"byte_end":649852,"line_start":769,"line_end":769,"column_start":52,"column_end":55},"value":"","parent":null,"children":[{"krate":0,"index":3012}],"docs":"","sig":null,"attributes":[]},{"id":251,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650117,"byte_end":650120,"line_start":780,"line_end":780,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3015}],"docs":"","sig":null,"attributes":[]},{"id":252,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650390,"byte_end":650393,"line_start":790,"line_end":790,"column_start":54,"column_end":57},"value":"","parent":null,"children":[{"krate":0,"index":3018}],"docs":"","sig":null,"attributes":[]},{"id":253,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650657,"byte_end":650660,"line_start":800,"line_end":800,"column_start":53,"column_end":56},"value":"","parent":null,"children":[{"krate":0,"index":3021}],"docs":"","sig":null,"attributes":[]},{"id":254,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":652326,"byte_end":652331,"line_start":854,"line_end":854,"column_start":30,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3027}],"docs":"","sig":null,"attributes":[]},{"id":255,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":653336,"byte_end":653340,"line_start":887,"line_end":887,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3030}],"docs":"","sig":null,"attributes":[]},{"id":256,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":653450,"byte_end":653454,"line_start":893,"line_end":893,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3033}],"docs":"","sig":null,"attributes":[]},{"id":257,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":655662,"byte_end":655666,"line_start":951,"line_end":951,"column_start":30,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3036}],"docs":"","sig":null,"attributes":[]},{"id":258,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":657872,"byte_end":657875,"line_start":1007,"line_end":1007,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3039}],"docs":"","sig":null,"attributes":[]},{"id":259,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":657984,"byte_end":657987,"line_start":1013,"line_end":1013,"column_start":30,"column_end":33},"value":"","parent":null,"children":[{"krate":0,"index":3042}],"docs":"","sig":null,"attributes":[]},{"id":260,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658206,"byte_end":658211,"line_start":1026,"line_end":1026,"column_start":31,"column_end":36},"value":"","parent":null,"children":[{"krate":0,"index":3047}],"docs":"","sig":null,"attributes":[]},{"id":261,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658384,"byte_end":658388,"line_start":1035,"line_end":1035,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3050}],"docs":"","sig":null,"attributes":[]},{"id":262,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658576,"byte_end":658580,"line_start":1046,"line_end":1046,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3053}],"docs":"","sig":null,"attributes":[]},{"id":263,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658793,"byte_end":658797,"line_start":1057,"line_end":1057,"column_start":31,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3056}],"docs":"","sig":null,"attributes":[]},{"id":264,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":659010,"byte_end":659013,"line_start":1068,"line_end":1068,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3059}],"docs":"","sig":null,"attributes":[]},{"id":265,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":659275,"byte_end":659278,"line_start":1082,"line_end":1082,"column_start":31,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3062}],"docs":"","sig":null,"attributes":[]},{"id":266,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":670579,"byte_end":670591,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"value":"","parent":null,"children":[{"krate":0,"index":3106},{"krate":0,"index":3107},{"krate":0,"index":3108},{"krate":0,"index":3109},{"krate":0,"index":3110},{"krate":0,"index":3111},{"krate":0,"index":3112},{"krate":0,"index":3113},{"krate":0,"index":3114},{"krate":0,"index":3115},{"krate":0,"index":3116},{"krate":0,"index":3119},{"krate":0,"index":3120},{"krate":0,"index":3121},{"krate":0,"index":3122},{"krate":0,"index":3123},{"krate":0,"index":3124},{"krate":0,"index":3125},{"krate":0,"index":3126},{"krate":0,"index":3127},{"krate":0,"index":3128},{"krate":0,"index":3129},{"krate":0,"index":3130},{"krate":0,"index":3131},{"krate":0,"index":3132},{"krate":0,"index":3133},{"krate":0,"index":3134},{"krate":0,"index":3135},{"krate":0,"index":3136},{"krate":0,"index":3137},{"krate":0,"index":3138},{"krate":0,"index":3139},{"krate":0,"index":3140},{"krate":0,"index":3141},{"krate":0,"index":3142},{"krate":0,"index":3143},{"krate":0,"index":3144},{"krate":0,"index":3145},{"krate":0,"index":3146},{"krate":0,"index":3147},{"krate":0,"index":3148},{"krate":0,"index":3149},{"krate":0,"index":3150},{"krate":0,"index":3151},{"krate":0,"index":3152},{"krate":0,"index":3153},{"krate":0,"index":3154},{"krate":0,"index":3155},{"krate":0,"index":3156},{"krate":0,"index":3157},{"krate":0,"index":3158},{"krate":0,"index":3159},{"krate":0,"index":3160},{"krate":0,"index":3161},{"krate":0,"index":3162},{"krate":0,"index":3163},{"krate":0,"index":3164},{"krate":0,"index":3165},{"krate":0,"index":3166},{"krate":0,"index":3167},{"krate":0,"index":3168},{"krate":0,"index":3169},{"krate":0,"index":3170},{"krate":0,"index":3171},{"krate":0,"index":3172},{"krate":0,"index":3173},{"krate":0,"index":3174},{"krate":0,"index":3177},{"krate":0,"index":3179}],"docs":"","sig":null,"attributes":[]},{"id":267,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":694062,"byte_end":694074,"line_start":786,"line_end":786,"column_start":27,"column_end":39},"value":"","parent":null,"children":[{"krate":0,"index":3182},{"krate":0,"index":3183},{"krate":0,"index":3184},{"krate":0,"index":3185},{"krate":0,"index":3186},{"krate":0,"index":3187}],"docs":"","sig":null,"attributes":[]},{"id":268,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":694607,"byte_end":694619,"line_start":808,"line_end":808,"column_start":23,"column_end":35},"value":"","parent":null,"children":[{"krate":0,"index":3189},{"krate":0,"index":3190},{"krate":0,"index":3191},{"krate":0,"index":3192},{"krate":0,"index":3193}],"docs":"","sig":null,"attributes":[]},{"id":269,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708549,"byte_end":708560,"line_start":59,"line_end":59,"column_start":6,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3231}],"docs":"","sig":null,"attributes":[]},{"id":270,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709886,"byte_end":709903,"line_start":104,"line_end":104,"column_start":28,"column_end":45},"value":"","parent":null,"children":[{"krate":0,"index":3234}],"docs":"","sig":null,"attributes":[]},{"id":271,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":711022,"byte_end":711037,"line_start":138,"line_end":138,"column_start":6,"column_end":21},"value":"","parent":null,"children":[{"krate":0,"index":3242},{"krate":0,"index":3243}],"docs":"","sig":null,"attributes":[]},{"id":272,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718332,"byte_end":718340,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"value":"","parent":null,"children":[{"krate":0,"index":3258},{"krate":0,"index":3259},{"krate":0,"index":3260}],"docs":"","sig":null,"attributes":[]},{"id":273,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":724237,"byte_end":724243,"line_start":486,"line_end":486,"column_start":44,"column_end":50},"value":"","parent":null,"children":[{"krate":0,"index":3296},{"krate":0,"index":3297}],"docs":"","sig":null,"attributes":[]},{"id":274,"kind":"Inherent","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":732296,"byte_end":732304,"line_start":722,"line_end":722,"column_start":9,"column_end":17},"value":"","parent":null,"children":[{"krate":0,"index":3336},{"krate":0,"index":3337},{"krate":0,"index":3338}],"docs":"","sig":null,"attributes":[]},{"id":275,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":733441,"byte_end":733449,"line_start":763,"line_end":763,"column_start":30,"column_end":38},"value":"","parent":null,"children":[{"krate":0,"index":3341},{"krate":0,"index":3342},{"krate":0,"index":3343},{"krate":0,"index":3344},{"krate":0,"index":3345},{"krate":0,"index":3346},{"krate":0,"index":3347}],"docs":"","sig":null,"attributes":[]},{"id":276,"kind":"Direct","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":734270,"byte_end":734278,"line_start":795,"line_end":795,"column_start":26,"column_end":34},"value":"","parent":null,"children":[{"krate":0,"index":3350},{"krate":0,"index":3351},{"krate":0,"index":3352},{"krate":0,"index":3353},{"krate":0,"index":3354},{"krate":0,"index":3355}],"docs":"","sig":null,"attributes":[]}],"refs":[{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1795,"byte_end":1800,"line_start":67,"line_end":67,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":63}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1825,"byte_end":1829,"line_start":70,"line_end":70,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":136}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\mod.rs","byte_start":23660,"byte_end":23662,"line_start":2,"line_end":2,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":137}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\mod.rs","byte_start":23672,"byte_end":23677,"line_start":3,"line_end":3,"column_start":9,"column_end":14},"ref_id":{"krate":0,"index":175}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1870,"byte_end":1878,"line_start":73,"line_end":73,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":180}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\mod.rs","byte_start":39761,"byte_end":39769,"line_start":28,"line_end":28,"column_start":9,"column_end":17},"ref_id":{"krate":0,"index":262}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1904,"byte_end":1906,"line_start":76,"line_end":76,"column_start":9,"column_end":11},"ref_id":{"krate":0,"index":420}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":1952,"byte_end":1956,"line_start":79,"line_end":79,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":520}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2007,"byte_end":2010,"line_start":83,"line_end":83,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":677}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2044,"byte_end":2047,"line_start":85,"line_end":85,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":909}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2081,"byte_end":2084,"line_start":87,"line_end":87,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":948}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2118,"byte_end":2121,"line_start":89,"line_end":89,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1062}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2155,"byte_end":2158,"line_start":91,"line_end":91,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1161}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2192,"byte_end":2195,"line_start":93,"line_end":93,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1373}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2230,"byte_end":2234,"line_start":95,"line_end":95,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":1480}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2268,"byte_end":2271,"line_start":97,"line_end":97,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1661}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2305,"byte_end":2308,"line_start":99,"line_end":99,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":1733}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2342,"byte_end":2345,"line_start":101,"line_end":101,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2090}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2380,"byte_end":2384,"line_start":103,"line_end":103,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2194}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src/lib.rs","byte_start":2419,"byte_end":2423,"line_start":105,"line_end":105,"column_start":9,"column_end":13},"ref_id":{"krate":0,"index":2257}},{"kind":"Mod","span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\mod.rs","byte_start":503016,"byte_end":503019,"line_start":8,"line_end":8,"column_start":9,"column_end":12},"ref_id":{"krate":0,"index":2313}}],"macro_refs":[],"relations":[{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":10556,"byte_end":10566,"line_start":196,"line_end":196,"column_start":6,"column_end":16},"kind":{"Impl":{"id":0}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":11635,"byte_end":11651,"line_start":230,"line_end":230,"column_start":6,"column_end":22},"kind":{"Impl":{"id":1}},"from":{"krate":0,"index":3430},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":12635,"byte_end":12648,"line_start":261,"line_end":261,"column_start":6,"column_end":19},"kind":{"Impl":{"id":2}},"from":{"krate":0,"index":3491},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":14392,"byte_end":14405,"line_start":321,"line_end":321,"column_start":6,"column_end":19},"kind":{"Impl":{"id":3}},"from":{"krate":0,"index":3459},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15181,"byte_end":15195,"line_start":349,"line_end":349,"column_start":6,"column_end":20},"kind":{"Impl":{"id":4}},"from":{"krate":0,"index":3464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15574,"byte_end":15584,"line_start":364,"line_end":364,"column_start":6,"column_end":16},"kind":{"Impl":{"id":5}},"from":{"krate":0,"index":3497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":15941,"byte_end":15951,"line_start":378,"line_end":378,"column_start":26,"column_end":36},"kind":{"Impl":{"id":6}},"from":{"krate":0,"index":3409},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16067,"byte_end":16082,"line_start":384,"line_end":384,"column_start":28,"column_end":43},"kind":{"Impl":{"id":7}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16211,"byte_end":16226,"line_start":390,"line_end":390,"column_start":36,"column_end":51},"kind":{"Impl":{"id":8}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16476,"byte_end":16492,"line_start":399,"line_end":399,"column_start":32,"column_end":48},"kind":{"Impl":{"id":9}},"from":{"krate":0,"index":3430},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":16795,"byte_end":16805,"line_start":411,"line_end":411,"column_start":23,"column_end":33},"kind":{"Impl":{"id":10}},"from":{"krate":0,"index":3409},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":17266,"byte_end":17276,"line_start":424,"line_end":424,"column_start":16,"column_end":26},"kind":{"Impl":{"id":11}},"from":{"krate":0,"index":3409},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":17729,"byte_end":17745,"line_start":437,"line_end":437,"column_start":23,"column_end":39},"kind":{"Impl":{"id":12}},"from":{"krate":0,"index":3430},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":19367,"byte_end":19383,"line_start":480,"line_end":480,"column_start":16,"column_end":32},"kind":{"Impl":{"id":13}},"from":{"krate":0,"index":3430},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":19411,"byte_end":19425,"line_start":482,"line_end":482,"column_start":23,"column_end":37},"kind":{"Impl":{"id":14}},"from":{"krate":0,"index":3464},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":20313,"byte_end":20327,"line_start":510,"line_end":510,"column_start":16,"column_end":30},"kind":{"Impl":{"id":15}},"from":{"krate":0,"index":3464},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":20532,"byte_end":20545,"line_start":519,"line_end":519,"column_start":23,"column_end":36},"kind":{"Impl":{"id":16}},"from":{"krate":0,"index":3459},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":21006,"byte_end":21019,"line_start":537,"line_end":537,"column_start":16,"column_end":29},"kind":{"Impl":{"id":17}},"from":{"krate":0,"index":3459},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":21224,"byte_end":21237,"line_start":546,"line_end":546,"column_start":23,"column_end":36},"kind":{"Impl":{"id":18}},"from":{"krate":0,"index":3491},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22062,"byte_end":22075,"line_start":573,"line_end":573,"column_start":16,"column_end":29},"kind":{"Impl":{"id":19}},"from":{"krate":0,"index":3491},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22280,"byte_end":22290,"line_start":582,"line_end":582,"column_start":23,"column_end":33},"kind":{"Impl":{"id":20}},"from":{"krate":0,"index":3497},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22673,"byte_end":22683,"line_start":592,"line_end":592,"column_start":16,"column_end":26},"kind":{"Impl":{"id":21}},"from":{"krate":0,"index":3497},"to":{"krate":1,"index":1625}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\error.rs","byte_start":22711,"byte_end":22726,"line_start":594,"line_end":594,"column_start":23,"column_end":38},"kind":{"Impl":{"id":22}},"from":{"krate":0,"index":3523},"to":{"krate":2,"index":7585}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\math\\nq.rs","byte_start":26170,"byte_end":26178,"line_start":73,"line_end":73,"column_start":6,"column_end":14},"kind":{"Impl":{"id":23}},"from":{"krate":0,"index":153},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":63961,"byte_end":63968,"line_start":194,"line_end":194,"column_start":19,"column_end":26},"kind":{"Impl":{"id":24}},"from":{"krate":0,"index":3580},"to":{"krate":0,"index":301}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\colorops.rs","byte_start":64412,"byte_end":64420,"line_start":215,"line_end":215,"column_start":23,"column_end":31},"kind":{"Impl":{"id":25}},"from":{"krate":0,"index":153},"to":{"krate":0,"index":301}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\imageops\\sample.rs","byte_start":79389,"byte_end":79401,"line_start":363,"line_end":363,"column_start":34,"column_end":46},"kind":{"Impl":{"id":26}},"from":{"krate":0,"index":360},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":98218,"byte_end":98224,"line_start":67,"line_end":67,"column_start":15,"column_end":21},"kind":{"Impl":{"id":27}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":99590,"byte_end":99596,"line_start":114,"line_end":114,"column_start":6,"column_end":12},"kind":{"Impl":{"id":28}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\reader.rs","byte_start":100361,"byte_end":100367,"line_start":136,"line_end":136,"column_start":25,"column_end":31},"kind":{"Impl":{"id":29}},"from":{"krate":0,"index":438},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\io\\free_functions.rs","byte_start":114277,"byte_end":114287,"line_start":281,"line_end":281,"column_start":26,"column_end":36},"kind":{"Impl":{"id":30}},"from":{"krate":0,"index":3409},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":118210,"byte_end":118222,"line_start":109,"line_end":109,"column_start":6,"column_end":18},"kind":{"Impl":{"id":31}},"from":{"krate":0,"index":3612},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":130817,"byte_end":130820,"line_start":422,"line_end":422,"column_start":6,"column_end":9},"kind":{"Impl":{"id":32}},"from":{"krate":0,"index":3634},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":131078,"byte_end":131089,"line_start":437,"line_end":437,"column_start":14,"column_end":25},"kind":{"Impl":{"id":33}},"from":{"krate":0,"index":3601},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":152821,"byte_end":152825,"line_start":972,"line_end":972,"column_start":24,"column_end":28},"kind":{"Impl":{"id":34}},"from":{"krate":0,"index":3662},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":158410,"byte_end":158417,"line_start":1105,"line_end":1105,"column_start":24,"column_end":31},"kind":{"Impl":{"id":35}},"from":{"krate":0,"index":3675},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":162793,"byte_end":162804,"line_start":1219,"line_end":1219,"column_start":40,"column_end":51},"kind":{"Impl":{"id":36}},"from":{"krate":0,"index":3601},"to":{"krate":2,"index":1785}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":163413,"byte_end":163424,"line_start":1238,"line_end":1238,"column_start":43,"column_end":54},"kind":{"Impl":{"id":37}},"from":{"krate":0,"index":3601},"to":{"krate":2,"index":1789}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":164028,"byte_end":164032,"line_start":1256,"line_end":1256,"column_start":45,"column_end":49},"kind":{"Impl":{"id":38}},"from":{"krate":0,"index":3662},"to":{"krate":0,"index":3298}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":165279,"byte_end":165286,"line_start":1301,"line_end":1301,"column_start":45,"column_end":52},"kind":{"Impl":{"id":39}},"from":{"krate":0,"index":3675},"to":{"krate":0,"index":3298}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":166553,"byte_end":166560,"line_start":1346,"line_end":1346,"column_start":41,"column_end":48},"kind":{"Impl":{"id":40}},"from":{"krate":0,"index":3675},"to":{"krate":0,"index":3311}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":167455,"byte_end":167465,"line_start":1375,"line_end":1375,"column_start":22,"column_end":32},"kind":{"Impl":{"id":41}},"from":{"krate":0,"index":3409},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\flat.rs","byte_start":167864,"byte_end":167874,"line_start":1386,"line_end":1386,"column_start":21,"column_end":31},"kind":{"Impl":{"id":42}},"from":{"krate":0,"index":3712},"to":{"krate":2,"index":2082}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":176586,"byte_end":176597,"line_start":98,"line_end":98,"column_start":23,"column_end":34},"kind":{"Impl":{"id":43}},"from":{"krate":0,"index":739},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":185101,"byte_end":185109,"line_start":362,"line_end":362,"column_start":6,"column_end":14},"kind":{"Impl":{"id":44}},"from":{"krate":0,"index":3794},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":186567,"byte_end":186576,"line_start":408,"line_end":408,"column_start":6,"column_end":15},"kind":{"Impl":{"id":45}},"from":{"krate":0,"index":3804},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":187852,"byte_end":187867,"line_start":463,"line_end":463,"column_start":32,"column_end":47},"kind":{"Impl":{"id":46}},"from":{"krate":0,"index":805},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":189723,"byte_end":189733,"line_start":515,"line_end":515,"column_start":22,"column_end":32},"kind":{"Impl":{"id":47}},"from":{"krate":0,"index":772},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":220350,"byte_end":220359,"line_start":1292,"line_end":1292,"column_start":18,"column_end":27},"kind":{"Impl":{"id":48}},"from":{"krate":0,"index":850},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":220779,"byte_end":220789,"line_start":1306,"line_end":1306,"column_start":52,"column_end":62},"kind":{"Impl":{"id":49}},"from":{"krate":0,"index":772},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\decoder.rs","byte_start":221464,"byte_end":221474,"line_start":1331,"line_end":1331,"column_start":55,"column_end":65},"kind":{"Impl":{"id":50}},"from":{"krate":0,"index":772},"to":{"krate":0,"index":3274}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":222982,"byte_end":222992,"line_start":17,"line_end":17,"column_start":25,"column_end":35},"kind":{"Impl":{"id":51}},"from":{"krate":0,"index":890},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\bmp\\encoder.rs","byte_start":230455,"byte_end":230465,"line_start":222,"line_end":222,"column_start":37,"column_end":47},"kind":{"Impl":{"id":52}},"from":{"krate":0,"index":890},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":235561,"byte_end":235572,"line_start":44,"line_end":44,"column_start":6,"column_end":17},"kind":{"Impl":{"id":53}},"from":{"krate":0,"index":3828},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":236313,"byte_end":236319,"line_start":67,"line_end":67,"column_start":6,"column_end":12},"kind":{"Impl":{"id":54}},"from":{"krate":0,"index":3816},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":238028,"byte_end":238038,"line_start":120,"line_end":120,"column_start":15,"column_end":25},"kind":{"Impl":{"id":55}},"from":{"krate":0,"index":932},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dds.rs","byte_start":239089,"byte_end":239099,"line_start":147,"line_end":147,"column_start":45,"column_end":55},"kind":{"Impl":{"id":56}},"from":{"krate":0,"index":932},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":240864,"byte_end":240874,"line_start":33,"line_end":33,"column_start":6,"column_end":16},"kind":{"Impl":{"id":57}},"from":{"krate":0,"index":3839},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":241831,"byte_end":241841,"line_start":69,"line_end":69,"column_start":15,"column_end":25},"kind":{"Impl":{"id":58}},"from":{"krate":0,"index":970},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":243501,"byte_end":243511,"line_start":115,"line_end":115,"column_start":45,"column_end":55},"kind":{"Impl":{"id":59}},"from":{"krate":0,"index":970},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":244408,"byte_end":244418,"line_start":147,"line_end":147,"column_start":55,"column_end":65},"kind":{"Impl":{"id":60}},"from":{"krate":0,"index":970},"to":{"krate":0,"index":3274}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245380,"byte_end":245389,"line_start":177,"line_end":177,"column_start":24,"column_end":33},"kind":{"Impl":{"id":61}},"from":{"krate":0,"index":997},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dxt.rs","byte_start":245649,"byte_end":245659,"line_start":189,"line_end":189,"column_start":16,"column_end":26},"kind":{"Impl":{"id":62}},"from":{"krate":0,"index":1005},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269346,"byte_end":269356,"line_start":52,"line_end":52,"column_start":15,"column_end":25},"kind":{"Impl":{"id":63}},"from":{"krate":0,"index":1095},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":269808,"byte_end":269817,"line_start":66,"line_end":66,"column_start":18,"column_end":27},"kind":{"Impl":{"id":64}},"from":{"krate":0,"index":1101},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":270230,"byte_end":270240,"line_start":80,"line_end":80,"column_start":45,"column_end":55},"kind":{"Impl":{"id":65}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":272937,"byte_end":272953,"line_start":154,"line_end":154,"column_start":15,"column_end":31},"kind":{"Impl":{"id":66}},"from":{"krate":0,"index":1120},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":273565,"byte_end":273581,"line_start":176,"line_end":176,"column_start":28,"column_end":44},"kind":{"Impl":{"id":67}},"from":{"krate":0,"index":1120},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278555,"byte_end":278565,"line_start":304,"line_end":304,"column_start":49,"column_end":59},"kind":{"Impl":{"id":68}},"from":{"krate":0,"index":1095},"to":{"krate":0,"index":3280}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":278828,"byte_end":278835,"line_start":316,"line_end":316,"column_start":16,"column_end":23},"kind":{"Impl":{"id":69}},"from":{"krate":0,"index":1139},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\gif.rs","byte_start":282315,"byte_end":282325,"line_start":417,"line_end":417,"column_start":6,"column_end":16},"kind":{"Impl":{"id":70}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":283557,"byte_end":283567,"line_start":25,"line_end":25,"column_start":18,"column_end":28},"kind":{"Impl":{"id":71}},"from":{"krate":0,"index":3857},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":284848,"byte_end":284857,"line_start":65,"line_end":65,"column_start":18,"column_end":27},"kind":{"Impl":{"id":72}},"from":{"krate":0,"index":1193},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":285273,"byte_end":285283,"line_start":79,"line_end":79,"column_start":48,"column_end":58},"kind":{"Impl":{"id":73}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":285791,"byte_end":285801,"line_start":99,"line_end":99,"column_start":58,"column_end":68},"kind":{"Impl":{"id":74}},"from":{"krate":0,"index":3857},"to":{"krate":0,"index":3274}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":286856,"byte_end":286866,"line_start":142,"line_end":142,"column_start":6,"column_end":16},"kind":{"Impl":{"id":75}},"from":{"krate":0,"index":3873},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":289172,"byte_end":289182,"line_start":207,"line_end":207,"column_start":18,"column_end":28},"kind":{"Impl":{"id":76}},"from":{"krate":0,"index":3864},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":294959,"byte_end":294969,"line_start":362,"line_end":362,"column_start":35,"column_end":45},"kind":{"Impl":{"id":77}},"from":{"krate":0,"index":3864},"to":{"krate":2,"index":3900}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":295869,"byte_end":295892,"line_start":390,"line_end":390,"column_start":18,"column_end":41},"kind":{"Impl":{"id":78}},"from":{"krate":0,"index":1250},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":296185,"byte_end":296208,"line_start":403,"line_end":403,"column_start":31,"column_end":54},"kind":{"Impl":{"id":79}},"from":{"krate":0,"index":1250},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":297915,"byte_end":297938,"line_start":452,"line_end":452,"column_start":40,"column_end":63},"kind":{"Impl":{"id":80}},"from":{"krate":0,"index":1250},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":304683,"byte_end":304694,"line_start":640,"line_end":640,"column_start":6,"column_end":17},"kind":{"Impl":{"id":81}},"from":{"krate":0,"index":3893},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":311257,"byte_end":311263,"line_start":805,"line_end":805,"column_start":46,"column_end":52},"kind":{"Impl":{"id":82}},"from":{"krate":2,"index":29496},"to":{"krate":0,"index":1297}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\decoder.rs","byte_start":311533,"byte_end":311539,"line_start":813,"line_end":813,"column_start":46,"column_end":52},"kind":{"Impl":{"id":83}},"from":{"krate":2,"index":29496},"to":{"krate":0,"index":1297}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":315311,"byte_end":315321,"line_start":12,"line_end":12,"column_start":16,"column_end":26},"kind":{"Impl":{"id":84}},"from":{"krate":0,"index":1331},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":317883,"byte_end":317894,"line_start":89,"line_end":89,"column_start":10,"column_end":21},"kind":{"Impl":{"id":85}},"from":{"krate":0,"index":1343},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":318020,"byte_end":318031,"line_start":95,"line_end":95,"column_start":23,"column_end":34},"kind":{"Impl":{"id":86}},"from":{"krate":0,"index":1343},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":318732,"byte_end":318752,"line_start":124,"line_end":124,"column_start":10,"column_end":30},"kind":{"Impl":{"id":87}},"from":{"krate":0,"index":1355},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\hdr\\encoder.rs","byte_start":319011,"byte_end":319031,"line_start":134,"line_end":134,"column_start":23,"column_end":43},"kind":{"Impl":{"id":88}},"from":{"krate":0,"index":1355},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":331723,"byte_end":331733,"line_start":44,"line_end":44,"column_start":22,"column_end":32},"kind":{"Impl":{"id":89}},"from":{"krate":0,"index":1401},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":334152,"byte_end":334160,"line_start":119,"line_end":119,"column_start":6,"column_end":14},"kind":{"Impl":{"id":90}},"from":{"krate":0,"index":3923},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":335473,"byte_end":335482,"line_start":167,"line_end":167,"column_start":18,"column_end":27},"kind":{"Impl":{"id":91}},"from":{"krate":0,"index":1433},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\decoder.rs","byte_start":335902,"byte_end":335912,"line_start":181,"line_end":181,"column_start":52,"column_end":62},"kind":{"Impl":{"id":92}},"from":{"krate":0,"index":1401},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":340810,"byte_end":340820,"line_start":22,"line_end":22,"column_start":16,"column_end":26},"kind":{"Impl":{"id":93}},"from":{"krate":0,"index":1464},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\ico\\encoder.rs","byte_start":341814,"byte_end":341824,"line_start":55,"line_end":55,"column_start":33,"column_end":43},"kind":{"Impl":{"id":94}},"from":{"krate":0,"index":1464},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":344325,"byte_end":344336,"line_start":16,"line_end":16,"column_start":15,"column_end":26},"kind":{"Impl":{"id":95}},"from":{"krate":0,"index":1499},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":345045,"byte_end":345055,"line_start":38,"line_end":38,"column_start":18,"column_end":28},"kind":{"Impl":{"id":96}},"from":{"krate":0,"index":1506},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":345468,"byte_end":345479,"line_start":52,"line_end":52,"column_start":45,"column_end":56},"kind":{"Impl":{"id":97}},"from":{"krate":0,"index":1499},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":347266,"byte_end":347275,"line_start":115,"line_end":115,"column_start":6,"column_end":15},"kind":{"Impl":{"id":98}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\decoder.rs","byte_start":347533,"byte_end":347543,"line_start":126,"line_end":126,"column_start":6,"column_end":16},"kind":{"Impl":{"id":99}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":353669,"byte_end":353678,"line_start":168,"line_end":168,"column_start":25,"column_end":34},"kind":{"Impl":{"id":100}},"from":{"krate":0,"index":1576},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357307,"byte_end":357319,"line_start":309,"line_end":309,"column_start":6,"column_end":18},"kind":{"Impl":{"id":101}},"from":{"krate":0,"index":3972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":357657,"byte_end":357669,"line_start":321,"line_end":321,"column_start":18,"column_end":30},"kind":{"Impl":{"id":102}},"from":{"krate":0,"index":3972},"to":{"krate":2,"index":2210}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":358245,"byte_end":358256,"line_start":346,"line_end":346,"column_start":20,"column_end":31},"kind":{"Impl":{"id":103}},"from":{"krate":0,"index":1595},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\jpeg\\encoder.rs","byte_start":367594,"byte_end":367605,"line_start":635,"line_end":635,"column_start":37,"column_end":48},"kind":{"Impl":{"id":104}},"from":{"krate":0,"index":1595},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":385267,"byte_end":385276,"line_start":27,"line_end":27,"column_start":15,"column_end":24},"kind":{"Impl":{"id":105}},"from":{"krate":0,"index":1680},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":386034,"byte_end":386043,"line_start":51,"line_end":51,"column_start":24,"column_end":33},"kind":{"Impl":{"id":106}},"from":{"krate":0,"index":1680},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":387298,"byte_end":387308,"line_start":97,"line_end":97,"column_start":15,"column_end":25},"kind":{"Impl":{"id":107}},"from":{"krate":0,"index":1692},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":390686,"byte_end":390696,"line_start":155,"line_end":155,"column_start":45,"column_end":55},"kind":{"Impl":{"id":108}},"from":{"krate":0,"index":1692},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":392107,"byte_end":392117,"line_start":202,"line_end":202,"column_start":16,"column_end":26},"kind":{"Impl":{"id":109}},"from":{"krate":0,"index":1713},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":393609,"byte_end":393619,"line_start":232,"line_end":232,"column_start":33,"column_end":43},"kind":{"Impl":{"id":110}},"from":{"krate":0,"index":1713},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\png.rs","byte_start":394854,"byte_end":394864,"line_start":264,"line_end":264,"column_start":6,"column_end":16},"kind":{"Impl":{"id":111}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":402891,"byte_end":402900,"line_start":15,"line_end":15,"column_start":20,"column_end":29},"kind":{"Impl":{"id":112}},"from":{"krate":0,"index":1750},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":404161,"byte_end":404170,"line_start":58,"line_end":58,"column_start":34,"column_end":43},"kind":{"Impl":{"id":113}},"from":{"krate":0,"index":1750},"to":{"krate":1,"index":2914}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\autobreak.rs","byte_start":404796,"byte_end":404805,"line_start":82,"line_end":82,"column_start":29,"column_end":38},"kind":{"Impl":{"id":114}},"from":{"krate":0,"index":1750},"to":{"krate":2,"index":1731}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":407302,"byte_end":407312,"line_start":55,"line_end":55,"column_start":15,"column_end":25},"kind":{"Impl":{"id":115}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":410759,"byte_end":410766,"line_start":155,"line_end":155,"column_start":21,"column_end":28},"kind":"SuperTrait","from":{"krate":1,"index":2936},"to":{"krate":0,"index":1834}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":420506,"byte_end":420515,"line_start":412,"line_end":412,"column_start":32,"column_end":41},"kind":{"Impl":{"id":116}},"from":{"krate":1,"index":2322},"to":{"krate":0,"index":1834}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":420644,"byte_end":420653,"line_start":416,"line_end":416,"column_start":18,"column_end":27},"kind":{"Impl":{"id":117}},"from":{"krate":0,"index":1858},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":421066,"byte_end":421076,"line_start":430,"line_end":430,"column_start":45,"column_end":55},"kind":{"Impl":{"id":118}},"from":{"krate":0,"index":1821},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":422953,"byte_end":422963,"line_start":483,"line_end":483,"column_start":15,"column_end":25},"kind":{"Impl":{"id":119}},"from":{"krate":0,"index":1821},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":425436,"byte_end":425438,"line_start":552,"line_end":552,"column_start":17,"column_end":19},"kind":{"Impl":{"id":120}},"from":{"krate":0,"index":1811},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":426103,"byte_end":426106,"line_start":579,"line_end":579,"column_start":17,"column_end":20},"kind":{"Impl":{"id":121}},"from":{"krate":0,"index":1813},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":427378,"byte_end":427384,"line_start":618,"line_end":618,"column_start":17,"column_end":23},"kind":{"Impl":{"id":122}},"from":{"krate":0,"index":1815},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":429077,"byte_end":429082,"line_start":674,"line_end":674,"column_start":17,"column_end":22},"kind":{"Impl":{"id":123}},"from":{"krate":0,"index":1817},"to":{"krate":0,"index":1807}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":429994,"byte_end":430006,"line_start":706,"line_end":706,"column_start":31,"column_end":43},"kind":{"Impl":{"id":124}},"from":{"krate":0,"index":4056},"to":{"krate":0,"index":1819}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430131,"byte_end":430144,"line_start":712,"line_end":712,"column_start":31,"column_end":44},"kind":{"Impl":{"id":125}},"from":{"krate":0,"index":4065},"to":{"krate":0,"index":1819}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430524,"byte_end":430536,"line_start":724,"line_end":724,"column_start":31,"column_end":43},"kind":{"Impl":{"id":126}},"from":{"krate":0,"index":4075},"to":{"krate":0,"index":1819}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\decoder.rs","byte_start":430912,"byte_end":430927,"line_start":736,"line_end":736,"column_start":31,"column_end":46},"kind":{"Impl":{"id":127}},"from":{"krate":0,"index":4085},"to":{"krate":0,"index":1819}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":446926,"byte_end":446936,"line_start":78,"line_end":78,"column_start":16,"column_end":26},"kind":{"Impl":{"id":128}},"from":{"krate":0,"index":1954},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":454532,"byte_end":454542,"line_start":276,"line_end":276,"column_start":33,"column_end":43},"kind":{"Impl":{"id":129}},"from":{"krate":0,"index":1954},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":454775,"byte_end":454793,"line_start":288,"line_end":288,"column_start":10,"column_end":28},"kind":{"Impl":{"id":130}},"from":{"krate":0,"index":1958},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":455744,"byte_end":455759,"line_start":317,"line_end":317,"column_start":10,"column_end":25},"kind":{"Impl":{"id":131}},"from":{"krate":0,"index":1964},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":456300,"byte_end":456317,"line_start":338,"line_end":338,"column_start":10,"column_end":27},"kind":{"Impl":{"id":132}},"from":{"krate":0,"index":1967},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":460046,"byte_end":460064,"line_start":426,"line_end":426,"column_start":10,"column_end":28},"kind":{"Impl":{"id":133}},"from":{"krate":0,"index":1972},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":462435,"byte_end":462448,"line_start":487,"line_end":487,"column_start":10,"column_end":23},"kind":{"Impl":{"id":134}},"from":{"krate":0,"index":1976},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":462759,"byte_end":462771,"line_start":500,"line_end":500,"column_start":10,"column_end":22},"kind":{"Impl":{"id":135}},"from":{"krate":0,"index":2023},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":464188,"byte_end":464199,"line_start":545,"line_end":545,"column_start":10,"column_end":21},"kind":{"Impl":{"id":136}},"from":{"krate":0,"index":4003},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":465910,"byte_end":465921,"line_start":599,"line_end":599,"column_start":29,"column_end":40},"kind":{"Impl":{"id":137}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":466040,"byte_end":466051,"line_start":605,"line_end":605,"column_start":30,"column_end":41},"kind":{"Impl":{"id":138}},"from":{"krate":0,"index":4003},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\encoder.rs","byte_start":466152,"byte_end":466165,"line_start":611,"line_end":611,"column_start":10,"column_end":23},"kind":{"Impl":{"id":139}},"from":{"krate":0,"index":1981},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":471083,"byte_end":471093,"line_start":136,"line_end":136,"column_start":6,"column_end":16},"kind":{"Impl":{"id":140}},"from":{"krate":0,"index":4032},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":472063,"byte_end":472072,"line_start":161,"line_end":161,"column_start":6,"column_end":15},"kind":{"Impl":{"id":141}},"from":{"krate":0,"index":2052},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478252,"byte_end":478261,"line_start":314,"line_end":314,"column_start":29,"column_end":38},"kind":{"Impl":{"id":142}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478454,"byte_end":478463,"line_start":323,"line_end":323,"column_start":30,"column_end":39},"kind":{"Impl":{"id":143}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478657,"byte_end":478666,"line_start":332,"line_end":332,"column_start":29,"column_end":38},"kind":{"Impl":{"id":144}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\pnm\\header.rs","byte_start":478861,"byte_end":478870,"line_start":341,"line_end":341,"column_start":32,"column_end":41},"kind":{"Impl":{"id":145}},"from":{"krate":0,"index":2052},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":479835,"byte_end":479844,"line_start":23,"line_end":23,"column_start":6,"column_end":15},"kind":{"Impl":{"id":146}},"from":{"krate":0,"index":2108},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":481689,"byte_end":481695,"line_start":86,"line_end":86,"column_start":6,"column_end":12},"kind":{"Impl":{"id":147}},"from":{"krate":0,"index":4115},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":482964,"byte_end":482972,"line_start":131,"line_end":131,"column_start":6,"column_end":14},"kind":{"Impl":{"id":148}},"from":{"krate":0,"index":2140},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":484089,"byte_end":484099,"line_start":177,"line_end":177,"column_start":22,"column_end":32},"kind":{"Impl":{"id":149}},"from":{"krate":0,"index":2147},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":494541,"byte_end":494551,"line_start":468,"line_end":468,"column_start":52,"column_end":62},"kind":{"Impl":{"id":150}},"from":{"krate":0,"index":2147},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tga\\decoder.rs","byte_start":496250,"byte_end":496259,"line_start":524,"line_end":524,"column_start":31,"column_end":40},"kind":{"Impl":{"id":151}},"from":{"krate":0,"index":2186},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":497265,"byte_end":497276,"line_start":32,"line_end":32,"column_start":9,"column_end":20},"kind":{"Impl":{"id":152}},"from":{"krate":0,"index":2218},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":498819,"byte_end":498829,"line_start":67,"line_end":67,"column_start":6,"column_end":16},"kind":{"Impl":{"id":153}},"from":{"krate":0,"index":3409},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":499394,"byte_end":499404,"line_start":80,"line_end":80,"column_start":18,"column_end":28},"kind":{"Impl":{"id":154}},"from":{"krate":0,"index":2228},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":499824,"byte_end":499835,"line_start":94,"line_end":94,"column_start":52,"column_end":63},"kind":{"Impl":{"id":155}},"from":{"krate":0,"index":2218},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":501263,"byte_end":501274,"line_start":140,"line_end":140,"column_start":23,"column_end":34},"kind":{"Impl":{"id":156}},"from":{"krate":0,"index":2245},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\tiff.rs","byte_start":502682,"byte_end":502693,"line_start":165,"line_end":165,"column_start":40,"column_end":51},"kind":{"Impl":{"id":157}},"from":{"krate":0,"index":2245},"to":{"krate":0,"index":3283}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":503571,"byte_end":503582,"line_start":24,"line_end":24,"column_start":15,"column_end":26},"kind":{"Impl":{"id":158}},"from":{"krate":0,"index":2278},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":505739,"byte_end":505749,"line_start":104,"line_end":104,"column_start":18,"column_end":28},"kind":{"Impl":{"id":159}},"from":{"krate":0,"index":2290},"to":{"krate":1,"index":2860}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\decoder.rs","byte_start":506162,"byte_end":506173,"line_start":118,"line_end":118,"column_start":45,"column_end":56},"kind":{"Impl":{"id":160}},"from":{"krate":0,"index":2278},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":535064,"byte_end":535074,"line_start":674,"line_end":674,"column_start":6,"column_end":16},"kind":{"Impl":{"id":161}},"from":{"krate":0,"index":2389},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":539476,"byte_end":539486,"line_start":870,"line_end":870,"column_start":15,"column_end":25},"kind":{"Impl":{"id":162}},"from":{"krate":0,"index":2403},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":560479,"byte_end":560487,"line_start":1521,"line_end":1521,"column_start":6,"column_end":14},"kind":{"Impl":{"id":163}},"from":{"krate":0,"index":4130},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561104,"byte_end":561112,"line_start":1544,"line_end":1544,"column_start":18,"column_end":26},"kind":{"Impl":{"id":164}},"from":{"krate":0,"index":4130},"to":{"krate":2,"index":2210}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561177,"byte_end":561187,"line_start":1550,"line_end":1550,"column_start":6,"column_end":16},"kind":{"Impl":{"id":165}},"from":{"krate":0,"index":4157},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561476,"byte_end":561486,"line_start":1562,"line_end":1562,"column_start":18,"column_end":28},"kind":{"Impl":{"id":166}},"from":{"krate":0,"index":4157},"to":{"krate":2,"index":2210}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":561553,"byte_end":561562,"line_start":1568,"line_end":1568,"column_start":6,"column_end":15},"kind":{"Impl":{"id":167}},"from":{"krate":0,"index":4181},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\webp\\vp8.rs","byte_start":562099,"byte_end":562108,"line_start":1586,"line_end":1586,"column_start":18,"column_end":27},"kind":{"Impl":{"id":168}},"from":{"krate":0,"index":4181},"to":{"krate":2,"index":2210}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":576817,"byte_end":576823,"line_start":14,"line_end":14,"column_start":10,"column_end":16},"kind":{"Impl":{"id":169}},"from":{"krate":0,"index":2497},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577413,"byte_end":577419,"line_start":30,"line_end":30,"column_start":23,"column_end":29},"kind":{"Impl":{"id":170}},"from":{"krate":0,"index":2497},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":577938,"byte_end":577943,"line_start":55,"line_end":55,"column_start":6,"column_end":11},"kind":{"Impl":{"id":171}},"from":{"krate":0,"index":4274},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":578892,"byte_end":578897,"line_start":102,"line_end":102,"column_start":6,"column_end":11},"kind":{"Impl":{"id":172}},"from":{"krate":0,"index":4281},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\animation.rs","byte_start":584933,"byte_end":584941,"line_start":258,"line_end":258,"column_start":22,"column_end":30},"kind":{"Impl":{"id":173}},"from":{"krate":2,"index":31429},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588301,"byte_end":588305,"line_start":19,"line_end":19,"column_start":18,"column_end":22},"kind":"SuperTrait","from":{"krate":2,"index":1548},"to":{"krate":0,"index":2569}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":588308,"byte_end":588313,"line_start":19,"line_end":19,"column_start":25,"column_end":30},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":2569}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593642,"byte_end":593648,"line_start":179,"line_end":179,"column_start":38,"column_end":44},"kind":{"Impl":{"id":174}},"from":{"krate":0,"index":2611},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":593892,"byte_end":593898,"line_start":191,"line_end":191,"column_start":47,"column_end":53},"kind":{"Impl":{"id":175}},"from":{"krate":0,"index":2611},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594047,"byte_end":594053,"line_start":200,"line_end":200,"column_start":49,"column_end":55},"kind":{"Impl":{"id":176}},"from":{"krate":0,"index":2611},"to":{"krate":2,"index":3859}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594423,"byte_end":594432,"line_start":218,"line_end":218,"column_start":38,"column_end":47},"kind":{"Impl":{"id":177}},"from":{"krate":0,"index":2630},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594688,"byte_end":594697,"line_start":230,"line_end":230,"column_start":47,"column_end":56},"kind":{"Impl":{"id":178}},"from":{"krate":0,"index":2630},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":594846,"byte_end":594855,"line_start":239,"line_end":239,"column_start":49,"column_end":58},"kind":{"Impl":{"id":179}},"from":{"krate":0,"index":2630},"to":{"krate":2,"index":3859}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595259,"byte_end":595263,"line_start":259,"line_end":259,"column_start":38,"column_end":42},"kind":{"Impl":{"id":180}},"from":{"krate":0,"index":2649},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595586,"byte_end":595590,"line_start":273,"line_end":273,"column_start":47,"column_end":51},"kind":{"Impl":{"id":181}},"from":{"krate":0,"index":2649},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":595739,"byte_end":595743,"line_start":282,"line_end":282,"column_start":49,"column_end":53},"kind":{"Impl":{"id":182}},"from":{"krate":0,"index":2649},"to":{"krate":2,"index":3859}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596198,"byte_end":596205,"line_start":302,"line_end":302,"column_start":38,"column_end":45},"kind":{"Impl":{"id":183}},"from":{"krate":0,"index":2668},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596541,"byte_end":596548,"line_start":316,"line_end":316,"column_start":47,"column_end":54},"kind":{"Impl":{"id":184}},"from":{"krate":0,"index":2668},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":596697,"byte_end":596704,"line_start":325,"line_end":325,"column_start":49,"column_end":56},"kind":{"Impl":{"id":185}},"from":{"krate":0,"index":2668},"to":{"krate":2,"index":3859}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597200,"byte_end":597215,"line_start":348,"line_end":348,"column_start":38,"column_end":53},"kind":{"Impl":{"id":186}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597618,"byte_end":597633,"line_start":366,"line_end":366,"column_start":47,"column_end":62},"kind":{"Impl":{"id":187}},"from":{"krate":0,"index":2687},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":597945,"byte_end":597958,"line_start":385,"line_end":385,"column_start":38,"column_end":51},"kind":{"Impl":{"id":188}},"from":{"krate":0,"index":2704},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":598496,"byte_end":598509,"line_start":409,"line_end":409,"column_start":47,"column_end":60},"kind":{"Impl":{"id":189}},"from":{"krate":0,"index":2704},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":598845,"byte_end":598863,"line_start":429,"line_end":429,"column_start":38,"column_end":56},"kind":{"Impl":{"id":190}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":599274,"byte_end":599292,"line_start":447,"line_end":447,"column_start":47,"column_end":65},"kind":{"Impl":{"id":191}},"from":{"krate":0,"index":2720},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":599610,"byte_end":599626,"line_start":466,"line_end":466,"column_start":38,"column_end":54},"kind":{"Impl":{"id":192}},"from":{"krate":0,"index":2737},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":600173,"byte_end":600189,"line_start":490,"line_end":490,"column_start":47,"column_end":63},"kind":{"Impl":{"id":193}},"from":{"krate":0,"index":2737},"to":{"krate":2,"index":3888}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":600691,"byte_end":600702,"line_start":512,"line_end":512,"column_start":20,"column_end":31},"kind":{"Impl":{"id":194}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":606343,"byte_end":606354,"line_start":679,"line_end":679,"column_start":20,"column_end":31},"kind":{"Impl":{"id":195}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":608524,"byte_end":608535,"line_start":748,"line_end":748,"column_start":20,"column_end":31},"kind":{"Impl":{"id":196}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":609187,"byte_end":609198,"line_start":773,"line_end":773,"column_start":20,"column_end":31},"kind":{"Impl":{"id":197}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":609941,"byte_end":609952,"line_start":800,"line_end":800,"column_start":30,"column_end":41},"kind":{"Impl":{"id":198}},"from":{"krate":0,"index":4301},"to":{"krate":2,"index":1709}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610216,"byte_end":610227,"line_start":813,"line_end":813,"column_start":33,"column_end":44},"kind":{"Impl":{"id":199}},"from":{"krate":0,"index":4301},"to":{"krate":2,"index":1720}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610493,"byte_end":610504,"line_start":824,"line_end":824,"column_start":42,"column_end":53},"kind":{"Impl":{"id":200}},"from":{"krate":0,"index":4301},"to":{"krate":2,"index":1785}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":610775,"byte_end":610786,"line_start":837,"line_end":837,"column_start":45,"column_end":56},"kind":{"Impl":{"id":201}},"from":{"krate":0,"index":4301},"to":{"krate":2,"index":1789}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":611047,"byte_end":611058,"line_start":848,"line_end":848,"column_start":30,"column_end":41},"kind":{"Impl":{"id":202}},"from":{"krate":0,"index":4301},"to":{"krate":2,"index":2185}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":611417,"byte_end":611428,"line_start":863,"line_end":863,"column_start":41,"column_end":52},"kind":{"Impl":{"id":203}},"from":{"krate":0,"index":4301},"to":{"krate":0,"index":3298}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":612252,"byte_end":612263,"line_start":896,"line_end":896,"column_start":37,"column_end":48},"kind":{"Impl":{"id":204}},"from":{"krate":0,"index":4301},"to":{"krate":0,"index":3311}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":615848,"byte_end":615859,"line_start":988,"line_end":988,"column_start":26,"column_end":37},"kind":{"Impl":{"id":205}},"from":{"krate":0,"index":4301},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":618293,"byte_end":618302,"line_start":1066,"line_end":1066,"column_start":6,"column_end":15},"kind":{"Impl":{"id":206}},"from":{"krate":0,"index":2862},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\buffer.rs","byte_start":619700,"byte_end":619711,"line_start":1104,"line_end":1104,"column_start":67,"column_end":78},"kind":{"Impl":{"id":207}},"from":{"krate":0,"index":4301},"to":{"krate":0,"index":2847}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":628668,"byte_end":628677,"line_start":37,"line_end":37,"column_start":6,"column_end":15},"kind":{"Impl":{"id":208}},"from":{"krate":0,"index":4312},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":630684,"byte_end":630701,"line_start":106,"line_end":106,"column_start":6,"column_end":23},"kind":{"Impl":{"id":209}},"from":{"krate":0,"index":4351},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":631989,"byte_end":632006,"line_start":140,"line_end":140,"column_start":26,"column_end":43},"kind":{"Impl":{"id":210}},"from":{"krate":0,"index":4351},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":638102,"byte_end":638103,"line_start":346,"line_end":346,"column_start":32,"column_end":33},"kind":{"Impl":{"id":211}},"from":{"krate":0,"index":2893},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":638541,"byte_end":638542,"line_start":360,"line_end":360,"column_start":29,"column_end":30},"kind":{"Impl":{"id":212}},"from":{"krate":0,"index":2900},"to":{"krate":0,"index":2895}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":639798,"byte_end":639802,"line_start":404,"line_end":404,"column_start":53,"column_end":57},"kind":{"Impl":{"id":213}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640031,"byte_end":640035,"line_start":412,"line_end":412,"column_start":53,"column_end":57},"kind":{"Impl":{"id":214}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640263,"byte_end":640267,"line_start":420,"line_end":420,"column_start":52,"column_end":56},"kind":{"Impl":{"id":215}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640492,"byte_end":640496,"line_start":428,"line_end":428,"column_start":52,"column_end":56},"kind":{"Impl":{"id":216}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640723,"byte_end":640727,"line_start":436,"line_end":436,"column_start":54,"column_end":58},"kind":{"Impl":{"id":217}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":640875,"byte_end":640879,"line_start":443,"line_end":443,"column_start":31,"column_end":35},"kind":{"Impl":{"id":218}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641123,"byte_end":641127,"line_start":452,"line_end":452,"column_start":30,"column_end":34},"kind":{"Impl":{"id":219}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641371,"byte_end":641375,"line_start":461,"line_end":461,"column_start":31,"column_end":35},"kind":{"Impl":{"id":220}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641561,"byte_end":641565,"line_start":468,"line_end":468,"column_start":30,"column_end":34},"kind":{"Impl":{"id":221}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641751,"byte_end":641755,"line_start":475,"line_end":475,"column_start":32,"column_end":36},"kind":{"Impl":{"id":222}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":641992,"byte_end":641997,"line_start":485,"line_end":485,"column_start":53,"column_end":58},"kind":{"Impl":{"id":223}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642259,"byte_end":642264,"line_start":494,"line_end":494,"column_start":53,"column_end":58},"kind":{"Impl":{"id":224}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642525,"byte_end":642530,"line_start":503,"line_end":503,"column_start":52,"column_end":57},"kind":{"Impl":{"id":225}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":642795,"byte_end":642800,"line_start":512,"line_end":512,"column_start":52,"column_end":57},"kind":{"Impl":{"id":226}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643066,"byte_end":643071,"line_start":521,"line_end":521,"column_start":53,"column_end":58},"kind":{"Impl":{"id":227}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643284,"byte_end":643289,"line_start":529,"line_end":529,"column_start":32,"column_end":37},"kind":{"Impl":{"id":228}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643589,"byte_end":643594,"line_start":539,"line_end":539,"column_start":31,"column_end":36},"kind":{"Impl":{"id":229}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":643937,"byte_end":643941,"line_start":552,"line_end":552,"column_start":52,"column_end":56},"kind":{"Impl":{"id":230}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644242,"byte_end":644246,"line_start":563,"line_end":563,"column_start":52,"column_end":56},"kind":{"Impl":{"id":231}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644548,"byte_end":644552,"line_start":574,"line_end":574,"column_start":53,"column_end":57},"kind":{"Impl":{"id":232}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":644853,"byte_end":644857,"line_start":585,"line_end":585,"column_start":54,"column_end":58},"kind":{"Impl":{"id":233}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645158,"byte_end":645162,"line_start":596,"line_end":596,"column_start":53,"column_end":57},"kind":{"Impl":{"id":234}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645439,"byte_end":645443,"line_start":607,"line_end":607,"column_start":31,"column_end":35},"kind":{"Impl":{"id":235}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":645805,"byte_end":645809,"line_start":618,"line_end":618,"column_start":30,"column_end":34},"kind":{"Impl":{"id":236}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646206,"byte_end":646210,"line_start":632,"line_end":632,"column_start":52,"column_end":56},"kind":{"Impl":{"id":237}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646511,"byte_end":646515,"line_start":643,"line_end":643,"column_start":52,"column_end":56},"kind":{"Impl":{"id":238}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":646817,"byte_end":646821,"line_start":654,"line_end":654,"column_start":53,"column_end":57},"kind":{"Impl":{"id":239}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647122,"byte_end":647126,"line_start":665,"line_end":665,"column_start":54,"column_end":58},"kind":{"Impl":{"id":240}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647427,"byte_end":647431,"line_start":676,"line_end":676,"column_start":53,"column_end":57},"kind":{"Impl":{"id":241}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":647755,"byte_end":647758,"line_start":690,"line_end":690,"column_start":53,"column_end":56},"kind":{"Impl":{"id":242}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648027,"byte_end":648030,"line_start":700,"line_end":700,"column_start":53,"column_end":56},"kind":{"Impl":{"id":243}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648298,"byte_end":648301,"line_start":710,"line_end":710,"column_start":52,"column_end":55},"kind":{"Impl":{"id":244}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648566,"byte_end":648569,"line_start":720,"line_end":720,"column_start":54,"column_end":57},"kind":{"Impl":{"id":245}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":648833,"byte_end":648836,"line_start":730,"line_end":730,"column_start":53,"column_end":56},"kind":{"Impl":{"id":246}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649074,"byte_end":649077,"line_start":740,"line_end":740,"column_start":30,"column_end":33},"kind":{"Impl":{"id":247}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649302,"byte_end":649305,"line_start":748,"line_end":748,"column_start":29,"column_end":32},"kind":{"Impl":{"id":248}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649578,"byte_end":649581,"line_start":759,"line_end":759,"column_start":53,"column_end":56},"kind":{"Impl":{"id":249}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":649849,"byte_end":649852,"line_start":769,"line_end":769,"column_start":52,"column_end":55},"kind":{"Impl":{"id":250}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650117,"byte_end":650120,"line_start":780,"line_end":780,"column_start":53,"column_end":56},"kind":{"Impl":{"id":251}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650390,"byte_end":650393,"line_start":790,"line_end":790,"column_start":54,"column_end":57},"kind":{"Impl":{"id":252}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":650657,"byte_end":650660,"line_start":800,"line_end":800,"column_start":53,"column_end":56},"kind":{"Impl":{"id":253}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":2889}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":652326,"byte_end":652331,"line_start":854,"line_end":854,"column_start":30,"column_end":35},"kind":{"Impl":{"id":254}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":653336,"byte_end":653340,"line_start":887,"line_end":887,"column_start":30,"column_end":34},"kind":{"Impl":{"id":255}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":653450,"byte_end":653454,"line_start":893,"line_end":893,"column_start":30,"column_end":34},"kind":{"Impl":{"id":256}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":655662,"byte_end":655666,"line_start":951,"line_end":951,"column_start":30,"column_end":34},"kind":{"Impl":{"id":257}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":657872,"byte_end":657875,"line_start":1007,"line_end":1007,"column_start":30,"column_end":33},"kind":{"Impl":{"id":258}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":657984,"byte_end":657987,"line_start":1013,"line_end":1013,"column_start":30,"column_end":33},"kind":{"Impl":{"id":259}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":3023}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658206,"byte_end":658211,"line_start":1026,"line_end":1026,"column_start":31,"column_end":36},"kind":{"Impl":{"id":260}},"from":{"krate":0,"index":4862},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658384,"byte_end":658388,"line_start":1035,"line_end":1035,"column_start":31,"column_end":35},"kind":{"Impl":{"id":261}},"from":{"krate":0,"index":4775},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658576,"byte_end":658580,"line_start":1046,"line_end":1046,"column_start":31,"column_end":35},"kind":{"Impl":{"id":262}},"from":{"krate":0,"index":4804},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":658793,"byte_end":658797,"line_start":1057,"line_end":1057,"column_start":31,"column_end":35},"kind":{"Impl":{"id":263}},"from":{"krate":0,"index":4833},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":659010,"byte_end":659013,"line_start":1068,"line_end":1068,"column_start":31,"column_end":34},"kind":{"Impl":{"id":264}},"from":{"krate":0,"index":4717},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\color.rs","byte_start":659275,"byte_end":659278,"line_start":1082,"line_end":1082,"column_start":31,"column_end":34},"kind":{"Impl":{"id":265}},"from":{"krate":0,"index":4746},"to":{"krate":0,"index":3043}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":670579,"byte_end":670591,"line_start":128,"line_end":128,"column_start":6,"column_end":18},"kind":{"Impl":{"id":266}},"from":{"krate":0,"index":4942},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":694062,"byte_end":694074,"line_start":786,"line_end":786,"column_start":27,"column_end":39},"kind":{"Impl":{"id":267}},"from":{"krate":0,"index":4942},"to":{"krate":0,"index":3298}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\dynimage.rs","byte_start":694607,"byte_end":694619,"line_start":808,"line_end":808,"column_start":23,"column_end":35},"kind":{"Impl":{"id":268}},"from":{"krate":0,"index":4942},"to":{"krate":0,"index":3311}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":708549,"byte_end":708560,"line_start":59,"line_end":59,"column_start":6,"column_end":17},"kind":{"Impl":{"id":269}},"from":{"krate":0,"index":4975},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":709886,"byte_end":709903,"line_start":104,"line_end":104,"column_start":28,"column_end":45},"kind":{"Impl":{"id":270}},"from":{"krate":0,"index":5016},"to":{"krate":2,"index":2227}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":711022,"byte_end":711037,"line_start":138,"line_end":138,"column_start":6,"column_end":21},"kind":{"Impl":{"id":271}},"from":{"krate":0,"index":3235},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718332,"byte_end":718340,"line_start":308,"line_end":308,"column_start":6,"column_end":14},"kind":{"Impl":{"id":272}},"from":{"krate":0,"index":5048},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":718846,"byte_end":718851,"line_start":328,"line_end":328,"column_start":29,"column_end":34},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3261}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":722510,"byte_end":722522,"line_start":425,"line_end":425,"column_start":32,"column_end":44},"kind":"SuperTrait","from":{"krate":0,"index":3261},"to":{"krate":0,"index":3274}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":722529,"byte_end":722534,"line_start":425,"line_end":425,"column_start":51,"column_end":56},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3274}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":724237,"byte_end":724243,"line_start":486,"line_end":486,"column_start":44,"column_end":50},"kind":{"Impl":{"id":273}},"from":{"krate":0,"index":3285},"to":{"krate":2,"index":3602}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":727048,"byte_end":727064,"line_start":584,"line_end":584,"column_start":25,"column_end":41},"kind":"SuperTrait","from":{"krate":0,"index":3298},"to":{"krate":0,"index":3311}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":732296,"byte_end":732304,"line_start":722,"line_end":722,"column_start":9,"column_end":17},"kind":{"Impl":{"id":274}},"from":{"krate":0,"index":3323},"to":{"krate":4294967295,"index":4294967295}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":733441,"byte_end":733449,"line_start":763,"line_end":763,"column_start":30,"column_end":38},"kind":{"Impl":{"id":275}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":3298}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\image.rs","byte_start":734270,"byte_end":734278,"line_start":795,"line_end":795,"column_start":26,"column_end":34},"kind":{"Impl":{"id":276}},"from":{"krate":0,"index":3323},"to":{"krate":0,"index":3311}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745591,"byte_end":745606,"line_start":10,"line_end":10,"column_start":35,"column_end":50},"kind":"SuperTrait","from":{"krate":0,"index":3391},"to":{"krate":0,"index":3362}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745960,"byte_end":745964,"line_start":28,"line_end":28,"column_start":22,"column_end":26},"kind":"SuperTrait","from":{"krate":2,"index":1548},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745967,"byte_end":745974,"line_start":28,"line_end":28,"column_start":29,"column_end":36},"kind":"SuperTrait","from":{"krate":19,"index":179},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745977,"byte_end":745980,"line_start":28,"line_end":28,"column_start":39,"column_end":42},"kind":"SuperTrait","from":{"krate":19,"index":573},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":745983,"byte_end":745993,"line_start":28,"line_end":28,"column_start":45,"column_end":55},"kind":"SuperTrait","from":{"krate":2,"index":2082},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746002,"byte_end":746007,"line_start":28,"line_end":28,"column_start":64,"column_end":69},"kind":"SuperTrait","from":{"krate":2,"index":2185},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746010,"byte_end":746017,"line_start":28,"line_end":28,"column_start":72,"column_end":79},"kind":"SuperTrait","from":{"krate":19,"index":96},"to":{"krate":0,"index":3368}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746493,"byte_end":746498,"line_start":45,"line_end":45,"column_start":24,"column_end":29},"kind":"SuperTrait","from":{"krate":2,"index":1543},"to":{"krate":0,"index":3381}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746501,"byte_end":746508,"line_start":45,"line_end":45,"column_start":32,"column_end":39},"kind":"SuperTrait","from":{"krate":19,"index":96},"to":{"krate":0,"index":3381}},{"span":{"file_name":"C:\\Users\\Moi\\.cargo\\registry\\src\\github.com-1ecc6299db9ec823\\image-0.23.0\\./src\\traits.rs","byte_start":746511,"byte_end":746518,"line_start":45,"line_end":45,"column_start":42,"column_end":49},"kind":"SuperTrait","from":{"krate":19,"index":179},"to":{"krate":0,"index":3381}}]}